[
    {
        "link": "https://support.google.com/docs/answer/3238496?hl=en",
        "document": "Returns the sum of a range depending on multiple criteria.\n• - The range to be summed.\n• - The range to check against .\n• - The pattern or test to apply to .\n\n: Returns the sum of a series of numbers and/or cells.\n\n: Returns the sum of the squares of a series of numbers and/or cells.\n\n: Given parameters , , , and , returns the power series sum a xn + a x(n+m) + ... + a x(n+(i-1)m), where i is the number of entries in range `a`.\n\n: Returns one number divided by another, without the remainder.\n\n: Returns the result of multiplying a series of numbers together.\n\n: Returns the product of two numbers. Equivalent to the `*` operator.\n\n: Returns the difference of two numbers. Equivalent to the `-` operator.\n\n: Returns the sum of values selected from a database table-like array or range using a SQL-like query.\n\n: Returns one number divided by another. Equivalent to the `/` operator.\n\n: Returns the sum of two numbers. Equivalent to the `+` operator."
    },
    {
        "link": "https://stackoverflow.com/questions/68718796/sumifs-with-date-difference-in-range",
        "document": "\n• other lists of recurring stuff, not important\n• an estimation of inflow and outflow monthly\n\nThe estimation is calculated with the following criteria (in AND logic):\n• date is between \"since\" and \"to\" (if since is empty, it is always valid, and the same for \"to\")\n• the month is a multiple of \"every month\" starting from \"since\", i.e. the voice must be included if \"data\" = \"since\" + \"every months\" * x, where x is an integer number\n\nI wanted to create a sumifs like the following (Italian Excel, sorry): =SOMMA.PIÙ.SE('Uscite'!$E$2:$E$1048576;'Uscite'!$C$2:$C$1048576;\"<=\"&'v3'!$A2;'Uscite'!$D$2:$D$1048576;\">=\"&'v3'!$A2;?????)\n\nwhere ????? is the missing piece: I considered using a DATEDIF with \"m\", in order to get the difference in months between cell Ax and 'Uscite'!Since, then verifying if this difference is a perfect multiple of \"every months\", but no clue how to do it. Any suggestion?\n\nThanks for your time!"
    },
    {
        "link": "https://support.google.com/docs/answer/3093583?hl=en",
        "document": "\n• - The range which is tested against .\n• - The pattern or test to apply to .\n• If contains text to check against, must be a string. can contain wildcards including to match any single character or to match zero or more contiguous characters. To match an actual question mark or asterisk, prefix the character with the tilde ( ) character (i.e. and ). A string criterion must be enclosed in quotation marks. Each cell in is then checked against for equality (or match, if wildcards are used).\n• If contains numbers to check against, may be either a string or a number. If a number is provided, each cell in is checked for equality with . Otherwise, may be a string containing a number (which also checks for equality), or a number prefixed with any of the following operators: (checks for equality), (checks that the range cell value is greater than the criterion value), or (checks that the range cell value is less than the criterion value)\n• - The range to be summed, if different from .\n• can only perform conditional sums with a single criterion. To use multiple criteria, use the database function .\n\n: Returns the sum of the squares of a series of numbers and/or cells.\n\n: Returns the sum of a series of numbers and/or cells.\n\n: Given parameters , , , and , returns the power series sum a xn + a x(n+m) + ... + a x(n+(i-1)m), where i is the number of entries in range `a`.\n\n: Returns one number divided by another, without the remainder.\n\n: Returns the result of multiplying a series of numbers together.\n\n: Returns the product of two numbers. Equivalent to the `*` operator.\n\n: Returns the difference of two numbers. Equivalent to the `-` operator.\n\n: Returns the sum of values selected from a database table-like array or range using a SQL-like query.\n\n: Returns one number divided by another. Equivalent to the `/` operator.\n\n: Returns the sum of two numbers. Equivalent to the `+` operator."
    },
    {
        "link": "https://coefficient.io/sumifs-google-sheets",
        "document": "The SUMIFS function in Google Sheets enables you to sum values in your spreadsheet based on predefined conditions.\n\nUnlike the SUMIF function, which adds values to a sum based on a single condition, SUMIFS can enforce two or more conditions. The Google Sheets SUMIFS function only adds a value to a sum when all these conditions are met.\n\nThis ultimate guide to SUMIFS in Google Sheets will show you how to master the function through a series of sample formulas, example use cases, and step-by-step walkthroughs. Also, watch our video tutorial below for a full overview of the Google Sheets SUMIFS function.\n\nVideo Tutorial: How to Use SUMIFS in Google Sheets\n\nWhy use the SUMIFS function in Google Sheets?\n\nIn Google Sheets, the most basic way to get the sum of cell values is to create an additive formula.\n\nHowever, this rudimentary method isn’t practical when adding longer ranges of cells, such as entire rows or columns. That’s what SUM is for. But SUM isn’t feasible when you only want to sum certain values within a range.\n\nSUMIFS is a better option in such cases. Think of SUMIFS as a SUM function with superpowers. With SUMIFS, you can calculate sums across ranges easily, and define criteria to exclude certain values from the sum.\n\nThe basic syntax of the SUMIFS function looks like this:\n\nThe syntax consists of the following arguments:\n• Sum_range is the range of cells you want to sum.\n• Criteria_range1 is the range of cells you want to test with your criteria.\n• Criteria1 defines the criteria for the cells in Criteria_range1. The cells that meet the criteria are added to the sum.\n• Criteria_range2, criteria2, … represent additional ranges and criteria within a SUMIFs function. You can include a maximum of 127 range/criteria pairs per formula.\n\nEach SUMIFs formula must define at least one range/criteria pair, although in that case, a SUMIF formula can accomplish the same operation.\n\nKey tips for using SUMIFS function in Google Sheets\n\nWhile implementing SUMIFS formulas in Google Sheets is relatively straightforward, consider these key tips to ensure a smooth process.\n• SUMIFS only adds cell values that meet all the defined criteria, similar to the logical operator AND in programming languages.\n• You must enclose dates, text, and wildcard characters in quotation marks.\n• Criteria_ranges must not exceed the Sum_range, or the SUMIFS formula will result in a #VALUE error.\n• You need to insert logical operators in double-quotes within text, numbers, and dates.\n\nThese tips will allow you to steer clear of the most common errors we’ve seen users make. Now onto the examples.\n\nHow to use the SUMIFS function in Google Sheets\n\nBefore using SUMIFS formulas, let’s set up a sample dataset first. For this example, we’ll import sales data from HubSpot to Google Sheets using Coefficient. The Coefficient app lets you automatically sync data from your business systems with Sheets.\n\nNow let’s use this real-life data set to learn how to use the SUMIFS function. Let’s say you want the total amount for a specific item with a certain subscription status, such as Active Basic plans.\n\nIn theory, you could use an arrayformula that looks like this:\n\nWhile using an ARRAY formula gives your expected result, it can be needlessly complex. An easier method is to use the Google Sheets SUMIFS function.\n\nLet’s define the arguments in the SUMIFS formula. We only want to add values associated with Active Basic plans:\n• Criteria_range1 is A6:A14, and criteria1 is “Basic”.\n• Criteria_range2 is C6:C14, and criteria2 is “Active”.\n• The Sum_range is B6:B14, since the values we want to sum are in column B.\n\nThe entire SUMIFS formula will look like this:\n\nThe final result corresponds to each argument in the formula:\n\nYou can use Coefficient’s free Formula Builder to automatically create your SUMIF formulas for you. To use Formula Builder, you need to install Coefficient by following along with the prompts. The install process takes less than a minute.\n\nOnce the installation is finished, return to Extensions on the Google Sheets menu. Coefficient will be available as an add-on.\n\nNow launch the app. Coefficient will run on the sidebar of your Google Sheet. Select GPT Copilot on the Coefficient sidebar.\n\nType a description of a formula into the text box. For this example, type: Add the value in B6:B14 if the value in A6:A14 is “basic” and the value in C6:C14 is “active”.\n\nThen press ‘Build’. Formula Builder will automatically generate the formula from the first example.\n\nSimply copy-paste your SUMIF formula in the desired cell.\n\nNow that we know the basics, let’s go over several other examples of using SUMIFS formulas with different criteria types.\n\nYou should use comparison operators when SUMIFS criteria refer to dates or numbers. Here’s a refresher on how to deploy comparison operators in Google Sheets:\n• Greater than or equal to (>=)\n• Less than or equal to (<=)\n\nThe SUMIFS formula below identifies subscriptions active before April 1st, 2022, and sums the values greater than or equal to 200.\n\nIf you want to replace values with cell references, enclose the logical operator in quotation marks. Also, use an ampersand to concatenate the reference cell.\n\nYour formula will look like this:\n\nUsing SUMIFS with blank and non-blank cells\n\nYou can also sum numbers in one column if a cell in a separate column is empty. Here’s how:\n\nLet’s say the Activation Date column has empty cells. You can write a SUMIFS formula to sum Basic plans with set activation dates, based on the empty cells:\n\nUsing SUMIFS with other functions\n\nThe conditions in a SUMIFs formula can use other functions as dependencies. In other words, you can embed other functions in the SUMIFS formula’s criteria.\n\nLet’s say we want to include activation dates from today. In this case, we can concatenate the less than or equal to operator (<+) with the TODAY () function inside the SUMIFS formula:\n\nUsing SUMIFS with multiple OR criteria in the same column\n\nYou can add two SUMIFS functions together as well. For instance, if you want to sum the values for “Basic” or “Enterprise” plans, you can use a SUMIFS() + SUMIFS() combination:\n\nIf there are three or more criteria, you should opt for a more compact formula. Include the items in an inline array. Use ArrayFormula to produce each item’s subtotal, and wrap everything in a SUM() function to add the subtotals.\n\nThe formula will look like this:\n\nNow enter the items in individual cells. Include cell references for your array (for non-contiguous cells) or supply a range (for contiguous cells). We’ll narrow the list to these two items:\n\nIf you want, you can add up subtotals using the SUMPRODUCT function instead of an ArrayFormula:\n\nUse this syntax for multiple OR criteria (with three or more items):\n\nReplace the array elements with cell references, and you’ll get a more compact formula.\n\nUsing SUMIF with OR criteria and results in other cells\n\nAs shown above, you can generate each item’s subtotal in a different cell with an array formula. From there, you can adjust the cell references and remove the SUM() part, so the formula looks like this:\n\nIn this example, the formula will produce the following results:\n\nEnsure you have empty cells to the right of the cell containing the formula. Google Sheets automatically places the results into cells corresponding to the number of items in your array constant.\n\nIf you want to have your subtotals show in a column, make a vertical array by separating the elements with semicolons:\n\nAdditionally, you can use a range reference to make your formula more flexible. This way, other users in your team can type items in the predefined cells, and you won’t need to update your formula.\n\nFor instance, the formula shown above can take this form:\n\nUsing SUMIFS with multiple OR criteria in different columns\n\nYou can also leverage the SUMIFS function to sum numbers with multiple sets of conditions based on the following logic:\n• All conditions must be true (AND logic) in each set\n• A cell is summed if any set of conditions is true (OR logic)\n\nHere’s an example. Let’s sum the amount in column B if column A is either Basic or Enterprise and the activation date in column C is March 16, 2022.\n\nThe obvious method is to take two SUMIFS formulas to add Basic and Enterprise separately, then add the results:\n\nBut Google Sheets does not allow array constants with multiple OR conditions. Instead, you can use a slightly shorter formula featuring the SUMPRODUCT function.\n\nUse the formula below to sum numbers within B6:B14 based on the criteria above.\n\nHere’s how the different parts of the formula work.\n• Determine whether an item is Basic or Enterprise: ISNUMBER(MATCH(A6:A14, B2:C2,0)). You’ll get a TRUE value if any specified criteria are met, and a FALSE value if none of the criteria are met.\n• Compare the list of dates with the target date: C6:C14=B3. Also, you can enter the date directly in the formula instead of a cell reference by using the DATE or DATEVALUE functions. For instance, use C6:C14=DATEVALUE(“March 16, 2022”) or C6:C14=DATE(March 16, 2022).\n• Transform both TRUE and FALSE arrays to 1 and 0 using the double unary operator (–).\n\nOnly the values that correspond to the specified Subscription Plan and Activation Date will get summed.\n\nA SUMIFS function makes it easier to sum values based on predefined conditions over a range of cells. If you can master SUMIFS and its variations, you can enhance your spreadsheet capabilities and make your formulae more efficient and elegant.\n\nOur customers typically use SUMIFS to perform more insightful analyses, while also optimizing spreadsheet performance. They implement the SUMIFS function with live data in Google Sheets via Coefficient.\n\nTry Coefficient for free right now!"
    },
    {
        "link": "https://superjoin.ai/blog/the-ultimate-guide-to-sum-in-google-sheets",
        "document": "The SUM function in Google Sheets is an essential tool for anyone working with numerical data. The function is a key component of data management and analysis in Google Sheets, making it an invaluable skill to master.\n\nWhat is SUM in Google Sheets?\n\nThe SUM function in Google Sheets is used to add together a set of numbers. It calculates the total by summing all the specified values. The primary benefit of using the SUM function is that it automates the addition process, reducing the potential for human error. Furthermore, the sum updates dynamically as the source data changes, ensuring your calculations are always accurate.\n\nThe syntax for the SUM function is:\n\n=SUM(value1, [value2, ...])\n\nYou can specify individual values or ranges of cells to be summed up by the function.\n\nHow to Use the SUM Function in Google Sheets\n• None Select the cell where you want the sum to appear.\n• None Select the range of cells you want to sum, e.g., A3:A5.\n• None Select the cell where you want the sum to appear.\n• None Select the range of cells you want to sum, e.g., A1:J1.\n• None Select the cell where you want the sum to appear.\n• None Select the first cell or range.\n• None Select the next cell or range.\n• None Repeat step 4 and 5 for all non-adjacent cells/ranges.\n\nYou can use the FILTER function to apply criteria and then sum the filtered values:\n\n=SUM(FILTER(range, condition))\n\nFor example, to sum values greater than 4 in range A3:A5: =SUM(FILTER(A3:A5, A3:A5>4))\n\n\n\n\n\n\n\nGoogle Sheets provides an auto-sum feature for quickly summing values:\n• None Select the cell where you want the sum.\n• None Look for the auto-sum icon (Σ - Sigma).\n• None Click the icon, and Google Sheets will automatically sum the values in the adjacent cells.\n\nTo sum multiple ranges, separate them with commas inside the SUM function:\n\nUse the MINUS function or manually subtract values from the sum:\n• None Using the SUMIF and SUMIFS Functions\n\nFor example, to sum values greater than 100 in A1:A10: =SUMIF(A1:A10, \">100\", A1:A10)\n\nExample: Sum values in A1:A10 where B1:B10 is \"North\" and C1:C10 is \"January\": =SUMIFS(A1:A10, B1:B10, \"North\", C1:C10, \"January\")\n\nArray formulas allow you to sum multiple columns in a single formula:\n• None Keep data organized in columns or rows for easy summing.\n• None Use descriptive column headers for better data management.\n• None Avoid mixing data types (text and numbers) in a range meant for summing.\n• None Consider using named ranges for frequently summed data sets.\n\nTools like Superjoin's AI Formula Builder use advanced AI like GPT to generate formulas automatically based on simple prompts. This cutting-edge approach will likely become more popular as AI capabilities improve.\n\nThe SUM function in Google Sheets is a powerful tool that simplifies numerical calculations. By mastering its usage and advanced features like SUMIF, SUMIFS, QUERY, and array formulas, you can streamline your data analysis processes. Organize your data effectively, handle errors gracefully, and take advantage of timesaving shortcuts like the auto-sum feature to maximize the efficiency of your work in Google Sheets."
    },
    {
        "link": "https://support.google.com/docs/thread/4750251/range-of-dates-error?hl=en",
        "document": ""
    },
    {
        "link": "https://webapps.stackexchange.com/questions/162770/query-function-with-date-range-not-working-and-shows-wrong-results",
        "document": "Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers."
    },
    {
        "link": "https://support.google.com/docs/thread/59856078/sheets-counting-dates-wrongly?hl=en",
        "document": ""
    },
    {
        "link": "https://reddit.com/r/excel/comments/twf7ty/why_does_google_sheet_return_the_wrong_result",
        "document": "I wanted Google Sheet to count the days from one specific future date to today's date, and I used subtraction. The result came out wrong, even though I formatted all the cells into date and set the setting as in USA.\n\nSo my future date is 6/1/2022. Let's call this cell A1\n\nToday's date is =today() , which is 4/4/2022. Let's call this cell A2.\n\nand I use subtraction, which is A1-A2, and the result I got is 2/26/1990?!!\n\nWhen I did this with my Excel, it worked perfectly fine. I got 58."
    },
    {
        "link": "https://benlcollins.com/spreadsheets/formula-parse-error",
        "document": "Whether you’re just starting out with Google Sheets or are a seasoned pro, sooner or later one of your formulas will give you a formula parse error message rather than the result you want.\n\nIt can be frustrating, especially if it’s a longer formula where the formula parse error may not be obvious.\n\nIn this post, I’ll explain what a Google Sheets formula parse error is, how to identify what’s causing the problem, and how to fix it.\n\nBefore we get into the different types of errors, you might be wondering what does formula parse error mean?\n\nEssentially, it means Google Sheets can’t interpret your formula. It can’t fulfill the formula request so it returns an error message.\n\nThere are a variety of ways this can happen — everything from typos to mathematical impossibilities — and we’ll explore them all in detail below.\n\nUnderstanding the meaning behind the error messages, and learning how to fix them, is a crucial step to becoming a formula pro in Google Sheets.\n\nMatch the error message in your Google Sheet to the sections below, and find out what might be causing your error.\n• An formula parse error message popup prevents me entering my formula\n• I’m getting an #VALUE! error message\n• I’m getting an #NAME? error message\n• Other strategies for dealing with errors\n• Functions to help deal with formula errors in Google Sheets\n• Help! My formula is STILL not working\n\nHere’s a Google Sheet with all these examples in.\n\n\n\nYou think you’ve finished your formula, so you hit enter and boom! You get slapped with a popup message box or similar:\n\nIt’s reasonably rare that you’ll experience this, and it usually points to some fundamental problem with your formula.\n\nFor example, imagine that as you hit the Enter key, you also accidentally struck the “\\” key (which is right above the Enter key) and inadvertently added that to the end of your formula:\n\nThis will result in the popup error message. It’s easily corrected by removing the unwanted character.\n\nHow to correct this error?\n\nTry to avoid these in the first place by checking your formula prior to hitting enter. Make sure you’re not missing a cell reference and you don’t have any unwanted characters lurking.\n\n\n\n2. I’m getting an #N/A error message. How do I fix it?\n\nThe #N/A formula parse error signifies that a value is not available.\n\nIt happens most frequently when you’re using a lookup function (e.g. the VLOOKUP function) and the search term isn’t found. This is exactly what has happened in the exact match VLOOKUP in the image above. The search term A-051 is not in our data table so the formula returns #N/A.\n\nThis formula is not wrong or broken, so we don’t want to delete it. However, it would be cool if you could display a custom message, something like “Result not found”, instead of #N/A error message, especially if you have a lot of these errors showing. It gives the spreadsheet user much more information and reduces confusion.\n\nHow to correct an #N/A error?\n\nWell, there’s this super handy IFERROR function in Google Sheets:\n\n=IFERROR(original formula, value to display if the original formula gives an error)\n\nIn this VLOOKUP example, the full formula would look like this:\n\nas shown in this example:\n\nInstead of showing the #N/A formula parse error when a value is not found, the formula will output our custom message instead “Search term not found”.\n\n\n\nThis formula parse error happens when a number is divided by zero, which can occur when you have a zero or a blank cell reference in the denominator.\n\nIn layman’s terms, what this means is that we’re trying to compute something like this:\n\nwhich has no meaning because you can’t divide by 0.\n\nRead more about division by 0 here, although it gets super technical super quickly.\n\nAnother example is using a formula like AVERAGE with a blank range.\n\nwill cause a #DIV/0! error if the range A1:A10 contains no numerical values.\n\nHow to correct an #DIV/0! error?\n\nWell, the first thing to do is determine why your denominator is evaluating to zero.\n\nYou can select the denominator and see what it is evaluating to by highlighting it in the formula bar, and seeing what the result is in the little popup box, as shown in this image:\n\nIn this case, the formula in the denominator SUM(A1:A7) evaluates to 0, which causes the error. So check whether your denominator result is 0.\n\nNext, check whether you have linked to blank cells or a blank range in your denominator. Then you can either fill in the blank cell or range, or select a different cell or range for your formula.\n\nIf your formula is correct and your cell/ranges are not unintentionally blank, then you’ll want to handle the #DIV/0! error. It looks unsightly and makes your spreadsheet look unfinished if you leave these errors floating around.\n\nAs with the #N/A error example, use the IFERROR formula to wrap your current formula and specify a result for when a #DIV/0! error occurs. You might want to output an error message, e.g. “Division by 0 error”, or maybe a specific value, e.g. 0:\n\n4. I’m getting an #VALUE! error message\n\nThis formula parse error typically occurs when your formula is expecting a certain data type as an input but receives the wrong type, for example trying to do math operations on a text value instead of a numerical value.\n\nSpaces in your cells can also cause this error message.\n\nIn this example, cell B1 contains a space, which is a string value and causes the #VALUE! error because Google Sheets can’t perform a math operation on it, as seen in this error message:\n\nIn general, Google Sheets do a pretty good job of coercing text into numbers when needed. If you enter a value into a cell with some spaces, format it as text and then try to do math on it, Google Sheets will actually force the text into a number and still perform the calculation.\n\nAnother cause of #VALUE! errors is mixing US and Rest of World date formats.\n\nUS dates have the form MM/DD/YYYY whilst the Rest of the World goes for DD/MM/YYYY. If you have a mix of the two and try to subtract them to get the number of days between them for example, you’ll get the #VALUE! error.\n\nHere the correct answer should have been 59, the number of days between the 28 Feb 2017 and the 31st Dec 2016.\n\nHow to correct an #VALUE! error?\n\nThe error message should give you some information on which part of your formula is causing the problem.\n\nSearch for any possible text/number mismatches, or cells containing errant spaces. If you click into a cell and the flashing cursor has a gap between itself and the element it’s next to, then you’ll have a space there.\n\nCells can look empty but still contain spaces:\n\nDates with spaces in the middle won’t work either:\n\nThe #REF! formula parse error occurs when you have an invalid reference.\n\nMissing reference: For example when you reference a cell in your formula that has since been deleted (not the value inside the cell, but the whole cell has been deleted, typically when you’ve deleted a row or column in your worksheet).\n\nIn this example, the original formula was\n\nbut when I deleted column A, the formula went haywire because of the missing reference:\n\nAnother way that a formula can refer to missing references is when you copy a formula with a relative range at the edge of your sheet. When you copy and paste, it’s possible the relative range moves as if it were outside the bounds of the sheet, which is not allowed and will cause a #REF! error.\n\nIn this example, the sum function adds the cells in the 3 rows above. When I try to copy-paste the sum function into a new cell with fewer than 3 rows above, it’ll give me the #REF! error:\n\nLookup out of bounds: You’ve probably seen the #REF! error if you use lookup formulas frequently, when you’ve tried to return a value outside of ranges you’ve specified. In this VLOOKUP example, I’m trying to return an answer from the 3rd column of a search table that only has 2 columns:\n\nCircular dependency: You’ll also get a #REF! error when a circular dependency is detected (when the formula refers to itself).\n\nIn this example, I have numbers in the range A1 to A3, but the SUM formula in cell A4 tries to sum from A1 to A4, which includes itself. Hence, we have a circular argument where cell A4 is trying to be both an input and output cell, which is not allowed.\n\nFirst of all, read the error message to determine what kind of #REF! error you’re dealing with. This should give you a big hint on how to correct the error.\n\nFor deleted references, look for the #REF! error is inside your formula, and replace the #REF! with the correct reference to a cell or range.\n\nFor out-of-bound lookup errors, look through your formula carefully and check your range sizes against any row or column indexes you’re using.\n\nFor circular dependencies, find the reference that’s causing the problem (i.e. where you refer to the current cell inside your formula too) and modify it.\n\n\n\nThe #NAME? formula parse error signifies a problem with your formula syntax.\n\nThe most common reason for this error is a misspelling in one of your function names.\n\nIn this example, I misspelt the SUM function as SUMM, which Google Sheets didn’t recognize, so returned an error:\n\nAnother reason for a #NAME? error is referencing a named range that doesn’t actually exist or is misspelled.\n\nwill give you a #NAME? error if the named range profit does not exist\n\nMissing quotation marks around a text value, as shown in this simple formula, will also cause a #NAME? error:\n\nHow to correct an #NAME? error?\n\nCheck your function names are correct. Use the function helper wizard to reduce the chances of errors happening, especially for the functions with longer names. As you start typing your formula, you’ll see a menu of functions, which you can select with the up and down arrows and Tab.\n\nCheck you have defined all named ranges before using them in your formulas and that they all have the correct spellings.\n\nCheck any text values are entered with the required quotation marks.\n\nLastly, have you missed the colon in your range references? It’ll be obvious because it won’t be highlighted correctly.\n\nis missing the colon between A1 and A10 and will throw a #NAME? error.\n\nIt should of course read:\n\nThe #NUM! formula parse error is shown when your formula contains numeric values that aren’t valid.\n\nThe classic example is trying to find the square root of a negative number, which isn’t allowed:\n\nSome other functions that can result in #NUM! error messages are the SMALL function and LARGE function. If you try to find the smallest n-th value in your dataset, where n is outside the count of values in your dataset, you’ll get a #NUM! error.\n\nFor example, you ask Google Sheets to find the 10th smallest number in a dataset that only has 5 values in it:\n\nYou need to check the numeric arguments in your formula. The error message should give you some hints about which part of the formula is causing the issue.\n\n\n\nThis formula parse error message is unique to Google Sheets and doesn’t have a direct equivalent in Excel. It means that Google Sheets can’t understand the formula you’ve entered, because it can’t parse the formula to execute it.\n\nFor example, if you manually type in a $ symbol to refer to an amount, but Google Sheets thinks you’re referring to an absolute reference:\n\nor you’ve missed a “&” when concatenating text and numerical values:\n\nIn this case the formula should be:\n\nAnother case, caused when we messed up the closing brackets of a formula:\n\nHow to correct an #ERROR! error?\n\nYou want to ensure you’ve got the correct number of brackets and correct join syntax between text and numerical values (e.g. using “&”).\n\nWhen you want to show values with currency symbols or as percentages, don’t manually type in the “$” or the “%”. Instead, enter a plain number and then use the formatting options to change it to the style you want.\n\n\n\nI haven’t been able to recreate a #NULL! formula parse error in the wild but theoretically, it exists!\n\n(If you have one showing in your sheet, let me know! I’d love to update this article with an example here.)\n\n\n\n10. Other strategies for dealing with a formula parse error\n\nLook for red highlighting in your formula as this will help identify the source of your error e.g. in the case of too many brackets, the extra, superfluous ones will be highlighted in red.\n\nPeeling back the onion: the onion framework is a technique to debug errors for long, complex formulas. Unwrap the outer functions in your formula one-by-one, until you get it working again. Then you can start to add them back one-by-one again, and see exactly which step is causing the issue and fix that.\n\nDifferent syntax in different countries: Some European countries will use semi-colons “;” in place of commas “,” so this could be a cause of your error. Compare these two formula, which have identical inputs and outputs, but the syntax is different for users in different countries (locales).\n\nis the same formula as this:\n\nUse apostrophe at the start of a formula to turn it into a text string, which won’t execute. This is sometimes useful for seeing your whole formula for debugging, keeping a copy of your formula so you can copy and paste bits of it elsewhere for testing.\n\n\n\n11. Functions to help deal with formula parse errors in Google Sheets\n\nA few other functions related to formula parse errors are worth knowing about.\n\nIn fact, there is even a function to generate #N/A errors. It’s of limited use, but can be helpful for doing data validation in more complex formulas.\n\nwill output an #N/A error. (Google Docs Help on NA)\n\nwill return a number corresponding to the error type:\n• 8 for all other errors\n\nchecks whether a value is the error #N/A, and will give the output TRUE for a #N/A error and FALSE otherwise. (Google Docs Help on ISNA)\n\nchecks whether a value is any error other than the #N/A error. (Google Docs Help on ISERR)\n\nchecks whether a value is an error, and will give the output TRUE for any error. (Google Docs Help on ISERROR)\n\nThese functions can be summarized in the following table:\n\n13. Help! My formula is STILL not working\n\nTake a deep breath, don’t panic! There’s an army of Google Sheets super users out there who would love to help you fix your issue, free of charge, in the active help forums.\n\nTry posting your problem into the forum and someone will likely help you out.\n\nTo make it easier for people to help you, please share your Google Sheet in view-only mode(how to share your Google Sheet) and include the error message and what you were expecting the correct answer to be."
    }
]