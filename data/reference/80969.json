[
    {
        "link": "https://devforum.roblox.com/t/how-would-i-make-my-own-encryption-algorithm/1151880",
        "document": "I agree with @Afrxzo. You can make a simple replacement for all characters, which is fun to make an also works, unless we are dealing with sensitive data. We know two main types of encryption:\n• Symmetric key / private key encryption → each side (sender and receiver) has a specific same key they used to encrypt the data. Both parties need to have that key, which is a big disadvantage when it comes to regular interaction.\n• Asymmetric key / public key encryption → Each party has generates two random keys - a public and a private one, which are linked to each other through very complicated mathematical operations. Because of such complexity, nobody who knows the public key (which anyone can access) can discover the private key, which only the reciever has.\n\nIn a nutshell, if encryption is symmetric, both parties have to share the same key, which increases the risk of a third party gaining access to it. When asymmetric encription is used, reciever sends the sender a so called public key, which anyone can access, but nobody can decrypt, even the sender. Only the reciever has a private key, which is linked to public key through very complex mathematical operations. The attacker can try to steal the data from both parties, which is much harder, but there is almost no way for them to decrypt the encrypted document.\n\nDecryption without a key may be achiveable via brute force, which may take nano seconds with weak encrypting algorithms, but millions of years with strong ones and with the use of currently available computers.\n\nNow, creating a custom yet secure encryption algorithm is a very complex process. It’s probably better if you don’t attempt it in case you intend to use the algorithm for any serious encrypting. You may write a good algorithm for practice, but it almost certainly won’t be secure enough for sensitive data. In Roblox environment, it may be sufficient, but again, not for encrypting any sensitive data.\n\nEncryption is a fort in everyone’s plain sight. Don’t protect yourself with a weak one.\n\nYou probably don’t need encryption for client-server communication, however. I didn’t need it in the past except in some specific cases. It’s much more useful as part of the gameplay.\n\n@Afrxzo I’m just pasting a little further improved code you pasted.\n\nI’d avoid gradual string concatenation, because of the way strings are combined in lua. Each time you concatenate a particular string, a new one is hashed in memory (!), meaning encryption of 50 characters long message actually produces around 50 strings! Table concatenation is a more performant option.\n\nHere is an interesting module by @dollychun (RSA encryption):\n\nRead more about encryption here: Encryption - Wikipedia (2021-04-06)\n\nAbout one of the strongest and most common algorithms here: RSA (cryptosystem) - Wikipedia (2021-04-06)\n\nAnd watch this awesome video that will explain keys:"
    },
    {
        "link": "https://stackoverflow.com/questions/19781218/lua-and-rsa-encryption",
        "document": "I've been working on an RSA encryption script in Lua, with the assistance of BigNumbers (http://oss.digirati.com.br/luabignum/bn/index.htm), and I pretty much have a working code. I'm stuck, however, because in a small percentage of cases, the encrypted original message is not decrypted to the original message, and I cannot figure out why. Please note that this will deal with very large numbers (1.08e107, for example). The entire code I've written is below, but here's a breakdown of what it should do.\n\nThe above sets the key values, in which the public key is represented by [n, e] and the private key is represented by [n, d]. This is accomplished with the following code:\n\nAfter the keys have been determined, you can encrypt the message. In order to convert plain text (\"Hello world\") to a numeric system, I've created a function that isn't 100% complete, but works in the most basic form:\n\nThe following function is how that message is determined:\n\nLastly, in order to make this much more manageable, I have to break it down into segments. In an effort to save time and code, I've combined the actual encryption with the conversion from plaintext to numeric format to encryption, though I've added decryption for debugging purposes. The code also accounts for affixing 0's to message to ensure 4 digits in each grouping. This is where my problem comes in; the Msg and Decrypted should be identical.\n\nThis is done with the following two functions:\n\nNow, I know this is a long question, and there are many components to the problem itself. I'm just at a loss how to figure out where my problem lies. Is there something I'm missing? A fresh set of eyes might be my solution."
    },
    {
        "link": "https://devforum.roblox.com/t/best-way-to-protect-remoteevents-against-exploiters/1314739/15",
        "document": "I “solved” this age old problem with a sort of elegant solution. While you can never truly secure RemoteEvents, the solution I came up with will deter most of the exploiters who just watch YouTube videos on how to haxx adopt mee and have no real programming experience, or any idea of what they’re doing in general. I’ll outline my systems below:\n\nThis one is pretty common. This involves storing a cache of the RemoteEvent objects alongside the original names somewhere secure, like the server. Then ever second or so you rename each event to a GUID. This along deters most exploiters because while they can still see the traffic of the RemoteEvents, the names will always be changing, making it incredibly hard to track down specific events.\n\nIn my application the server holds the master list between the original event name, and it’s physical object in ReplicatedStorage. The server is also the one scrambling the names. This ensures the clients can’t stop the scrambling. When the client joins the game, it invokes one remote function that isn’t scrambled. This function returns the list of RemoteEvents and their objects. The server then marks that they’ve called it and won’t allow them to call that again.\n\nNote: I use a custom NetworkingService that ties all these things together.\n\nThis one is fantastic. This involves the internal NetworkingService attaching a GUID alongside the event that’s fired. This is different than a password because those aren’t secure and are genuinely pointless. Every time an event is fired, the server returns a new GUID. It expects this to be send back when that event is fired again. If they don’t match, the server throws out the request. These GUID’s are unique to each RemoteEvent and rotate each time they invoke.\n\nThis is important because while the GUID’s are visible to the exploiters*, they are meaningless without an explanation. If a key is sent more than once, the events won’t go through.\n\nNote: Upon testing this solution with Synapse, I found that whatever version of RemoteSpy I was using failed to present the data returned in a RemoteFunction. I was able to see the initial request and it’s data, but anything returned by the server was not visible. If this is the case with all current versions of RemoteSpy, it’s essentially impossible to know what they next GUID is.\n\nYou cannot store anything in a module. The list of RemoteEvents to Objects, the master GUID table on the client etc. All of these things must be stored in private variables so they’re not accessible by any malicious actors.\n\nLike I said at the beginning, you can never truly secure RemoteEvents / RemoteFunctions. These solutions just deter a lot of malicious actors from perusing more exploits in your game. I only recommend these solutions if you’re experienced with writing internal libraries such as NetworkingServies and whatnot. These systems can fail incredibly easily if not setup properly. I’ve fine tuned my module to work reliably, without problems. If you have any questions please let me know."
    },
    {
        "link": "https://gist.github.com/1lann/6604c8d3d8e5fdad0832",
        "document": "You signed in with another tab or window. Reload to refresh your session.\n\nYou signed out in another tab or window. Reload to refresh your session.\n\nYou switched accounts on another tab or window. Reload to refresh your session."
    },
    {
        "link": "https://github.com/spacewander/lua-resty-rsa",
        "document": "This library requires an nginx build with OpenSSL, the ngx_lua module, and LuaJIT.\n• you need to specify this library's path in ngx_lua's lua_package_path directive. For example, .\n• you use to load the library into a local Lua variable:\n\nGenerate rsa public key and private key by specifying the number of . The is optional. If is true, the generated priviate key is in PKCS#8 format and the public key is in PKIX format, which start with or . Otherwise the generated keys are in PKCS#1 format, which start with .\n\nCreates a new rsa object instance by specifying an options table .\n\nThe options table accepts the following options:\n• Specifies the type of given key. By default the type will be detected from the value of the key.\n• Specifies the padding mode when you want to encrypt/decrypt.\n• Specifies the digest algorithm when you want to sign/verify.\n• rename current rockspec to the new version and update the reference in it.\n\nThis module is licensed under the MIT license.\n\nCopyright (C) 2014-2018, by Dejiang Zhu (doujiang24) doujiang24@gmail.com Copyright (C) 2018-, by Zexuan Luo (spacewander)\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n• Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n• Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
    },
    {
        "link": "https://devforum.roblox.com/t/what-is-mathrandomseed/902669",
        "document": "This question has been asked before, I recommend reading these threads for a better explanation. In simple terms, computers don’t have the ability to generate “real” random numbers, so they take seeds.\n\nSeeds are randomized to make the computer give pseudo-randomness, even though it’s been predefined already. That’s why\n\ngenerates a random seed and is used to mimic true randomness."
    },
    {
        "link": "https://devforum.roblox.com/t/how-to-get-the-seed-that-will-produce-a-certain-result-in-a-random-number-generator/626455",
        "document": "I really didn’t want to have to make a Devforum post, but after an entire day of having no idea what to do this is practically my last resort.\n\nThe title might be slightly confusing, so let me elaborate:\n\nI’m currently working on a Roblox port of the website Library of Babel. It’s basically a website that contains 10^4677 randomly generated books (Practically anything you can write in English, it’s on this website, including this Devforum page Here). It’s able to contain this amount of books as instead of storing them, they can be retrieved by using a Random Number Generator, and using the Hex, Wall, Shelf, and Volume as a seed, then using that to randomly generate 3200 characters for 410 pages.\n\nI already got the main part - randomly generating the book’s title and contents with a Linear Congruential Generator, but I’m missing one of the core features of the Library of Babel- The search feature.\n\nI’m pretty sure the search feature in the Library Of Babel works by getting the seed of the book that would generate that exact line of text and giving you the address of that book.\n\nProblem is, I have NO idea how to do this in Lua (or any other language for that matter), though I know its possible, as the Library Of Babel is a living testimony to this.\n\nThe current code I’m using to generate Random Numbers is:\n\nIs there anyway I could feed a function an array of results, and have it return a seed that would result in those exact results, or is there already an open-sourced random number generator for Lua that can already do something like that?\n\nIf you need me to elaborate more, just tell me. It’s a really confusing and specific question, so I understand"
    },
    {
        "link": "https://stackoverflow.com/questions/78904523/is-it-possible-to-generate-rsa-key-pairs-using-a-seed-deterministic-in-swift",
        "document": "It is technically possible to generate RSA keys deterministically from a seed. After all, you can do it by taking an algorithm that generates an RSA key randomly, and replacing the random generator by a pseudorandom generator. If you use the same seed for the pseudorandom generator, you get the same key.\n\nHowever, RSA key generation is a pretty complex process that uses randomness in a brittle way. In particular, it contains a loop that looks like this:\n• Perform a complex test using heuristics to determine whether p is (pseudo-)prime.\n• If p is not satisfactory, try again, i.e. go to step 1.\n\nIf you make any change to the heuristics in step 2, the resulting key is different, since a candidate might not be rejected at that stage (but it might still be rejected later). So most implementers do not provide an interface to derive an RSA key deterministically from a seed.\n\nI'm not familiar with SwiftyRSA, but I expect that it's typical in not providing deterministic RSA key derivation.\n\nYou aren't going to have an actual “mnemonic” seed for an RSA key anyway. A seed should be 256 random bits. Nobody is going to remember that. If you're going to write it down, you might as well write down the RSA key.\n\nIf having a shorter seed is really important, use ECIES instead of RSA. Deriving elliptic curves determinstically is easy, so it's more common to have this feature in libraries. (But I don't know anything about crypto libraries in Swift.) Also, an ECC private key is only 256 bits (unless you need resistance against fundamental mathematical improvements), so you might as well transmit a 256-bit private key rather than a 256-bit seed. Using derivation from a seed is useful if you need to derive multiple keys from the same seed."
    },
    {
        "link": "https://devforum.roblox.com/t/does-mathrandomseed-influence-randomnew/2565069",
        "document": "So I have this function where I restock a dictionary with one new thing from each rarity everytime and I wanna make it so every server has the same thing so Im using math.randomseed but my function looks like this: local keys = {} for key, _ in pairs(rarityTable) do table.insert(keys, key) end if #keys == 1 then local onlyKey = keys[1] return rarityTable[onlyKey] end local position = Random.new():NextInteger(1, #keys) local key = keys[position] table.insert(towerRoster,rarityTable[key]) I use Random.new() but im not sure if its “compatible” with math.randomseed, is it compatible or should I just change it to math.random, any help is appreciated, thanks!\n\nThe and functions serve the same purpose of generating random numbers, but they are different implementations. When you use , you are creating a new instance of the class, which provides its own independent random number generator.\n\nIf you’re looking to use to ensure that every server generates the same sequence of random numbers, you should use instead of .\n\nHere’s how you can modify your code to use and :\n\nBy setting the seed using , you ensure that the sequence of random numbers generated by will be the same across all servers, which helps achieve consistency in your game’s functionality."
    },
    {
        "link": "https://devforum.roblox.com/t/procedural-generation-with-mathrandom/2697578",
        "document": "I am currently trying to create a primitive procedural generation script with Math.Random(). It seems to have a few bugs, and I am at a loss of what to do. My current code is this:\n\nWhen I run it, it should theoretically generate new numbers every time, because I am setting a new seed every time it generates a number. However, this is not the case, and it seems to generate a repeating set. This should not be the case. I am wondering if anyone can point out any issues with my code. Any help would be appreciated!"
    }
]