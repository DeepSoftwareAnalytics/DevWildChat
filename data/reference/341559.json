[
    {
        "link": "https://docs.sensorsdata.com/sa/docs/pomote_wechatapplet/v0300",
        "document": "There are three main ways to open a mini program: scanning QR code, forwarding and sharing, and jumping.\n• Forwarding and sharing: including forwarding to groups, forwarding to individuals, etc.\n• Link jumping: can wake up WeChat Mini Program from outside WeChat.\n\nApplication scenarios can be referred to in the documentation:Example application scenarios\n\nIf full tracking is not enabled, please refer to \"Enabling Full Tracking for Mini Program\" to enable it.\n\nIf full tracking is already enabled, you can proceed to the second step.\n\nSwitch to \"Promote Mini Program\" in the channel management background, select \"WeChat Mini Program General Channel\", fill in the promotion page URL, starting from version sa2.2.0.504, five types of materials are supported;\n\nSensors support inputting the following multidimensional channel information to facilitate subsequent analysis of channel delivery effects by each dimension.\n\nClick to complete, the system will automatically generate the redirect link address according to the rules.\n• Copy the tracking link or short link and promote it on the desired page or medium\n• Advertise in articles in WeChat Official Accounts, ads in WeChat Moments, and ads in mini-programs. The generated links can be used for direct promotion.\n• You can refer to this link for configuring WeChat Moments ad jump to mini-programs: https://ad.weixin.qq.com/landing-page-guide.html#/387\n\nHow to Get Promotional Links\n\nWhen promoting mini-programs, we need to fill in the page address path of the mini-program in the promotion address to generate the corresponding promotional link.\n\nStep 1: Log in to the WeChat mini-program management background (mp.weixin.qq.com)\n\nStep 2: Enter the mini-program code generation tool, and click to enter\n\nStep 3: Enter the complete and accurate name of the mini-program you want to get the path for (fuzzy search is not supported). After finding it, click Next.\n\nStep 4, click the \"Get more page Paths\" button\n\nStep 5: In the text box below \"① Open the portal\", fill in the wechat ID of the current operator and click Open. After successfully opening the portal, the interface will prompt \"Successfully opening the portal\".\n\nThe sixth step, open the wechat mobile client, make sure that you have logged in to the wechat signal just filled in the fifth step, open the small program that you want to obtain the corresponding page path.\n\nStep 7: Visit in the mini program, find the page that needs to be promoted, click the \"···\" button in the upper right corner, a menu will pop up, and there is a button named \"Copy this page path\" in the menu, click the button to copy the page path.Note: The copied page path can be used only after deleting the \".html \"at the end.\n\nSince public library 2.4.0, newly released applets can be jumped to any other applets without any association or binding, by adding UTM-related parameter transfer channel parameters after path, for example:\n\nSuppose the small program A and the small program B, jump from A to the small program B. Then the end of the path provided by the small program B to the small program A can add utm parameters to indicate the source, and the small program A can directly use the path provided by the small program B when implementing the code, so that the small program B integrated with the SDK can realize the source tracking.\n\nWe will automatically parse the utm information in App.onLaunch App.onShow\n\nSensors analytics platform supports the generation of small program code, which needs to be filled in Appid and Secret, or directly fill in the value of Access_token. Please ask your RD to ask for any value.\n\nThe difference between the two small program codes\n\nSensors Analytics currently provides two generation modes when generating small program code, as follows:\n\nThe reason why there are two modes is that WeChat provides two interfaces. The introduction of these two interfaces is as follows:\n\nWhen the Sensors system generates Mini Program codes, it compresses all \"utm_xxx\" series parameters of Sensors to save the length of the URL parameters. However, it does not compress the original parameters in the client's URL to prevent the interruption of the main process due to the slow response of the Sensors system. Therefore, two request interfaces are provided. If the parameter length of the URL is long, you can use a long code.\n\nWe know that for sharing in Mini Programs, it is achieved by defining Page.onShareAppMessage, in which the path attribute is used to specify the redirected path. Now there are two options to modify the value of the path to track the channel:\n\nAdd ?utm_source=wang&utm_content=beizi after path to mark that the person sharing it is \"wang\" and the content being shared is \"beizi\". We will automatically parse the utm information in App.onLaunch and App.onShow.\n\n1. The above method is a custom solution. Starting from Mini Program 1.9, if allow_amend_share_path is set to true, we will automatically add , , and attributes after the path. 2. We will automatically parse this information as , , in App.onLaunch and App.onShow.\n\nFirst, in the page where the Mini Program is shared, you need to set share_id, please refer to the WeChat documentation https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/share.html.\n\nThen, when the Mini Program is opened, call the following method to obtain the group ID, please refer to the WeChat documentation https://developers.weixin.qq.com/miniprogram/dev/api/share/wx.getShareInfo.html.\n\nIf you want to treat this group ID as a public property, you can use the code sensors.registerApp({latest_share_group_id : group_id});"
    },
    {
        "link": "https://developers.weixin.qq.com/miniprogram/en/dev/framework",
        "document": "Mini Program provides a simple and efficient application development framework and rich components and APIs to help developers develop native applications in WeChat. APP Experienced services.\n\nThis chapter introduces the development language, framework, ability, debugging and other content of the Mini Program, which helps developers to understand all aspects of the Mini Program development quickly and comprehensively.\n\nFor more detailed information on frameworks, components, and APIs, please refer to the corresponding reference documentation:"
    },
    {
        "link": "https://wechatwiki.com/wechat-resources/wechat-mini-program-for-ecommerce-development-api-jssdk-integrations",
        "document": "Relatively soon after their release, Tencent’s Mini Programs have become a cornerstone for brands who want to move away from ultra-dominant e-tailer platforms Alibaba, JD & al. According to WeChat’s research report about the significant use and economic influence of QR codes in China, 41% of brands surveyed believe that eCommerce Mini Program on WeChat has helped them reduce online store opening and operating costs.\n\nAs a result, online shopping is one of the most popular Mini Programs categories, and they are the primary way of selling on WeChat.\n\nWhat use cases do they serve best? How to integrate them with the rest of a business’s ecosystem, such as their own brand.com website? This article is intended to be a super-comprehensive guide to using WeChat Mini Programs for eCommerce.\n\nBefore diving into the specifics of the e-commerce aspects, make sure you have read our complete introduction guide to WeChat Mini Programs.\n\n1. How to use a WeChat Mini Program for eCommerce?\n\nFrom a user standpoint, reasons for the success of WeChat Mini programs are their easy navigation, simplicity in templates, intuitive way of using, advanced features for eCommerce, and deep integration with WeChat’s core features such as chats and WeChat pay. Scan a QR code to make an order in a store, in a restaurant etc., chances are that you are opening a WeChat Mini Program.\n\nFrom a brand standpoint, eCommerce Mini Program can serve multiple use cases.\n• Permanent stores hosting their base SKUs, as a replacement or a complement of their own website.\n• Repeat purchase for your existing clients: “subscriptions”\n• Repeat purchase from another channel (e.g. market place like JD, Tmall, PinDuoDuo)\n• Club (e.g. go to my orders and be able to re-order the previous order)\n\nSee case studies here: WeChat marketing campaigns and case studies – best practices.\n\nRegardless of the use case, Mini Programs do not generate their own traffic, as you would enjoy from the organic searches from an eCommerce platform. They are more suited for brands with a strong user base with high-level engagement. WeChat allows them to build a conversion layer, enabling them to be independent of third party eCommerce platforms, design fully custom interfaces and generate much richer data from their customers.\n\nThrough the WeChat JSSDK when developing a Mini Program, advanced e-commerce features can be added to enable users to access, share with their contacts in chats, automatically fill their information interact, purchase, order products through this channel without ever leaving WeChat.\n\nExamples of eCommerce features that are detailed below in this guide:\n• Sharing options through WeChat groups and chat among users\n\nKey advantages of a WeChat Mini Program \n\nin the perspective of the other eCommerce technologies (Native APP and web)\n• Mini Programs do not require a download or any installation (provided the WeChat APP is up to date).\n• Mini Programs are light so they are very fast in terms of loading speed and smooth in terms of UX and navigation.\n• Mini Programs are embedded into WeChat ecosystem to enhance the experience by leveraging WeChat native functionalities\n• Users can jump in and jump out of the Mini Program easily\n• Users can access anytime, anywhere, which means some features could be used offline as well.\n• Do not require a download or any installation (provided installing the WeChat version that supports Mini Program)\n• Cheaper to develop and maintain – unique codebase cross Operating Systems: no need to maintain an Android and an iOS version\n• No updates needed: the latest MP version is automatically loaded\n\nAdvantages of a Mini Program compared to a web-based application rendered within WeChat in-app browser (H5)\n• Provides a smoother experience for the user\n• Easier to bookmark and find with ‘Recently used’ section and ‘Pin Mini Program’ functions\n• Searchable within WeChat search function – One of the several entry points to a Mini Program\n• Sharable through chats and groups – One important entry point to Mini Program\n• Rendering harmonized across devices, OS and WeChat version (no dependency with a web browser like Safari)\n• Some offline-based features (less dependency on the network speed)\n\nEven though this technology shows important strengths, there are some limitations to take into account when defining the best WeChat eCommerce solution to build.\n\nTechnical limitations to consider before building a WeChat Mini Program for eCommerce\n• do not work well with the audience outside of WeChat\n\nThe payment system is limited only by WeChat pay, H5 on other support Alipay and Union pay. H5s are embedded within OA and they don’t have restrictions of push notifications, Mini programs cannot have push notifications but that problem could be solved by integrating with WeChat Official Account that can notify users and implement Mini program in the same posts. \n\n\n\n2. Standard e-commerce modules can be integrated with a WeChat Mini Program\n\nIntegration with Customer Relationship Management (CRM) and Order Management System (OMS) through APIs\n\nIn a Mini Program, only WeChat Pay can be set up.\n• The cross-border payment war of WeChat Pay and Alipay | February [WalktheChat]\n• WeChat Pay cross-border payment available in over 49 countries, regions | March 2019 [people.cn]\n\n3. Best practices to leverage WeChat API – JS SDK to enhance the e-commerce experience\n\n\n\nBy interfacing with the WeChat JS SDK, the Mini Program experience can be enhanced leveraging native functionality and facilitating user flows such as:\n• Wechat Login = login and get user information in one click\n• QR codes = use the QR code scanner without leaving the web page\n• Wechat Payment: Let users pay using Wechat payment without leaving the website\n• Other: Intelligent geolocation, get current network used, customize the sharing snippet aspect\n\nMore details about the WeChat API: another chapter to learn about the WeChat JS SDK that can be used when building a native APP or a web-based application powered within WeChat in-app browser (H5).\n\nSome of these features are not e-commerce specific and can be used for other types of Mini Programs.\n• Allows the user to instantly signup/login with a click to a web app using his Wechat account\n• Similar workflow as Google login or Facebook login – the user’s explicit consent is required\n• OpenID: Unique user ID that is specific to the brand’s official account (OpenID is different from the actual Wechat ID)\n• Province: From user Wechat signup (not updated according to the actual location)\n• City: Information filled in by user when signing up (not updated according to the location)\n• Country: Information filled in by user when signing up (not updated according to the location)\n• Is the user following your Wechat account? Yes – No\n• Allows a web page to obtain the user’s OpenID without authorization prompt\n• OpenID: unique user ID that is specific to the brand’s official account (NOT the actual Wechat ID)\n• For a discount campaign where each user can only apply for one coupon, instead of checking the identifying the user once with a phone number validation, we can use Wechat silent login to make sure a visitor can only have one coupon generated\n• Use the QR code scanner without leaving the webpage in 1 click instead of (back arrow => top menu “+” => QR code scanner)\n• Microphone: Allows the user to record voice and sends it over to get it processed\n• Speech to text: translate the user’s recorded message to text (Chinese recognition only)\n• Allows the user to upload picture files and/or take a picture\n• click button – Call To Action to inform the user on the d\n\nThe user cannot access directly the camera capture interface in one click\n• Full picture resolution is not activated by default. Pictures will be compressed.\n• Allow the user to purchase using Wechat Wallet and Wechat Cart system\n\n4. Other functionalities to integrate to a WeChat eCommerce Mini Program\n• Intelligent Geolocation\n• Get the user location coordinates (Latitude and Longitude)\n• Fallback on Mobile Network Triangulation if the GPS is not enabled\n• Current network used\n• Contextual information that can be useful to adapt the HTML5 Website experience to the user connection (simpler, lighter experience if on 2G for example)\n• Customize the sharing page overview on moments\n• Can customize and personalize the Wechat text and picture sharing for each user to increase sharing virality\n\n5. Specific features to consider in a WeChat eCommerce Mini Program development\n\nThe more people buy, the higher the rebate. Attract customers to create group prices with a special offer, motivate customers to share, use the cashback to increase the willingness of sharing, and encourage the participating customers to do the same.\n\nSame principle as group buying. The difference is that the user would receive coupons after the payment happened.\n\n\n\nMake your customers become your organic KOL through word of mouth and give them commission/referral \n\n\n\nSharing split coupons to friends / Red envelope form for stimulated interactive fun. Invite friends to share the coupons together, generating the traffic and conversion rate.\n\n\n\nA new way to customize gifts: distribution of electronic cards on social networks. Customize your own brand gift cards and their value.\n• Support the unified brand of the store\n• Get geolocation from your user through WeChat API.\n\nSending gifts to friends that will generate large traffic of customers. Sending directly products to their address.\n\n\n\nWith single and multi-person payment, Friends are helping customers to purchase their desired product with the option to pay the full amount or part of the amount.\n\n\n\nDefine and customize what kind of coupons will you make for your product. There are four types of coupons: random coupon, discount coupon, full reduction coupon, no threshold coupon.\n\n\n\nRandom coupon is a coupon in which brands can define a range of a discount amount of coupon, while the amount on coupon is randomly chosen by the software. \n\n\n\nDiscount coupon allows you to apply a discount amount on specific product/item as a coupon on which customer can use it for purchase.\n\n\n\nFull reduction coupon is a coupon that allows customers to get high discount on a product that goes with the primary item that he wants to buy. For example, if you buy a product you will get a discount on another one if you buy them together.\n\n\n\nNo threshold coupon is a coupon that can be used regardless of the amount of the purchase. If you receive a coupon of 50 yuan you must minimum spend 50.01 yuan to use. \n\n\n\nA flash sale is a discount or promotion offered by an e-commerce store for a short period of time. The quantity is limited, which often means the discounts are higher or more significant than run-of-the-mill promotions. The time limit and limited availability entice consumers to buy on the spot – aka impulse buying.\n\n\n\nPromo codes allow the customer to input a promotion code during the checkout process to receive a discount (value or %) under several conditions defined in the back-end (e.g. Unique usage, Only available for certain duration, people, etc..). \n\n\n\nReducing the price of the product and making an auction of it.\n\n\n\nSharing red envelope after payment, customers can use envelope to purchase another product.\n\n\n\nShop activity marketing tool to improve order conversion rate. A feature where customers pay a deposit in advance, later they pay the rest amount of the price. Resulting in buying a product at a lower price.\n\n\n\nSelect two matching products and set a package price. When you browse the product details page, customers see other items in the package and the customer can purchase the entire package at the discount price.\n\n\n\nAn interactive marketing strategy that allows customers to move forward with leaps and bounds. It activates your customers by giving them rewards when they sign in.\n\n\n\nA membership system that can increase store repurchase rates, cultivate loyal customers, increase customer unit price and provide membership level + membership card. This feature can be used both online and offline.\n\n\n\nFor supporting and servicing customers with the integration of live chat history.\n\n\n\nCustomers can share their feedback on a WeChat eCommerce Mini Program. Customer feedback improves the purchasing decision-making process to drive sales and decrease returns\n\n\n\nCustomers are making their wish list and bookmark products that they want to buy.\n\n\n\nTake advantage of lottery opportunities, guide users to invite friends, with this method use it to win customers.\n\n\n\nSelling goods in a gamified way to increase customer engagement. Make a funny and interesting way of buying products. With more game options, solve a puzzle, or play a memory game to get the coupon.\n\nOrders are cash rebate, stimulating customers to place orders as soon as possible. The first orders are cashed back improving the shopping experience, and the customers who are still hesitating with the rebate are placed to place orders.\n\n\n\nTime-conditioned promotion only allows a specific range of time when customers can get a discount or “sekill”. \n\n\n\nA price markdown is a deliberate reduction in the selling price of retail merchandise. When is a markdown time, customers can choose for themselves products to piece together the order and enjoy markdown rights. There are a variety of marketing scenarios, with 6 kinds of discount combination.”\n\n\n\nProduct bundling is a strategy you can use to encourage customers to buy more goods – offering to sell multiple items together for one price. A product bundle is good for your customers because they pay less for each item than what it would cost if they bought each item individually.\n\n\n\nRelease stored value rewards to attract customers and repurchase their favourite products.\n\n\n\nBuild an exclusive points system to bring more loyal and active customers\n\n\n\nCompliance: make sure your features are not in breach of the marketing restrictions.\n\nThe Tencent team is very careful about protecting their users, especially against marketing incentives. Make sure that the features above comply with WeChat Rules and Marketing Restrictions."
    },
    {
        "link": "https://appinchina.co/services/wechat-miniprograms",
        "document": "WeChat (parent company Tencent) launched its Mini Programs and Mini Games platform in 2017. In March 2019, Tencent opened its Mini Games platform to developers worldwide.\n\nWeChat boasts over one billion active users a month. It is the primary source of communication for a whole country, making it the number one app in China. Users maintain their social and professional contacts with it, sharing files and photos. It is the most used mobile payment solution in China, where cash payments are becoming more scarce.\n\nWeChat Mini Programs are an easy way to get your brand into the space because they have:\n• WeChat Integration. Users don’t have to download and install anything. They don’t have to log in again if they leave, and your Mini Program or Game can access the user’s WeChat account profiles and friends lists, and use WeChat Pay for purchases. Unlike nearly any comparable program in the Western world, you can safely assume that every Chinese user has a WeChat account and WeChat installed on their device(s).\n• Utility & Value. As opposed to a post, ad, or other marketing message, a Mini Program is interactive and promises to allow the user to do something useful, increasing the likelihood a person will install and use it.\n• High ability to go viral. While nothing is guaranteed, because they operate within China’s most popular social platform, your app has an increased likelihood of going viral because it can more easily be shared and pop up in front of more eyeballs.Incredibly large user base. With more than 1 billion monthly users, there is no larger app ecosystem in the world outside of Facebook.\n• Stability and Manageability. Mini Programs only operate within the WeChat program ecosystem, meaning they will work on any device that has WeChat installed, and users remain the WeChat platform when they are running them. They offer cross-platform compatibility right out of the box.\n• Easy support and upgrade threshold. They will be easier to support and upgrade as a result, although we still recommend testing across multiple devices and screen orientations to ensure a consistent user experience.\n• HTML5. You can leverage the power of the large, existing HTML5 ecosystem by easily converting HTML5 apps and games into WeChat Mini Games, no matter which game engine you used to develop them. The difficulty depends on the size of your original game and the framework it was based on, since WeChat Mini Programs do have size limits\n• Auto-update, which means they are a perfect sandbox for testing out new features, UX variations or interface designs for your native app.\n\nOne reason HTML5 games are popular in China is because they carry a lower traffic cost compared to native games, as many gamers on the Mainland still have limited data plans or no wifi access.\n\nHow Do Users Find WeChat Mini Programs or Games?\n\nUsers enter WeChat Mini Programs or Games primarily through these channels:\n• Recently accessed programs displayed in the user’s Mini Program history, or after pulling down the chat inbox\n• Discover > Games > My Mini Games, then search for “小游戏” (Mini Game)\n\nHow Do You Program a WeChat Mini Program or Game?\n\nWeChat Mini Programs only support JavaScript (the main programming language of the Web), but also languages that can be compiled to JavaScript, such as TypeScript and CoffeeScript.\n\nYou can also use the JavaScript APIs (application programming interfaces) that the WeChat Mini Games framework supports (Canvas 2D and WebGL) to draw graphics, animations, and do real-time rendering.\n\nThe three major game engine makers in China support WeChat Mini Games: Cocos Creator, Egret, and Laya. About 50% of the Mini Games on WeChat use the Cocos engine, with the second-most popular being Laya (25%).\n\nFor now, popular foreign HTML5 game engines such as Phaser.js, Three.js do not offer direct support, but can still be used with adaptations.\n\nPlease note that CSS and DOM cannot be used during development of a WeChat Mini Program or Game. This means you may have problems with some third-party libraries, such as JQuery (which uses the DOM API). Also, available storage space, memory and performance are lower than native apps, so be sure to test extensively for crashes.\n\nBe aware that WeChat Mini Programs don’t fully use the HTML5 standard. It just simulates these interfaces. So it can be better to develop with an engine that knows the limitations of the WeChat development environment and SDK.\n\nHow Do WeChat Mini Programs and Games launch?\n\nTo improve loading speed, WeChat launches the first-package and a sub-package with a maximum size of 8M. As this is unlikely to be large enough for your game, you will need to host some resource files on your own server.\n\nSo to get your program, a user scans your QR code, which will download a small program package from WeChat and complete its code initialization. Then the code in this package will request remote server resources as it executes, finally bringing the user to the first screen in your program or game. This is why it is important to control the size of your Mini Program or Game to get the best user experience and minimize load times.\n\nHow are Mini Programs different from Mini Games?\n\nHow To Get Started – The Hard Way\n\nYou will need to create a developer’s account with WeChat to begin developing your WeChat Mini Program or Game.\n\nNote: You must be a Chinese company or individual, or your company must have a Chinese entity (or WFOE), in order to publish a WeChat Mini Program or Mini Game. At this time, overseas companies and non-Chinese individuals can only open either a WeChat Official Service account or Subscription account – neither of which will allow you to develop Mini Programs or Games.\n\n1. Register Your Developer Account and Open A New Project\n• Go to the official WeChat account registration page.\n• Select “Mini Programs” and enter the required information to set up your account. If you are registering a game, select “Game” as the service category and “Casual Game” as the subcategory.\n• You will need to submit the required documents and licenses. Note that the same licenses you need for publishing a native app will be required for your WeChat Mini Program or App as well. For example, as your server will be in China, you will need an ICP beian at the very least.\n• A 300RMB fee will be required to verify your company identity with WeChat.\n• Approval of your official developer’s account generally takes 1-3 days. You will be contacted for additional documentation if your application is rejected.\n• Once approved, download the developer tools according to your operating system platform from the official WeChat Developer’s website.\n• In the Mini Program Management backend, register your mini program to get its AppID.\n• Open the WeChat development tools, and input the corresponding AppID and project name to start your project.\n• If your Mini Program or Game needs to accept payments, you must go through the process to register and verify a WeChat Pay account before you can integrate payments into your app.\n• js script logic file. This is the primary code file, the same as the PHP code file on the web, or Java code for Android apps.\n• Layout WXSS file, used to write the page layout. This is equivalent to XML layout code in android development, HTML code in web development, is used to write page layout.\n• WXSS files. This is the equivalent of CSS in web development, used to style the pages of your app.\n• On WeChat’s official website, you will find some official tutorials and the API documentation.\n\n3. Submit Your Mini Program or Game For Approval\n\nAfter your Mini Program or Game is complete, submit it to the WeChat team for review and approval. The approval process usually takes 1-3 days.\n\nNote that the same laws and content restrictions that apply to native apps in China also apply to WeChat Mini Programs and Games.\n\nLink: Legal Regulations and Content Restrictions on Apps in China\n\nHow To Get Started – The Easy Way\n\nAppInChina can quickly develop and publish a WeChat Mini Program for you, based on your specifications and needs. We can also streamline and help you avoid some of the paperwork and documentation normally required, while you retain full rights to your Mini Program. Depending on your needs, Mini Programs can be developed in as little as as 1-2 weeks. Contact us below for a quick custom quote."
    },
    {
        "link": "https://developer.tuya.com/en/docs/iot/applet-ecology?id=K9ptacgp94o5d&_source=487e813bb4a236b0a7d309e0a0baea6a",
        "document": "Tuya provides the WeChat Mini Program solution to help users pair and control smart devices across categories and brands simply on Tencent WeChat, share devices with other WeChat users, and enable scene linkage. You can bind a WeChat mini program with an official account on WeChat and push notifications from devices to the official account to increase user engagement. You can also build an OEM WeChat mini program and integrate it with your OEM app to optimize your operational and promotional efficiency.\n\nFor certain popular smart products with simple features, if users access them on a dedicated app, user friendliness might be reduced. Instead, WeChat mini programs bring a lower barrier to entry and higher user stickiness by virtue of the out-of-the-box feature. WeChat mini programs perfectly meet your needs in advancement of smart products.\n\nTo simplify the integration of the WeChat Mini Program solution into your project, Tuya provides the following integration methods: OEM WeChat mini program, cloud function, and cloud plug-in.\n• OEM WeChat mini program: You can effortlessly build a branded mini program that supports efficient control of smart devices. For more information, see OEM WeChat Mini Program.\n• Cloud plug-in: This is a plug-in that does not require additional investment in development. You can configure its themes and leverage the built-in service logic to seamlessly integrate it into your existing WeChat mini program project. At present, Tuya’s existing cloud plug-ins include the smart pairing plug-in, automation plug-in, generic panel plug-in, and message center plug-in.\n• Cloud function: A cloud function includes authentication and interface distribution of the Tuya Developer Platform, and saves you the server-side development and cloud-cloud connection. You can call cloud functions to easily develop branded WeChat mini programs as required and implement the control and management of Tuya-enabled devices. The following sequence diagram shows the process to call a cloud function.\n• Use case 1: Have development experience in WeChat mini program development If you own an R&D team, you only need to create a WeChat Mini Program project on the Tuya Developer Platform, deploy cloud functions, and then run the WeChat mini program demo. After you finish the demo as instructed, you can make API requests and start development.\n• Use case 2: Have development experience, but no experience in WeChat mini program development If you own an R&D team that lacks experience in developing WeChat mini programs, the team can read the following WeChat’s documentation to get an overall understanding of WeChat mini programs:\n• With the above information in mind, create a WeChat Mini Program project on the Tuya Developer Platform, and run the WeChat Mini Program demo. After you finish the demo as instructed, you can make API requests and start development.\n\nTo customize your WeChat mini program development, you can submit a request (currently in Chinese only) and get professional services from Tuya’s engineers.\n\nAfter reading the documentation, if you have questions, suggestions, complaints, or requirements during your journey of WeChat mini program development, submit a ticket or request customer services to get support."
    },
    {
        "link": "https://tencentcloud.com/document/product/1219/61453",
        "document": ""
    },
    {
        "link": "https://developers.weixin.qq.com/minigame/en/dev/wxcloud/guide/functions.html",
        "document": "A cloud function is a function that runs in the cloud (server side). Physically speaking, a cloud function can be composed of multiple files that occupy a certain amount of computing resources such as CPU memory. Cloud functions are completely independent of each other and can be deployed in various zones. There is no need for developers to purchase or build servers. They only need to write the function code, deploy the code to the cloud, and call the code on the Mini Program side. Meanwhile, the cloud functions can also be called among each other.\n\nA cloud function is written in the same way as a locally defined JavaScript method, and the code runs in Node.js on the cloud. When the cloud function is called by the Mini Program, the defined code is executed in the Node.js runtime environment. A series of operations, e.g. network requests, can be done in the cloud function, just as using JavaScript in the Node.js environment, and we can also use a variety of services via SDK at the backend of cloud function. For example, we can use the database and storage APIs provided in the cloud function SDK for database and storage operations. For details, refer to the backend API documentation of Database and Storage.\n\nThe unique advantage of Cloud Base cloud functions is their seamless integration with WeChat login authentication. When a cloud function is called by the Mini Program, the incoming parameters of the cloud function are injected with the openid of the Mini Program user. The developer is not required to verify the openid because it has been authenticated by WeChat and can be used directly.\n\nNext, let's step through the following contents:"
    },
    {
        "link": "https://github.com/schmunk42/wechat-miniprogram-wiki",
        "document": "China’s top messaging app WeChat rolled out something quite radical: mini-programs. Embedded apps which require no download, no install. Open, use, share, done!\n\nThere is large debate – and many clickbaits – about how practical these apps are... Indeed the framework provided to developers is only at infancy stage, still limited, and honestly a bit frustrating. Nevertheless Tencent is investing unprecedented resources into the adoption of this channel, building momentum, and opening opportunities to the first-movers. We believe that these hackers may find quick-wins if they dare to give it a try.\n\nGot ideas of services you would like to deploy in WeChat asap? Have basic knowledge of Javascript and want to experiment with this framework? Got lost in the Google translation of the doc? Need a small boost to decrypt what is possible or not? Hello and welcome.\n\nFinding your way through the official doc is not easy. In fact, it requires a lot of trial/errors, some research on open-source code and many assumptions to get something done. You have been banging your head on the wall. We get it.\n\nOur mission is to help creative entrepreneurs build great tech products. We will help you take the small steps.\n\nThe content below is not a translation of the documentation and will surely be outdated fast. It is simply our contribution to help any one get started and build a cool WeChat Mini-program fast. Do it now.\n\nAre you working on a mini-program? Do reach out to us if you’d like to share your work, meet our crew, ask for help!\n\nIf you want to contribute, you can send a Pull Request here or give us a shout on shanghai(at)lewagon.com for suggestions!\n\nThis original piece was written by Le Wagon alumni: Adrien Pelegri (Batch #30) with the support of Thibault Genaitay (Driver China) and Stephane Delgado (Batch #61).\n• The life cycle of your MP\n• Create dynamic pages\n• Enable the forward button of the drop-down menu\n\nThe registration process is really tough, especially if you don’t have any experience with the fantastic Chinese administrative world. The WeChat verification process will be long. Keep your calm.\n\nFrom the WeChat mini-program registration, until the development release, you basically need to go through these steps:\n• Pick the right type of application and go through the registration process.\n\nHere is a list of materials you will need to register a mini-program as a company:\n• Chinese ID. This person will own the account and scan QR codes a lot.\n• Phone number, to certify your identity during the verification process.\n• Chinese business license, to register as an enterprise.\n• Fill in the official letter Tencent provides, sign it (by the admin) and stamp it with the enterprise stamp. Upload it.\n\nWe recommend you follow this comprehensive English manual on how to register and create a mini-program project: Medium article or check this official WeChat documentation (Chinese).\n\nAn IDE (integrated development environment) is a set of programming tools for writing an application. It consists of a code editor, a compiler and a debugger, accessible through a single graphical user interface.\n\nHere is a quick tutorial to master the WeChat IDE and take the most from it.\n\nA Code editor with the tree of your files on the side and a Simulator on the left, which displays the preview of your app.\n\nHere is a complete list of buttons to perform tasks when you are in development:\n\n1. Profile: click on it to log out from the IDE. 2. Code Editing 3. Debug / Inspect: see below. 4. Project information: see below. 5. Compiler: Can be usefull to compile the app when the auto-refresh of the view is not working.\n\n6. Scene value\n\n 7. Cache\n\n 8. Shut down: Quit the project you are on and move toward another one.\n\n 9. Hide the simulator\n\n 10. Devices: It gives a list of devices to test mini-program responsivness.\n\n 11. You can work on: wifi, 4G, 3G, 2G.\n\n 12. Hide arborescence\n\n 13. Manage your files: Search, add and delete a folder or a file.\n\nDebugger / Inspector: This tool is an important part of the IDE, it looks like the good old Chrome DevTools.\n\n1. Top bar ​\n\n Network: This panel is to debug request and socket issues or page load performance.\n\n Storage: allows to access all the data you have in your cache.\n\n AppData: is used to display the current project data. You can directly edit the data in the panel and preview it.\n\n Wxml: let you inspect and edit on the fly every elements of your page.\n\n Sensor: you can simulate location and the performance of the mobile device to debug gravity sensing.\n\n3. Console The console will let you know what errors you have in your code by logging diagnostic information and interact with javascript in the page as your console.log() you have placed and more.\n\nProject information: This page is where you will find the current project details as your AppID, directory information and more. By clicking on the preview option you will be able to test the mini-program directly on your phone after scanning a QR code.\n\nNote: While you are testing your mini-program on your phone, you can enable the debugger tool directly on your device.\n\nThis section will introduce the structure of the \"quickstart\" provided by WeChat (boilerplate) and the fundamentals you need to comply with this framework.\n\nThe index page of this boilerplate displays a welcome page with the current user profile's information. A click on your avatar will redirect to a new page displaying your current mini-program logs.\n\nWeChat mini-programs start with \"app\" files (see the screenshot below). These files are the mini-program root directory therefore the entrance of your mini-program. (Here is the official WeChat documentation).\n\napp.js is the script code, the global logic of your mini-program. You can setup and manipulate the life cycle functions of your MP, declare global variables or call an API.\n\napp.json is the global configuration of the overall mini-program. You can configure, MP (mini-program) page’s path, the MP window style, set the network timeout and debug configuration.\n\nNote: Comments are not allowed in the app.json file.\n\napp.wxss is the global style sheet of the mini-program. You should declare common style rules here. ​\n\nThe two pages of WeChat quickstart are:\n• index page which is the welcome page.\n\nPages folder is where you have or create your mini-program pages. Each page you create is required to contain two files:\n• .js file for the logic of your interface.\n\nYou can add two more files in each page you create:\n• .wxss file for the style sheet of your interface. ​ Rule: Each page of your mini-program can be composed of four different file extensions (js ; json ; wxml ; wxss) but should have the same name.\n\nFurther details: A new page will always contain a .js file and a .wxml file minimum. The .json file extension is used just in case you want to override the window configuration in this particular page. Add .wxss if you want to add a style sheet to your page.\n\nLet's see what happens in each page of the quickstart project.\n• The snippet above assigns the app instance to a variable. This app instance will be called in function later on to collect user information.\n• Next it registers a function and sets to dynamically bind data into the view.\n• function redirects the current user to his logs page.\n• First it requires util.js in the purpose of calling later on.\n• function retrieves current user logs from the cache . Then render logs in which is provided by the require of util.js.\n\nIn Utils are stored imported libraries that you may require elsewhere (in our example, util.js is required in log.js). In the code snippet above, the function is defined in util.js to properly display the date of your logs.\n\nUp to now you catch the fact that you will have two layers in each page:\n• Logical layer (.js): process the data and send it to the view layer, while receiving events triggered from the view layer.\n• View layer (.wxml/.wxss): display the data processed by the logical layer into a view, while sending the events of the view layer to the logical layer.\n\nWe can break-down a mini-program life cycle in two cycles, the application cycle and the page cycle. The life cycle is the start & end point of the mini-program whereas life cycle is activated when users browse through the mini-program.\n\nfunction is used to register a mini-program. It takes an object as parameter which specifies the life cycle functions of a MP.\n• A user opens the mini-program which triggers function and initialize the MP.\n• When the initialization is completed, the function is triggered.\n• The function is triggered when the current user exits the mini-program.\n\nWeChat framework offers a global function called which is an instance of .\n\nfunction, can be useful for the simple reason that you can’t define the function inside of a function. In order to access the app instance you must call function.\n\nfunction is used to register a page. It accepts an object as a parameter, that specifies the initial data for the page, life cycle functions, event handler and so on.\n• After page registration, the framework calls the function.\n• When a page loads, it calls the function.\n• The first time the page is displayed, function calls to render the view.\n• The is triggered when the mini-program jumps to another page.\n• function is called when you quit a page by using and . Or when the current page is relaunched, .\n\nWhen the life cycle is complete, the page loads by calling for the first time, and will only call it once.\n\nWhen the mini-program is running from the background (app life cycle) to the foreground (page life cycle), it first calls the function and then calls the function when switching to the foreground.\n• function cannot be reused and should be register once in the app.js.\n• Do not call when the page is not yet generated.\n• By using you can obtain an instance of App() but lifecycle functions don’t attempt to call the functions.\n\nThe setup of your mini-program is simple and designed to save you time and frustration when having customization needs.\n\nWeChat divides the app.json configuration in five parts:\n\nIn this part we will break-down this complete app.json setup exemple.\n\nrole in app.json is to define all routes of your mini-program. This item's configuration is mandatory and it takes an array of strings. Each sub-folder and files within the parent pages folder corresponds to a routing path.\n\nTip:\n\n Each time you add a route path to , the IDE will automatically create the folder and files that corresponds to the path you just created.\n• Initialization: Once the mini-program is launched, the first page is loaded by and function.\n• Open a new page: Opening a new page hides the current page and jumps to another one using the . Behind the scene the first page will be hidden by the call of the onHide function and jump over the other page by calling onLoad and onShow.\n• Page redirection: Close the current page by calling onUnload and jumps to a page within the app using which call onLoad and onShow functions.\n• Page return: the current page, calls function and then displays the target page by calling .\n• Reloading, : Close all pages and reloads the current page. *Does not work on certain andriod devices.\n• Switch tabs, : Jumps from one tabBar page to another one and close or hides all other non-tabBar pages by using onUnload, onHide and onShow. Discover all possible scenarios for tabs switching.\n• No callback at the top of the page.\n• The tabBar path cannot take parameters.\n• , can only open a non-tabBar page. - can only open and display tabBar page. - can be used for every pages.\n• The tabBar at the bottom of the page is displayed according to the page you are on. As long as the page you are on is defined in the tabBar, the tabBar will be display.\n• Page stack modification will lead to routing and page status error, it is not recommended. Dig further in pages stack mecanism.\n\n: This function is used to get the instance of the current page stack. It is given as an array in the page stack order. The first item of the array is the first page and the last item the current page.\n\nas the name suggests, is the item which configures the top or bottom tab bar. is an array which accomodates a minimum of 2 and a maximum of 5 tabs.\n\nUsing the key, requires an object in each element of the array.\n• Setting your position to top could not display icons.\n• The limit size of your icons in the bottom are, 40kb, 81px*81px.\n\nThe window item is used to set mini-program title and common window style.\n\nneeds to be configured in the global app.json as above and then you can call in mini-program pages.\n\nCode snippet of the \"Enable pull down refresh in a page\" file.\n\nWeChat offers the possibility to change the title of the top navigation bar within each page.\n\nNetwork timeout may be provided in a variety of network requests. Here is the link to the WeChat documentation if you want to go further.\n\nHere is a link to the WeChat documentation.\n\nWXML is a WeChat markup language similar to HTML. It combines a basic library of components and an event system to build dynamic pages.\n\nThe WeChat event system behaves like classic Javascript events which handle logical responses to the view layer.\n\nThe table below lists the significant differences you will face in development between WXML / HTML:\n\nis not a component, it is only a packaging element, it will not do any rendering in the page and only accept control properties.\n\nNote: All components and attributes are lowercase.\n\nThe Mini-program framework does not allow developers to use the DOM to control your WXML elements. Instead, you will update your view layer (.wxml file) via data binding method:\n\nIn order to comply with WeChat requirements the attribute has to be initialized in JSON format within function. Data binding technique allows to update data dynamically within the view layer.\n\nA good practice is to initialize at the top of the function.\n\nThe dynamic which is passed over to the view layer is taken from the data attributes in the corresponding function.\n\nData binding syntax:\n\n Data binding uses Mustache syntax (double braces) to wrap variables. This syntax is a logic less template engine analysis. In short, it is very convenient and easy to use!\n\nWeChat offers lot of possibilities regarding data binding usage. You have the oportunity to use data binding on component attributes, properties, string operations, arithmetic operations, data path and array.\n\nThe control property binds an array from your logical layer (.js file), loops through it and assigns the data.\n\nSimilar to you can use to render multiple lines block. (See block in the WXML table above).\n\nFor more details on the code above see this Github repository.\n• For more details about list rendering refer to WeChat documentation .\n\nSimilar to , is used to define a conditional statement and determine whether the block should be rendered or not.\n\nIf you want to display more than one tag within your conditional statement block you can use .\n\nTemplates allow to define code snippets you want to reuse several times in different files of your mini-program.\n\nWXML template item has its own scope and can only use data to pass in.\n\nFirst, to declare a template you need to define its name.\n\nLater on if you want to call a template within the same file use the attribute and the template name as a value to declare the required template. And don't forget to pass data to the template using the attribute.\n\nTo declare a template already defined in a new file you first need to import it.\n\nCode snippet \"import and call the template in index.wxml\" exemple\n\nMore details on the WeChat documentation here.\n\nIn addition to data initialization and life cycle functions, the framework allows to define event handling functions.\n\nWXML element (event handler) triggers the event and the logical layer binds the event handler to receive an event object as a parameter.\n\n: This function updates data within the logical layer which next will be send to the view layer. function receives an object as a parameter and updates the key value by using as a data path.\n\nThere are many kind of binding events, most components have their own definition of binding event.\n\nThe two common binding events used are and . The catch event is the one that prevent against bubbling events.\n\nBubbling event concept:\n\n For non-javascript folks, bubbling event can be defined when an event occurs in an element nested in another element. Both the parent node and the nested elements are registered as event handler for that particular event. The parent node of the nested element should use , which will prevent the event from bubbling to ancestor elements.\n\nMostly used when you nest elements and don’t want to display the parent node of the element you bind.\n\nHere are practical tips to enable the mini-program sharing. WeChat opens up two ways to share a mini-program:\n• Possibility to enable the forward button within the drop-down menu that appears by clicking on the upper right corner of the page.\n• Create a forward button within the page of your mini-program. It makes the sharing process more user friendly.\n\nIn both variants, the framework will automatically forward a mini-program card with a screen shot of your MP header.\n\nTo enable this button we need to use a function called .\n\nCode snippet \"Enable the forward button of the drop-down menu\" example.\n\nIn this function you have to define a title that will be displayed on the top of the forward card and the current page path. If you forget to add a title WeChat will add one by default (your mini-program name).\n\nRestriction: The only thing that you can define in this case is the event . The forward button will be created by the framework itself.\n\nThis feature allows developers to create a specific forward button within the page by using the button property and its value .\n\nCode snippet \"Create a forward button within the page\" example.\n\nUnlike the first case, we have to create the event handler that triggers the function. This function calls and pass as a parameter.\n\nNote: Both variants are using a function which implies that you are sharing the specific page where you declare the function.\n\nWeChat aims to build a friendly, efficient and consistent user experience. To make it happen WeChat official design team provides a WeUI repository. This basic front-end library (WeUI) is consistent with WeChat native visual experience. WeUI, can be understood as a WeChat front-end library, similar to Bootstrap. It includes a large set of components such as button, cell, dialog, progress, toast, article, actionsheet, icon and more.\n\nThe downloaded code contains WeUI source code and a mini-program sample based on WeUI.\n\nImport WeUI style in your app.wxss to enable the use of WeUI style in your mini-program:\n\nFor more details regarding WeChat design guidelines you can find here the full documentation.\n\nWXSS has almost all of the features CSS has. The style sheet defined in app.wxss is the common style rules identified on each page. The style sheet defined in a particular page is a local style that acts only on the current page and thus overwrites same selectors used in app.wxss. WXSS compared to CSS has two major differences:\n\nWXSS uses (responsive pixel) as unit. It allows to adjust pixels according to the width of the screen. You may continue to use the classic unit (just not the WeChat way of doing things).\n\nTo import outbound style sheet use statement followed by the relative path and a at the end of the statement.\n\nWeChat framework cannot support lot of standard CSS selectors, such as cascading selector.\n• In development use Iphone 6 device as a standard visual. You may have some glitches on smaller screens.\n\nWeChat framework provides to developers a large set of basic components, the exhaustive list of components is here.\n\nis your anchor in html. It is used to link from one page to another. The most important attribute of the navigator element is .\n\nPicker component in WeChat documentation is divided in three selectors, classic selector which is the default one, time selector and date selector.\n\nThe use case below is based on a date picker but the logic remains the same for another picker.\n\nA switch is a visual toggle with two states, on and off.\n\nA toast is a non-modal element used to display brief and auto-expiring components to inform users.\n\nIn the code snippet below we are faking a form submission to show how a toast is working and display.\n\nIn the code snippet above we created a dynamic button with a purpose of submitting a form. The button is animated by a loading spinner when you click on it.\n\nThen we display a toast by using API to inform users.\n\nA modal box allows to overlay a small element over a page. The primary benefit of modal boxes it that they avoid the need to use of conventional window pop-ups or page reloads.\n\nThere are five situational categories where modal boxes are commonly used:\n• Error: To alert users of an error.\n• Confirm or Prompt: To remind users to do something before moving on.\n\nThe component is a native component, it has a long list of attributes, we will go through the major ones. Here is the link to WeChat documenation for more details.\n\nRefer to the Location-based services part of the wiki if you want to have a look on location-based services WeChat is offering through the API.\n• Do not use scroll-view on map component.\n• CSS animation on the map component is invalid.\n• need to specify as\n\nThis section aims to explain the different steps you have to follow if you want to persist your app data and fetch data on a database. We selected Leancloud.cn for the simplicity of its installation for beginners.\n\nSome context first: The example below is based on a Mini-program aimed at gathering feedbacks through a simple form. This mini-program persists the data collected on Leancloud.cn. We will explain how to fetch and display data stored on the DB. To illustrate this second section (fetch data) we created a new page that displays all reviews stored on Leancloud.\n\nHere is the Github repository of the project used to create this tutorial.\n• Create an object and encapsulate data you want to persist.\n• Create a new review page and a button to redirect users to this review page.\n\nWhen the structure of the form is created as above, next we need to create the event which is trigerred by the form submission.\n\nLocal storage: In the function, we assigned user's inputs to local variables in the purpose of testing if we can collect form's user inputs locally.\n\nBefore we begin the installation, if you are in development white list your domain name by checking up the last checkbox of the project interface within your WeChat IDE . For specific debugging needs you can follow this Leancloud tutorial.\n\nTo get started with Leancloud setup, first create an account on Leancloud.\n\nNow that you are ready for the installation and initialization of Leancloud in your mini-program you can follow their documentation that will let you go through a two-step process:\n• The installation of the av-weapp-min.js in your utils folder.\n• The initialization of the app by adding Leancloud and in your app.js.\n\nIf you are lost refer to the Github repository of the project.\n\nIn the first place, create a new folder called model and add a file to this folder. Named your file in accordance with the kind of object you want to persist, in this case a form. This step is not required but permits to keep your files organised.\n\nLet's create the object: In the form.js file you just created, require av-weapp-min.js you installed in util.js and assigns it to an constant. Then instantiate the object.\n\nCode snippet \"require Leancloud and create an object\" example.\n\nNow that you have instantiated the object, create the form object to encapsulate data in the logical layer (here form.js) and redirect user after the form submission.\n• Inside the function we added permissions that allow Leancloud to read and write through the object we created and want to persist.\n• We defined a function that encapsulate data in the new object and redirect user when the form is submitted.\n\nSo far everything is done within your mini-program, what remains to be done is a projection of the data collected within your Leancloud dashboard.\n• Create a table in this project by adding the class object you created, such as a class in this exemple.\n• Add columns to your table (be cautionous on the data type you specify when you add your columns).\n\nTest it to be sure that the data collected is persisted within your Leancloud dashboard.\n\nFirst let me remind you the background of this section. We want to display in a new page the list of reviews we have collected and persisted on Leancloud. I assume that you have followed the first section of the tutorial, (if you missed it see above).\n• Fetch data from Leancloud and display all reviews stored.\n\nSo let's create a new review page and a button that redirects to review page. (tip: just add the route path to your app.json, the framework will create the new page folder and files by itself).\n\nThe next step is to fetch data stored on Leancloud and displays it.\n\nCode snippet \"fetch data stored on Leancloud and displays it\" example.\n\nAbove we created a list rendering block using that display each review and name of the person who creates the review.\n• We are doing a query on the object which contains the data stored.\n• Then we are sorting out each form according to its creation date to finish by setting up the array.\n• Display data in the view using the Mustache syntax.\n\nIn this use case we have just seen how to store data we collect locally to Leancloud and how to fetch data stored from Leancloud.\n\nWe recommend you to read the Leancloud documentation or check the LeanTodo mini-program created by Leancloud, Github repository.\n\nWhen you are in production you have to configure Leancloud domain name within WeChat platform. Follow this leancloud tutorial.\n\nAll the user information you have access to through :\n\nWeChat \"quickstart\" (WeChat boilerplate) gives you a function in the app.js file. As the name suggests, this function is meant to obtain user information. Let’s go through this function step by step.\n• function has a parameter cb, which is also a function.\n• The block of function will be passed if from is not null.\n• Otherwise is null, function calls the login interface.\n\nFirst case, form is not null\n\nThe if condition statement aims to determine if cb argument passed to get is a function type and if it is, it will pass .\n\nHow do they figure out if cb parameter is a function?\n\nLet's go through this function of index.js\n• The function calls function on the app instance.\n• They define a function as a parameter that update to current user information.\n• And pass updated to in the app.js file.\n• If is null function returns the statement which calls the login interface.\n• Then the current user successfully log in, is called and act as the block we saw above.\n\nIf current user is already log in, user information are assigned to through index.js page which calls function. And then the same logic is applied.\n\nWechat mini-programs have a mechanism of cache in their API. In fact, each mini-program has its own local cache storage.\n\nReminder: Cache storage is used to store data we want to access quickly. It reduces user waiting time, since the request is satisfied from the local cache which is closer to clients compared to the original server used to request your DB.\n\nCache storage offers two kind of methods to store data in the cache:\n\nbuild parameters as a json, a key to specify the stored key and data to specify the key value to store.\n\nsyntax is simpler, parameters are directly passed. And can get data through the incoming callback function.\n\nWeChat provides three main actions on the cache:\n• Save data in the cache, or .\n• Read data from the cache, or .\n• Clear data of the cache, or .\n• Remove data in the cache, or .\n\nCode snippet \"Fetch data from the cache and display data in a new page (synchronous method)\" exemple .\n\nYou can call up your client code scanner UI by using the API. It gives direct access to the WeChat scanner through a CTA button with the aim of scanning a QR code.\n• to choose the location you want to display.\n• to display location on their buit-in map view.\n\nAbove we used the to retrieve current user position by getting his latitude and longitude.\n\nfurther details: If a user leaves the mini-program but display on top of his chat the mini-program you can continue to call and so get user location continiously.\n\nDisplay the current user location on WeChat built-in map: API call, enables the opening of WeChat built-in map view in order to display the location you got from function we created above.\n• to choose an image from your album or camera.\n• to preview the image before the upload on the app.\n• to save image from the mini-program to your album.\n\nIn the example below we create a function called with the aim of calling user album or camera by using . Then we are using to get image information.\n\nCode snippet \"upload an image from album or camera\" example.\n\nNow that we have an image on the page let's save the image from the mini-program to current user album by long tapping the image.\n\nCode snippet \"long tap the image to save it within user album\" example.\n• to upload a file to the appointed server.\n• to download a file from the appointed server.\n\nIn the example below we have one function and one event handler: and respectively, as their name states, you should be able to add a new post and get posts using a call.\n\nNow that we've posted, let's get and display it to the view layer. For simplicity sake we'll take advantage of onPullDownRefresh to reload new posts.\n\nAll along our mini-programs creation path we encountered issues and questions, we want to share with you. If you had some issues you want to share, reach out us.\n\nWeChat allows only API that have an ICP license, so you can forget about most of the APIs you are familiar with in western countries.\n\nHere is a directory of APIs available in China, check it out.\n\nImage ressources cannot be obtained through the CSS . I know it is dreadful, but we have to deal with it.\n\nThere are two ways to bypass this frustration:\n• You can use the CSS but you can't use a realtive path, you have to encode your image in base64 and then pass it to to the . Here is a tool to encode images in base64.\n• Or you can use the tag and treat images with tag attribute like . WeChat has 13 modes, 9 are cutting mode and 4 are zoom mode. Here is a link to the documenation.\n\nRPX stands for responsive pixel which is the unit of WeChat mini-programs. According to the official definition, is based on the adaptive screen width.\n\nIn fact RPX unit is based on the unit which stands for \"root em\". Why not unit?\n\nThe unit is relative to the font-size of the parent, which causes compounding issue. The unit is relative to the root element which conteracts the compounding issue (font sizing duty).\n\nHowever, to come back to unit, rpx advantages are:\n• It scales according to the width of the ratio (screen width) which makes the experience more responsive.\n• It facilitates the realization of high-definition, 1 pixel line.\n• Well suported on mobile and tablet devices.\n\nAre you working on a mini-program? Do reach out to us if you’d like to share your work, meet our crew, ask for help!\n\nIf you want to contribute, you can send a Pull Request here or give us a shout on shanghai(at)lewagon.com for suggestions!"
    },
    {
        "link": "https://developers.weixin.qq.com/miniprogram/en/dev/reference/api/Page.html",
        "document": "Register a page in the Mini Program. Take one. Type parameters that specify initial data for the page, lifecycle callbacks, event handlers, and so on.\n\nIs used in the first rendering of the pageInitial data。\n\nWhen the page loads, Will be The string form is passed from the logical layer to the render layer, so Data in must be converted to Type: string, number, boolean, object, array.\n\nThe render layer can be created by WXML Bind data.\n\nTriggering of the lifecycle and routing of the pageSee for details\n\nTriggered when the page loads. A page will be called only once, and can be called in the onLoad Gets the parameters in the path to open the current page.\n\nTriggered when the initial rendering of the page is complete. A page is called only once, meaning the page is ready to interact with the view layer.\n\nNote: to set the interface content API Such as[wx.setNavigationBarTitle]((wx.setNavigationBarTitle), in the After that. See for detailsLife cycle\n\nPage concealment/Triggered when you cut into the background. Such as wx.navigateTo Or bottom Switch to other pages, Mini Programs into the background, etc.\n\nTriggered when the page is unloaded. Such as[wx.redirectTo]((wx.redirectTo) or[wx.navigateBack]((wx.navigateBack) to another page.\n• Need to of[ ]((configuration/app#Window) option, or[Page configuration]((configuration/Open in page)) 。\n• Can be passed[wx.startPullDownRefresh]((wx.startPull Down Refresh ()) triggers a drop-down refresh, and then triggers a pull-down refresh animation. The effect is consistent with the user's manual pulldown refresh.\n• After processing the data refresh,[wx.stopPullDownRefresh]((wx.stopPull Down Refresh) can stop the drop-down refresh of the current page.\n• Can be of[ ]((configuration/app#Window) option, or[Page configuration]((configuration/Set trigger distance in (page) 。\n• This event will be triggered only once during slippage within the trigger distance.\n\nNote: Please only be present when needed. page Do not define an empty method. To reduce the impact of unnecessary event dispatch on rendering layer - logic layer communication. Note: Please avoid onPageScroll Too frequent execution in Equal causeLogic Layer and Render Layer Communication operations. In particular, each transmission of large amounts of data will affect the communication time.\n\nListen to the user click on the upper right corner of the menu \"collection\" on behavior, and custom collection content.\n\nThis event handler requires return One Object for customizing collections:\n\nListen to the user click on the in-page forward onbutton assembly Or the upper-right menu \"Forward\" on behavior, and customize the forward content.\n\nNote: The Forward on is displayed on the upper-right menu only if this event handler is defined\n\nThis event handler requires return One Object, used to customize the forwarding content, returns the following:\n\nCustom forward content Base library 2.8.1 From now on, share chart support cloud picture.\n\nListen to the upper right menu \"share to friends\" on behavior, and customize the sharing content.\n\nNote: The \"Share to Moments\" on appears in the upper-right menu only if this event handler is defined\n\nThe event handler returns a Object, for custom share content, does not support custom page path, return content as follows:\n\nTriggered when the Mini Program screen rotates. See for details [Response to display area changes]((view/resizable#Enable screen rotation support on your phone))\n\nComponent event handlers can also be defined in. In the components of the render layer[Event binding]((wxml/Event) is executed when an event is triggered Page The event handler defined in the.\n\nPath to the current page of type 。\n\nFunction is used to send data from the logical layer to the view layer (asynchronously), changing the corresponding Is synchronized.\n\nwith In the form of to hit the target The corresponding value is changed to 。\n\namong Can be given in the form of a data path, supporting changing an item in an array or a property of an object, such as ， And does not require this.data Predefined in.\n• Direct modification this.data Without calling this.setData Can not change the state of the page, but also cause data inconsistencies。\n• A single set of data can not exceed 1024kB, try to avoid a set of too much data.\n• Please don't data Any of the value Set to Otherwise this item will not be set and may leave some potential problems.\n\nIf one page is passed by another, Open, a data channel will be established between the two pages:\n• The open page can be accessed through the Method to get a object\n• of The callback also contains a Object.\n\nThese two. Can be used between objects and Methods send and listen for events to each other."
    },
    {
        "link": "https://blog.tomayac.com/2019/08/15/a-quick-look-at-wechats-mini-programs",
        "document": "While preparing for my presentation at the Google Developer Days 2019 in Shanghai, China I was reminded again that China is a market where few super apps like WeChat host a gazillion mini apps or mini programs that fulfill everyday needs like booking cabs, reserving tables, etc.\n\nI got curious and downloaded the SDK and after playing a bit with the Your First Mini App tutorial, I realized the whole thing is so close to building for the actual web, it both fascinates, intrigues, and honestly somewhat infuriates me.\n• You style your apps with WXSS, which is essentially CSS with some neat additions like responsive pixels.\n• You write your app logic with JavaScript (or TypeScript), with as the top level object and as the object you get all the cool capabilities from. The API is incredibly powerful.\n\nHere are the keys of the object:\n• You describe your interface with WXML, which is something between JSX, Vue's declarative rendering; it also reminds me of old concepts like XSLT's :\n\nOverall a really nice separation of concerns. I could very well imagine being productive with this in no time. The onboarding experience of the documentation is pretty neat. The SDK is well made with (essentially an adapted) Chrome DevTools integrated and some VS Code like features like code completion.\n\nThe overall programming concept reminds of OpenSocial (if anyone remembers that) where there is a baseline assumption of a logged in user whose social graph can be explored:\n\nThey also have nice set of declarative components, think web components essentially, that you can create with WXML and interact with from JavaScript:\n\nAnd of course they have a .\n\nFrom what I understand, it's all running in an iframe, Chrome/WeChat DevTools then hides the container, and all you see is the WXML layer. When you look at the SDK's package contents, they make no real effort at hiding any of the inner mechanics: it's all HTML (of particular interest: ), CSS (of particular interest: ), and JavaScript (of particular interest: ).\n\nFinally there is a local web server running that allows them to link from the online docs to local URLs like 127.0.0.1:32123/minicode/VBZ3Jim26zYu, which in turn allows them to open code samples from the docs that are ready to play with a click in WeChat DevTools. The web server luckily only runs when the WeChat DevTools are open."
    }
]