[
    {
        "link": "https://rimworldwiki.com/wiki/Modding_Tutorials/Xml_Adding_Weapons_Traits_Research",
        "document": "This page is a tutorial on how to create a rimworld mod it will step you through the process of creating a mod from scratch. from basic files structure to writing code for your mod. This tutorial is aimed at people who have never created a mod before and are looking to get started. and is meant to be a updated guide to the old tutorials on the wiki.\n\nThis is a follow up to my previous tutorial on how to make a mod. if you have not:\n• Added a new item to the game\n• Tested the mod in game using the Debug menu\n\nThen you should go back a read the previous tutorial.\n\nBy the end of this tutorial you will have:\n• Learned how to add sounds to your mod\n• Learned how to add a new trait to the game\n• Learned how to create a new research project\n• Learned how to create a new recipe\n\nRimworld dotnet template is a mod template that can be used to quickly set up a mod. as by now you should have a basic understanding of how mods work it is recommended to use the template to save time. If you want to do things manually thats fine (Your life).\n\nIn order to make modding easier I have created a set of code snippets for Visual Studio Code. These snippets will help you create the Xml structure for your mod. To use these snippets open VsCode then:\n\nthis will open a file called xml.json. copy this code and paste it into the xml.json file. save the file and you are ready to go.\n\nThis will allow you to type \"rwweapon\" to generate the skeleton for a new weapon. you can then fill in the details for your weapon.\n\nThe first thing we are going to do is create a new weapon.\n\nStart by creating a new file in the Defs folder called \"ThingDefs_Weapons.xml\". this is where we will put the xml for our new weapon. \n\n Start by adding the Xml header to the file.\n\nIf using VsCode simply type \"rwxml\" and press tab to generate the header. \n\n\n\nBefore we can make a weapon there needs to be a bullet that the weapon can fire.\n\n\n\n If you added the code snippets you can save time by typing \"rwbullet\" and pressing tab. this will generate the skeleton for the bullet, you can then fill in the details (pushing tab will move you to the next field). \n\n\n\nNote: The weapon def is long and extremely picky with spelling, formatting and capitalization. if you have not added the code snippets I recommend you add them now. \n\n\n\nAwesome we now have a bullet but we need a weapon to fire it. for now lets uses sounds and textures that are already in the game. \n\n\n\n\n\n If using the code snippets use \"rwweapon\" to generate the skeleton for the weapon. \n\n\n\nThats a lot of code so lets break it down. \n\n\n\nWe start by defining the weapon as a makeable gun. Then we give it a gameId (defName), a user friendly name (label) and a description. \n\n\n\nnow we define the texture (in this case we have specified the vanilla revolver texture) and the sound the weapon makes when a pawn picks it up. \n\n\n\nThe stats are the weapons weight and its accuracy at different ranges. \n\n\n\nAs we are using BaseHumanMakeableGun the weapon will be at a machining table. We define the resources and skill required to make the weapon. \n\n\n\nThe verbs define (in this case) the how the weapon shoots. We define the projectile we made earlier, the warmup time and the burst shot count. Verbs is also where you define the range and shooting sound. \n\n\n\nIn this case the tools are used to define the melee attacks of the weapon. Making sure to enclose each attack in a \"li\" tag give your attack a label, define the damage type, how much damage it does and lastly give it a cooldown time. \n\n\n\nBefore we forget we need to close the \"ThingDef\"\n\nAnd with that we have a working weapon with a custom bullet and recipe. to improve the weapon you could add a custom sound and texture or change the stats to your liking. The best way to learn is to experiment or look at other mods (I recommend looking at Vanilla Weapons Expanded as their mods keep the code clean and tidy). \n\n\n\nCurrently the weapon is unlocked by default. Lets add a research project to unlock it. \n\n\n\nWhile we could add the research project to the same file as the weapon it is good practice to keep things tidy. So let's make a new file in the \"Defs\" folder called \"ResearchProjectDef.xml\" \n\n Remember to add the Xml header and \"Defs\" tag. (Remember this can be done with \"rwxxml\")\n\nThe Xml for the research project is shorter than the weapon however it still requires correct spelling and syntax. \n\n\n\n\n\n If using the code snippets use \"rwresearch\" \n\n\n\nOk lets break down the code. \n\n\n\nJust like the weapon we give the project a gameId, and a user friendly name and a description. \n\n\n\nThe tech level will scale the cost of the research project based on the colony's tech level (Tribal starts will be more expensive than crashlanded). the baseCost is the cost of the project before scaling for tech level. prerequisites are the research projects that must be completed before this project can be researched. (In this case we are requiring Gunsmithing) \n\n\n\nThis is the position of the project in the research tree. This may take some trial and error to get right (Or you could use a mod like \"ResearchPowl\" that makes the tree easier to navigate) \n\n\n\nRight we have a research project but we need to tell the game to use it. to do this we need to edit our weapons recipeMaker. \n\n\n\nBy simply adding the researchPrerequisite tag and giving it the gameId of the research project we have locked the weapon behind the research project. \n\n\n\nTraits are a great way to add new gameplay mechanics to your mod. For now we will be adding a trait that makes the colonist have a higher Crafting skill and lower carrying capacity. \n\n\n\nTo keep things tidy we will make a new file in the \"Defs\" folder called \"TraitDef.xml\" (Remember to add the Xml header and \"Defs\" tag. [Remember this can be done with \"rwxxml\"])\n\nThe Xml for the trait is quite straight forward once you know what each tag does (for code snippets use \"rwtrait\") \n\n\n\nRight, let's break down the code. \n\n\n\nLike the other defs we give the trait a gameId however this time we also give it a commonality. This is the chance that the trait will be given to a colonist. also note that the Label and Description are inside the degreeDatas tag and not the main tag. \n\n\n\nDisabling work tags is a great way to make traits more unique. In this case we are disabling the animals work type. Remember to put all the work tags you want to disable inside their own <li> tag. \n\n\n\nThe degree data is where we define the effects of the trait. This also includes the label (player friendly name) and description. Stat offsets are changes to the colonists stats. In this case we are increasing the colonists carrying capacity by 25 and increasing work speed by 20%. Skill gains are static increases to the colonists skills. In this case we are increasing the colonists crafting skill by 4. \n\n\n\nCongratulations you have made your first trait. for now it only changes stats and skills however traits can do a lot more. The best way to learn about the more advanced possibilities is to look at other mods that add traits. \n\n\n\nAs with the other tutorials I have made I have the example mods on github for you to download and look at. \n\n\n\nNow that you have made a mod with content you can start to look at more advanced topics such as adding new buildings, and starting to use frameworks like Vanilla Expanded Framework."
    },
    {
        "link": "https://ludeon.com/forums/index.php?topic=33219.0",
        "document": ""
    },
    {
        "link": "https://rimworldwiki.com/wiki/Modding_Tutorials/Weapons_Guns",
        "document": "This page was originally created by Alistaire.\n\n\n\nIn this tutorial we will take a look at a specific item and break down its components, link this knowledge with other items and ultimately learn how to create your own items.\n• XML File Structure for knowledge on XML file structures and basic inheritance;\n• (Optional) Mod Folder Structure in case you want to set up a weapons mod;\n• (Optional) An XML code editor (recommended software) in case you want to set up a weapons mod.\n\n\n\n\n\nTo further understand the BaseGun and BaseBullet parents, we will now do the following:\n• Firstly we'll break down the simple parts of their code;\n• Next up we're breaking down the more complicated part;\n• Lastly I'll post the source code for both of them - they shouldn't be or have to be edited.\n\n\n\n\n\nNow that we know about inheritance, we can take another look at the BaseGun Parent. All the code inside this parent is inherited by BaseHumanGun, which is in turn inherited by almost all weapons in Weapons_Guns.xml.\n\n Let's break down the rest of the code in BaseGun.\n\n\n\nThe following tags are relatively straightforward:\n\n\n\nAnd the last part is somewhat more complicated:\n\n\n\nIt's not recommended to edit these parents. A recent copy of them can be taken from ../Mods/Core/Defs/ThingDefs/Weapons_Guns.xml, and the RimWorld834Win (Version 0.11.834) version is shown below:\n\n\n\nGuns inherit from BaseHumanGun or sometimes from BaseGun. Each gun requires a bunch of tags and additionally accepts some other tags.\n\n\n\n\n\nEach gun requires the following tags:\n\n\n\n\n\nBullets hold information regarding damage, bullet speed and whether the bullet will explode, burst into flames, etc.\n\n Each bullet requires the following tags:\n\n\n\n\n\nThere's a few cases where guns don't entirely follow the previously described structure.\n\n\n\n\n\nSome guns, including the Assault rifle use the following code to add burstfire:\n\n\n\nThe weapon will fire burstShotCount times with a ticksBetweenBurstShots tick delay between each shot.\n\n\n\n\n\nThe Sniper rifle is only used by specific Raiders, and won't be used by the rest. This is because of the following code:\n\n\n\nAdding a weaponTag to both your weapon and a custom pawn makes it so the pawn will spawn in with that weapon.\n\nThings with a Bomb damageDef need an explosionRadius and will explode upon impact.\n\n\n\n\n\nThis bullet will explode into flames in a radius of 1.1 tiles, and it will spawn a Puddle_Fuel 70% of all impacts.\n\n\n\n\n\nMost weapons have a scale of 9, while some of the bigger weapons have a scale of 14.\n\n\n\n\n\nGuns like the Charge rifle only spawn on pawns with Spacer technology:\n\n\n\nTurrets use a gun from Weapons_Guns.xml which uses the following code:\n\n\n\nThis gun can't be seen in the colony inventory screen, can't be spawned in with a newly spawned pawn, isn't tradable (so it won't show up on traders) and its weaponTag is TurretGun to prevent it from being spawned in by accident.\n\n\n\n\n\nCentipedes will spawn with MechanoidGunHeavy weaponry. Heavy raiders will spawn with GunHeavy. The equippedStatOffsets of MoveSpeed of -0.25 slows its wearer down by 0.25 c/s\n\n\n\n\n\nThe Doomsday rocket uses a different shaderType which isn't effected by light levels to simulate it giving off light itself. It also has a different thingClass.\n\n\n\nThe gun is only traded by Exotic traders due to its tradeTags, is a single use (Verb_ShootOneUse) weapon which can only be shot by the player itself. It can target floor tiles, not only wall tiles.\n\n\n\n\n\nEven after applying the accuracy checks, this gun is still going to miss its target by 2.0 tiles."
    },
    {
        "link": "https://ludeon.com/forums/index.php?topic=33219.75",
        "document": ""
    },
    {
        "link": "https://reddit.com/r/RimWorld/comments/olayyw/hi_op_here_im_delivering_you_my_beginners_guide",
        "document": "Took me a while, but here it is\n\n30 pages long, gosh darn. Most of that is pictures though, I promise. I also haven't shown it to anyone yet, so think of yourselves as beta testers. Okay let's do some FAQs:\n\nQ) Do I need to know anything to begin?\n\nA) Hopefully not. I go pretty slowly. If you have any coding skill or know XML you'll be able to skip a bunch of the tutorial.\n\nA) I don't have permission to create pages on the wiki (yeah, that's the actual reason). If someone wants to put it there they are more than welcome to. Also, if anyone wants to take it out of docs and use a more readable website, go for it.\n\nA) Most people seemed okay with text, and I'm not a great speaker/editor. If someone wants to make a video they can do that too, keep the video free and open to everyone though.\n\nQ) Will you make more tutorials?\n\nA) Hmmm.. Can't say at this point.\n\nSo that's it. I am (very) anxiously awaiting your feedback. Have fun :)"
    },
    {
        "link": "https://steamcommunity.com/sharedfiles/filedetails?id=1722337125",
        "document": ""
    },
    {
        "link": "https://reddit.com/r/RimWorld/comments/58ob42/modding_accuracy",
        "document": "LETTER FROM LU: After the orbital brothel owner, bodyguards, and all of their families died of a Yayo overdose on the same day, Lu and her colleagues became defacto owners of the establishment.\n\nShe's doing much better these days."
    },
    {
        "link": "https://rimworldwiki.com/wiki/Modding_Tutorials/Xml_Adding_Weapons_Traits_Research",
        "document": "This page is a tutorial on how to create a rimworld mod it will step you through the process of creating a mod from scratch. from basic files structure to writing code for your mod. This tutorial is aimed at people who have never created a mod before and are looking to get started. and is meant to be a updated guide to the old tutorials on the wiki.\n\nThis is a follow up to my previous tutorial on how to make a mod. if you have not:\n• Added a new item to the game\n• Tested the mod in game using the Debug menu\n\nThen you should go back a read the previous tutorial.\n\nBy the end of this tutorial you will have:\n• Learned how to add sounds to your mod\n• Learned how to add a new trait to the game\n• Learned how to create a new research project\n• Learned how to create a new recipe\n\nRimworld dotnet template is a mod template that can be used to quickly set up a mod. as by now you should have a basic understanding of how mods work it is recommended to use the template to save time. If you want to do things manually thats fine (Your life).\n\nIn order to make modding easier I have created a set of code snippets for Visual Studio Code. These snippets will help you create the Xml structure for your mod. To use these snippets open VsCode then:\n\nthis will open a file called xml.json. copy this code and paste it into the xml.json file. save the file and you are ready to go.\n\nThis will allow you to type \"rwweapon\" to generate the skeleton for a new weapon. you can then fill in the details for your weapon.\n\nThe first thing we are going to do is create a new weapon.\n\nStart by creating a new file in the Defs folder called \"ThingDefs_Weapons.xml\". this is where we will put the xml for our new weapon. \n\n Start by adding the Xml header to the file.\n\nIf using VsCode simply type \"rwxml\" and press tab to generate the header. \n\n\n\nBefore we can make a weapon there needs to be a bullet that the weapon can fire.\n\n\n\n If you added the code snippets you can save time by typing \"rwbullet\" and pressing tab. this will generate the skeleton for the bullet, you can then fill in the details (pushing tab will move you to the next field). \n\n\n\nNote: The weapon def is long and extremely picky with spelling, formatting and capitalization. if you have not added the code snippets I recommend you add them now. \n\n\n\nAwesome we now have a bullet but we need a weapon to fire it. for now lets uses sounds and textures that are already in the game. \n\n\n\n\n\n If using the code snippets use \"rwweapon\" to generate the skeleton for the weapon. \n\n\n\nThats a lot of code so lets break it down. \n\n\n\nWe start by defining the weapon as a makeable gun. Then we give it a gameId (defName), a user friendly name (label) and a description. \n\n\n\nnow we define the texture (in this case we have specified the vanilla revolver texture) and the sound the weapon makes when a pawn picks it up. \n\n\n\nThe stats are the weapons weight and its accuracy at different ranges. \n\n\n\nAs we are using BaseHumanMakeableGun the weapon will be at a machining table. We define the resources and skill required to make the weapon. \n\n\n\nThe verbs define (in this case) the how the weapon shoots. We define the projectile we made earlier, the warmup time and the burst shot count. Verbs is also where you define the range and shooting sound. \n\n\n\nIn this case the tools are used to define the melee attacks of the weapon. Making sure to enclose each attack in a \"li\" tag give your attack a label, define the damage type, how much damage it does and lastly give it a cooldown time. \n\n\n\nBefore we forget we need to close the \"ThingDef\"\n\nAnd with that we have a working weapon with a custom bullet and recipe. to improve the weapon you could add a custom sound and texture or change the stats to your liking. The best way to learn is to experiment or look at other mods (I recommend looking at Vanilla Weapons Expanded as their mods keep the code clean and tidy). \n\n\n\nCurrently the weapon is unlocked by default. Lets add a research project to unlock it. \n\n\n\nWhile we could add the research project to the same file as the weapon it is good practice to keep things tidy. So let's make a new file in the \"Defs\" folder called \"ResearchProjectDef.xml\" \n\n Remember to add the Xml header and \"Defs\" tag. (Remember this can be done with \"rwxxml\")\n\nThe Xml for the research project is shorter than the weapon however it still requires correct spelling and syntax. \n\n\n\n\n\n If using the code snippets use \"rwresearch\" \n\n\n\nOk lets break down the code. \n\n\n\nJust like the weapon we give the project a gameId, and a user friendly name and a description. \n\n\n\nThe tech level will scale the cost of the research project based on the colony's tech level (Tribal starts will be more expensive than crashlanded). the baseCost is the cost of the project before scaling for tech level. prerequisites are the research projects that must be completed before this project can be researched. (In this case we are requiring Gunsmithing) \n\n\n\nThis is the position of the project in the research tree. This may take some trial and error to get right (Or you could use a mod like \"ResearchPowl\" that makes the tree easier to navigate) \n\n\n\nRight we have a research project but we need to tell the game to use it. to do this we need to edit our weapons recipeMaker. \n\n\n\nBy simply adding the researchPrerequisite tag and giving it the gameId of the research project we have locked the weapon behind the research project. \n\n\n\nTraits are a great way to add new gameplay mechanics to your mod. For now we will be adding a trait that makes the colonist have a higher Crafting skill and lower carrying capacity. \n\n\n\nTo keep things tidy we will make a new file in the \"Defs\" folder called \"TraitDef.xml\" (Remember to add the Xml header and \"Defs\" tag. [Remember this can be done with \"rwxxml\"])\n\nThe Xml for the trait is quite straight forward once you know what each tag does (for code snippets use \"rwtrait\") \n\n\n\nRight, let's break down the code. \n\n\n\nLike the other defs we give the trait a gameId however this time we also give it a commonality. This is the chance that the trait will be given to a colonist. also note that the Label and Description are inside the degreeDatas tag and not the main tag. \n\n\n\nDisabling work tags is a great way to make traits more unique. In this case we are disabling the animals work type. Remember to put all the work tags you want to disable inside their own <li> tag. \n\n\n\nThe degree data is where we define the effects of the trait. This also includes the label (player friendly name) and description. Stat offsets are changes to the colonists stats. In this case we are increasing the colonists carrying capacity by 25 and increasing work speed by 20%. Skill gains are static increases to the colonists skills. In this case we are increasing the colonists crafting skill by 4. \n\n\n\nCongratulations you have made your first trait. for now it only changes stats and skills however traits can do a lot more. The best way to learn about the more advanced possibilities is to look at other mods that add traits. \n\n\n\nAs with the other tutorials I have made I have the example mods on github for you to download and look at. \n\n\n\nNow that you have made a mod with content you can start to look at more advanced topics such as adding new buildings, and starting to use frameworks like Vanilla Expanded Framework."
    },
    {
        "link": "https://reddit.com/r/RimWorld/comments/r3haj9/mod_guide_for_vanilla_players_qol_only_visual",
        "document": "EDIT: 1.4 is out, so this guide us outdated. I will not update it\n\nLet me share my 2000h of modded wisdom with you, my fellow vanilla comrades. My attempt here is to provide you with as many as possible improvements to the base game while keeping the style, balance and content as vanilla as possible. As they say, when works the best is when you don't realize it is there. I guarantee you that after playing a few dozen hours with these, you will no longer be able to tell what's vanilla and what's not.\n\nI decided to cut my recommendations onto different types of lists, so it's easier for you. The most purists players can stick with QoL only. Or, even if youre so purist that you don't want any QoL improvement, you still can use the performance list.\n\nHere's the link to the steam collection.\n\nHow to mod the (steam) game?\n\nMandatory mods: Harmony and Huglibs. Something something libraries. They do nothing on their own, but most mods require them. While fewer, a lot of mods also require the Vanilla Framework Expanded, so suscribe to that one too.\n\nI also recommend these two, is never wrong to have more tools at hand:\n• ModDiff. Display differences between your current modlist and the game you want to load.\n\nOnce you subscribed to all the mods you wanted, you must sort them. I recommend RimPy. Do this every time you change your mods.\n\nIf you use the performance mods, run Rocketman adaptative mode the first time, as well as every time you change your mods. Um... if you are trying out stuff, you can wait until you are finished. Is not like your save is going to explode or something, it simply won't grant you a performance bonus. Adaptive mode turns off automatically once it ends the job.\n\nQoL only improvements, no balance changes, no new content:\n• Psychic Harmonizer Lag Fix, Psychic Ships Can Affect Females and Line Of Sight Fix are bugfixes.\n• Animal Logic. Very configurable. Adds a lot of minor QoL stuff for animals, like animal medical alerts.\n• Cut plants before building. When you place a building blueprint, all the plants in the area are automatically designated to be cut.\n• Blueprints. You can save and export building blueprints. It works between saves. Do you have a design that you like a lot and wanna keep or repeat? Well this is your mod.\n• Save Storage, Outfit, Crafting, Drug, & Operation Settings. Adds presets to the game. Basically, now you can share between saves the configurations of stuff like stockpile, drugs, outfits, etc.\n• Drag select. You can click and drag on trade windows, transport load, etc.\n• Common sense. Adds a lot of configurable QoL behavioral improvements. For example, you can make pawns clean a bit before using worktables (no more dirty kitchens) or tending/surgering someone, or avoid toxic rain when they're going for a walk. Some options have a tradeoff in performance, like using ingredients that are close to spoiling first (takes longer to calculate, specially noticeable with large stockpiles). It probably isnt an issue if you keep the game vanilla tho. This is my personal config in case youre too lazy to bother.\n• More harvest designators. Vegetal designators, not organ ones.\n• Dub mint menus. New, cooler and better menus.\n• My little planet. Now instead of generating a portion of the surface of a planet, you can generate full but smaller planets.\n• Owl colonist bar*. Shows a lot more info in the colonist bar. Colored mood status, icons for hunger or exhaust, shows equipped weapon, timer for death because of bloodlost, etc. And is very configurable. If you have issues with this mod, Color Coded and Show Draftees are a good alternative.\n• Pharmacist. Allows to setup tiers of medicine for different kind of injuries. The only think I dont like is that a new menu tab is a waste of space, it should be integrated somewhere else, like the medical tab of the same author.\n• Quality Builder. You can set minimal quality on a furniture blueprint. Pawns will build, dismantle and rebuild until they meet (or surpass) the target quality. Be carefull with stuff like masterwork or legendary tiers, because your pawns will easily burn through your material reserves. The mod has an option to only allow the work to the best builder.\n• RPG style inventory revamped. Vanilla inventory lists are not very intuitive, this is. Very configurable.\n• RimHUD. Very configurable, but I like it by default. Com'on, look at this. Is perfect. For performance reasons, set refresh rate to 1000ms (click on the gear to open options).\n• Replace stuff. Allows to directly replace stuff, like walls or doors. No longer you have to deconstruct first.\n• Search and destroy. Designation to make drafted pawns automatically search for enemies.\n• Share the load. Allows multiple people to deliver materials to blueprints.\n• Smarter construction. No more building micromanagement. Just place blueprint and let the mod handle it.\n• Defensive positions. You can set up positions that drafted pawns can go automatically.\n• Go the f*** to sleep. Force pawns to sleep (doesn't works over 75% of rest).\n• Don't block door. Prevent stuff to be dropped in doors tiles.\n\nQoL with minor balance changes or new stuff light enough that I think even purist players might want to check out:\n• Injured carry. If a pawn is bleeding out and moves slow as fuck, you can use this to allow other pawn to carry them.\n• Bulk smelting and Bulk stonecuting. New recipes to melt/cut three steel/stone chunks at a time. You pawns are going to waste a lot less time walking around.\n• Backup power. Adds a control box you can place over generators (it works on mod generators too, like Rimfeller's chemfuel powerplants or SOS2 starship generators). It allows you to configure power generators to run on demand. For example, lets say you want your generators to turn off when batteries are full and turn on again when they are 50% depleted (or 25%, or 80%, etc). Well this mod is for that.\n• Clean pathfinding. You pawns will stick more to roads or paths and walk less over the furniture.\n• Electric stonecutting table. Faster stonecutting at the cost of electricity.\n• Faster smoothing. Yeah, no way you have underground bases and you don't use this mod. In case you live in a cave like your colonists and you didn't know about this one, here ya go. The speed is configurable.\n• Hunters use melee. Because why fucking not. If my barbarian wants to hunt with her bare hands, she will hunt with her bare hands.\n• Trading spot. Configure a spot where trading caravans gonna wait. Yes, I know is exploitable.\n• Locks 2. Adds filters to doors. and allow to pass only authoriced entities.\n• Meal radious. You can configure how far away a pawn is going to look for a table to eat.\n• Room size tolerance. Configurable. Changes pawn's perceptions of room sizes. Rooms dont feel as empty now as they dont need to be as big. More realist too I guess, who the fuck thinks a 50m2 bedroom is only somewhat spacious.\n• Sand castles. Like snowmans, but with sand. And castles.\n• Adjustable trade ships. Would you like trade ships to be more common? They can be. Configurable.\n• More slaves. Slave traders have more stock.\n• Memorable auroras. Auroras are now something special.\n• P-music. I always forgot this mod exists because of how vanilla it feels. Is fucking great, the devs should pay the modder and add the music to vanilla. It also adds one of my favorite music tracks of all times.\n• Chat on comms and Animals are fun. They add new recreation types. Feels very vanilla.\n• Mortar accuracy. Several QoL changes to how mortars work.\n• Ugh You Got Me. Social fights are less dumb.\n• Permeable Terrain. Makes so that the time for filth to be washed away depends on the type of terrain.\n\nGameplay and balance changes not very vanilla, but I think they improve the game greatly:\n• Dubs Break Mod. Change mental breaks. Now, to have an extreme mental break, the pawn needs at least one extreme thought instead of a lot of pitty worries.\n• Snap out. Broke pawns can be talked out of their shit. Social influences the output and there's a long cooldown so I dont think is unbalanced.\n• No one left behind. Enemies attempt to rescue and carry back fallen comrades.\n• Enemy selfpreservation. When hurt enought, some enemies will attempt to run away. Works very well with Run & Gun.\n• Run & Gun. Weapons can be used while moving. Penalties very customizables so is not unbalanced unless you want to.\n• Friendly fire tweaks. Now shooter skill affects the chance of friendly fire. Configurable.\n• Metals dont burn. Metal stuff doesnt burn any longer. Sure, jetfuel yadayada. Go touch grass.\n• Deep Storage and the expansion Simply Storage. Why would you not want this.\n• Harvest yield. Pawns can no longer fail harverst. Now plant skill affects the yield.\n• Simple Sidearms. Allow pawns to carry more than one weapon. If they have melee weapon in their inventory, they switch automatically when in melee combat. Very configurable. It does not works well with Dual Wield, wish someone wrote a patch. It also makes so that if a pawn dropped a weapon for getting downed, they will go pick it up again once recovered.\n• Haverst everything. Harvest more organs, not only vital ones. Reduntant if you use QEE.\n• Map designer. Change parameters of map generation. A little easier to get your perfect map.\n• Map reroll. Generate map previews and pick the one you like the most. Good combo with Map Designer.\n• Character Editor. Design your perfectly flawed group of individuals and send them to die into the Rim.\n• Raids for me. You can insult people in comms and their factions will raid you.\n• Rimeffect music. Mass effect ost. It goes well with SOS2.\n• Utility columns. Columns are cool as fuck and this mod adds a lot of columns cool as fuck. Vanilla Faction Vikings also adds a very fucking cool runic column.\n• Interaction Bubbles and SpeakUp. The first displays dialog bubbles, the second adds a lot of variety.\n\nHairs, because why not:\n• Hide hair. Allows to configure what headhear hides hair. Servoarmor helmet? Sure. Baseball cap? No, why would that hide hair.\n• Better explosions. Better looking explosions.\n• Gunplay. Better looking weapons effects and sounds. Disable trails if you plan to use it with SOS2.\n• Better vanilla maskings. Better looking butcher and stonecutting workbenches.\n• Perspective doors. East-west oriented doors now look properly from the top.\n• Perspective buildings. Allows to visually displace furniture within its tile. Doesn’t affect gameplay.\n• Sophian style pack. New looks for the empire.\n• Simple FX smoke. Better looking smoke that even accounts for wind direction.\n• Scattered stones. Better looking stones and stuff. Configurable.\n• Modular tables and chairs. Tables and chairs automatically group together.\n• Vanilla Ideology Relics. Adds more relic variety and allows to use apparels as relics.\n• More Vanilla Textures. New, better looking textures.\n• Essentials stone. Changes stones stats, but more importantly it improves some stone related visuals. And adds beautiful jade floors. I dont know why is not merged with Marbled Marble, since is from the same author, but ok.\n• Bionic icons. Prosthetic and organs now have icons and are identificable with a look.\n• Regrowth. Adds a lot of visual variety to biomes, as well as a few new ones. Wasteland and wasteland animals are not in the steam collection, as they're not vanilla. But is a very cool biome too.\n\nPerformance improvements. It feels like I have a new pc after using these. Heck, I noticed way more improvement that when I actually changed my pc:\n• Dub performance analyzer. Enable the optimizations and override options, you can ignore everything else. If you want to disable alerts, use rocketman.\n• Optimization Meats. Unless you really want docens of different meat types for some weird roleplay reason, this mod reduces micromanagement and improves performance a bit (less meat types = less maths for the cpu).\n• Scattered flames*. This mod also optimices the fire code. In case you dont like the looks of this mod, it has an option to display vanilla fire, so even purists can benefit from better fire performance.\n• Rocketman. By default should be good enought. The first time you run the game, enable adaptative move and play for an hour, and that should be it. You should do that every time you change mods (remember to sort them first!). The mod also allows to disable alerts you dont want. I always disable tattered apearel and unhappy nudity.\n• Performance Optimicer. More hacker magic. I don't like that it hides the UI unless hovering with the mouse, so I just disabled all the UI options of the mod. It does more performance stuff aside from that, so use it anyway!\n• Toggeable readouts. Even if you dont use the mod functions, it optimices the vanilla UI code so use it anyway.\n• Owl colonist bar*. It has better performance than vanilla colonist bar. No, I don't understand what is wrong why the game's UI code, but modders sure love to optimice it.\n\nThat's all. Be sure to check the comments bellow for mods other people may have recommended."
    },
    {
        "link": "https://rimworldwiki.com/wiki/Modding_Tutorials/Weapons_Guns",
        "document": "This page was originally created by Alistaire.\n\n\n\nIn this tutorial we will take a look at a specific item and break down its components, link this knowledge with other items and ultimately learn how to create your own items.\n• XML File Structure for knowledge on XML file structures and basic inheritance;\n• (Optional) Mod Folder Structure in case you want to set up a weapons mod;\n• (Optional) An XML code editor (recommended software) in case you want to set up a weapons mod.\n\n\n\n\n\nTo further understand the BaseGun and BaseBullet parents, we will now do the following:\n• Firstly we'll break down the simple parts of their code;\n• Next up we're breaking down the more complicated part;\n• Lastly I'll post the source code for both of them - they shouldn't be or have to be edited.\n\n\n\n\n\nNow that we know about inheritance, we can take another look at the BaseGun Parent. All the code inside this parent is inherited by BaseHumanGun, which is in turn inherited by almost all weapons in Weapons_Guns.xml.\n\n Let's break down the rest of the code in BaseGun.\n\n\n\nThe following tags are relatively straightforward:\n\n\n\nAnd the last part is somewhat more complicated:\n\n\n\nIt's not recommended to edit these parents. A recent copy of them can be taken from ../Mods/Core/Defs/ThingDefs/Weapons_Guns.xml, and the RimWorld834Win (Version 0.11.834) version is shown below:\n\n\n\nGuns inherit from BaseHumanGun or sometimes from BaseGun. Each gun requires a bunch of tags and additionally accepts some other tags.\n\n\n\n\n\nEach gun requires the following tags:\n\n\n\n\n\nBullets hold information regarding damage, bullet speed and whether the bullet will explode, burst into flames, etc.\n\n Each bullet requires the following tags:\n\n\n\n\n\nThere's a few cases where guns don't entirely follow the previously described structure.\n\n\n\n\n\nSome guns, including the Assault rifle use the following code to add burstfire:\n\n\n\nThe weapon will fire burstShotCount times with a ticksBetweenBurstShots tick delay between each shot.\n\n\n\n\n\nThe Sniper rifle is only used by specific Raiders, and won't be used by the rest. This is because of the following code:\n\n\n\nAdding a weaponTag to both your weapon and a custom pawn makes it so the pawn will spawn in with that weapon.\n\nThings with a Bomb damageDef need an explosionRadius and will explode upon impact.\n\n\n\n\n\nThis bullet will explode into flames in a radius of 1.1 tiles, and it will spawn a Puddle_Fuel 70% of all impacts.\n\n\n\n\n\nMost weapons have a scale of 9, while some of the bigger weapons have a scale of 14.\n\n\n\n\n\nGuns like the Charge rifle only spawn on pawns with Spacer technology:\n\n\n\nTurrets use a gun from Weapons_Guns.xml which uses the following code:\n\n\n\nThis gun can't be seen in the colony inventory screen, can't be spawned in with a newly spawned pawn, isn't tradable (so it won't show up on traders) and its weaponTag is TurretGun to prevent it from being spawned in by accident.\n\n\n\n\n\nCentipedes will spawn with MechanoidGunHeavy weaponry. Heavy raiders will spawn with GunHeavy. The equippedStatOffsets of MoveSpeed of -0.25 slows its wearer down by 0.25 c/s\n\n\n\n\n\nThe Doomsday rocket uses a different shaderType which isn't effected by light levels to simulate it giving off light itself. It also has a different thingClass.\n\n\n\nThe gun is only traded by Exotic traders due to its tradeTags, is a single use (Verb_ShootOneUse) weapon which can only be shot by the player itself. It can target floor tiles, not only wall tiles.\n\n\n\n\n\nEven after applying the accuracy checks, this gun is still going to miss its target by 2.0 tiles."
    }
]