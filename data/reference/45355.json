[
    {
        "link": "https://en.uniapp.dcloud.io/component/custom-tab-bar.html",
        "document": "On the applet and app side, to improve performance, configure a fixed native tabBar in . But on the H5 side, this design does not improve performance.\n\nAt the same time, H5 side, especially PC widescreen, has more flexible requirements for the location and style of tabBar. tabBar, as the first level navigation, is more often placed at the top of PC webpage than at the bottom.\n\nThe custom tabBar component came into being as needed. It still reads the tabBar information configured in , but it can customize the location and configure various css flexibly.\n\nThis component supports the related configuration of in (compatibility is consistent with H5), and the configuration of is not supported.\n\nThis component supports all related APIs, such as setting the tab logo, displaying the red dot, and switchTab.\n\nOnly supported on the H5 side，HBuilderX 2.9.9+.\n\nThis component does not need to configure the list of tabBar, each tabItem is still read from . Avoid writing the duplicated codes at multiple sides.\n\nIn , place a custom tabBar component in topWindow, and place the page-level navigation at the top of the page.\n\nObtain source code: build a new uni-app project with HBuilderX 2.9.9+ and above version, and select the hello uni-app template.\n\nSee the screenshot below for display effect:"
    },
    {
        "link": "https://en.uniapp.dcloud.io/collocation/pages.html",
        "document": "The file is used to configure uni-app globally, to determine the path of the page file, window style, native navigation bar, native tabbar at the bottom, etc.\n\nIt is similar to the page management part of in the WeChat MiniApp. Note that the application for location permissions and other content that originally belonged to are configured in the manifest in uni-app.\n\nHere is a with all configuration options:\n\nUsed to set the status bar, navigation bar, title, window background color, etc. of the application.\n• Alipay MiniApp must use the image link address of when using . It needs to be debugged on the real machine to see the effect, and there is no effect in the Alipay developer tool\n• The set in will also override the text title set in ->\n• When using , the fixed elements in the page need to use --window-left, --window-right to ensure the correct layout position\n• This configuration has been removed from the vue3 nvue page, and it is upgraded to automatic rpx for horizontal and vertical screen switching. If you don’t need it, you can use px\n\nWith the existing mobile application as the mainWindow, a new page display form can be added on the left, top, and right.\n\nFor the overall widescreen adaptation idea, refer to the separate Widescreen Adaptation Guide\n• Currently, the style node only supports configuration of CSS style-related properties such as width and height\n• If you need to automatically hide the navigationBar of the page when there is a topwindow, configure the following css in according to different requirements:\n• Only need to hide a certain page navigationBar\n• It is necessary to hide the navigationBar of most pages and display the navigationBar of a certain page\n\nThrough the adjustment of matchMedia, the specified window can be adaptively displayed on different screens.\n\nCase demonstration: HBuilderX 2.9.9+, select hello uni-app or news template for new projects, or browse directly: [https://hellouniapp.dcloud.net.cn/](https://hellouniapp.dcloud.net.cn /)\n\nconfigures which pages the application consists of through the pages node. The pages node receives an array, and each item in the array is an object, and its attribute values are as follows:\n• The first item of the pages node is the application entry page (i.e. the home page)\n• Add/reduce pages in the application, you need to modify the pages array\n• The file name ** does not need to write a suffix **, the framework will automatically find the page resources under the path\n\nYou need to fill in pages.json\n\nUsed to set the status bar, navigation bar, title, window background color, etc. of each page.\n\nThe configuration items in the page will override the same configuration items in globalStyle\n• When using , the fixed elements in the page need to use --window-left, --window-right to ensure the correct layout position\n• Alipay MiniApp must use the image link address of when using . It needs to be debugged on the real machine to see the effect, and there is no effect in the Alipay developer tool\n• If the native navigation bar cannot meet the needs, it is recommended to use uni ui's custom navigation bar NavBar . This front-end navigation bar automatically handles the status bar height occupation problem.\n• When the front-end navigation bar is paired with native pull-down refresh, there will be problems, including\n• Under the WeChat MiniApp, iOS needs to be pulled longer to see the three points of pull-to-refresh, while Android pulls down from the top of the screen and cannot pull down from the bottom of the navigation bar. If you must pull down from the front-end navigation bar, you can only give up the native pull-down refresh under the MiniApp, pure front-end simulation, refer to mescroll plugin ,but this It is easy to have performance problems. At present , the MiniApp platform itself does not provide a better solution\n• Under App and H5, the native pull-down refresh provides circle style, you can specify the offset offset (configured under app-plus in pages.json), and customize the drop-down circle where it appears. There are examples in the extension component of hello uni-app.\n• On the non-H5 side, the front-end navigation cannot cover the native components. If the page has native components such as video, map, textarea (MiniApp only), etc., the navigation bar will be covered when scrolling\n• If it is a MiniApp, you can use cover-view as the navigation bar to avoid coverage problems\n• If it is under App, it is recommended to use titleNView or subNVue for a better experience\n• The rendering speed of the front-end components is not as good as that of the native navigation bar. The native navigation can be rendered during the animation to ensure that there is no white screen during the animation. However, when using the front-end navigation bar, the entire page may be blank during the animation of the new form. The lower the The phone at the end is more obvious.\n• The above discussion is the front-end custom navigation bar, but on the App side, the native navigation bar also provides richer customization than the MiniApp navigation\n• titleNView: Provide more configurations for the native navigation bar, including custom buttons, scrolling gradient effects, search boxes, etc., see titleNView for details\n• subNVue: Use nvue native rendering, develop all layouts by yourself, with all customization flexibility. See subNVue for details\n• After the native navigation bar is disabled on the page, if you want to change the foreground font style of the status bar, you can still set the navigationBarTextStyle property of the page (can only be set to black or white). If you want to set the status bar color separately, you can use plus.navigator.setStatusBarStyle setting on the App side. Note that some low-end Android phones (4.4) do not support setting the foreground color of the status bar.\n\nIn view of the above problems, try to use native navigation when native navigation can solve business needs. Sometimes it is even necessary to sacrifice some less important needs. Under App and H5, uni-app provides flexible solutions: titleNView, subNVue, or the whole The page uses nvue. But under the MiniApp, because of its own limitations, there is no good solution. If necessary, you can also use conditional compilation to split the processing.\n\nConfigure the specific style when compiling to the App platform, and some commonly used configurations are also supported by the H5 platform. The following are only common ones. For more configuration items, please refer to WebviewStyles .\n• The page only supports configuration, other configuration items are not currently supported\n• The page supports disabling the native navigation bar by configuring navigationStyle as custom or titleNView as false. Once native navigation is disabled, please read Custom Navigation Considerations.\n• When the value of is , the navigation bar is a scrolling transparent gradient navigation bar. By default, there are only buttons. After scrolling, the background color of the title bar and the title text will appear gradually. Custom buttons are not supported to set the color attribute; When is , the navigation bar is a floating title bar. At this time, the page content is pushed up to the top of the screen, including the status bar, but the navigation bar is suspended above the page. Generally, the background of the navigation bar will be set at the same time in this scenario The color is the rgba translucent color.\n• App-nvue 2.4.4+ supports when the value of is\n• If the button of the native navigation bar under the app uses a font icon, pay attention to check whether the name of the font library (font-family) uses the default iconfont. This name is a reserved word and cannot be used as the name of an externally imported font library. It needs to be adjusted to A custom name, otherwise it cannot be displayed.\n• To learn about the development methods of various navigation bars, please read Navigation Bar Development Guide\n\n# Customize the style of the back button\n\nIt takes effect when autoBackButton is set to true. Through this attribute, you can customize the style of the back button, such as icon size, red dot, corner mark, title, etc.\n\nWhen styling a button with a type value, the fontSrc and text properties are ignored.\n\nsearchInput can place a search box on the native navigation bar of titleNView. Its width adapts to surrounding elements.\n• In the life cycle, the content of the input box can be obtained through the parameter e.text. For details, see the template in hello uni-app - the example in the top navigation bar\n• If you need to dynamically modify the searchInput, or obtain the placehold of the searchInput, refer to uni-app dynamically modify the App-side navigation bar\n\nSome configurations are listed below. Regarding the comprehensive navigation bar configuration, here is a complete demonstration project that demonstrates various effects of the navigation bar. For details, see: [https://ext.dcloud.net.cn/plugin?id=1765](https:/ /ext.dcloud.net.cn/plugin?id=1765)\n• It is recommended to use font icons for the text of buttons. If Chinese characters or English are used, it is recommended to change the font to a smaller size, otherwise the length of the text will be too close to the right margin of the screen.\n• App platform, dynamic modification of buttons corner mark, see template in hello uni-app - top navigation title bar - navigation bar with red dot and corner mark\n• App platform, set the dynamic modification of searchInput text, API see Documentation . Note that text cannot be set in the disable state, and placehold does not support dynamic settings for the time being\n• For the H5 platform, if you need to implement the above dynamic modification, you need to modify it through dom operation in conditional compilation\n\nis a native subwindow for vue pages. It is used to solve the hierarchical coverage in the vue page in the App and the flexible customization of the native interface.\n\nIt is not a full-screen page, nor a component, but a native subform. It is an nvue page, rendered with the weex engine, which provides more powerful native layout capabilities than cover-view, plus.nativeObj.view, and is convenient for customizing native navigation or overlaying native maps, videos, etc. Please read subNVues Development Guide\n\ncan also be used in nvue pages. But currently it is not supported under pure nvue (render is native).\n• The of is globally unique and cannot be repeated\n• An instance of can be obtained via uni.getSubNVueById('id')\n• property of can only be file path\n\nUnder the App platform, you can customize the partial pull-to-refresh configuration .\n\nPull down to refresh use note\n• When and are set at the same time, the latter takes precedence.\n• If you want to enable pull-down refresh on both the App and the MiniApp, please configure the property of the page to true.\n• If you only want to enable pull-to-refresh on the App, do not configure the property of the page, but configure to true.\n• When the native pull-down refresh is enabled, the scroll-view with full screen height should not be used in the page. When dragging the content down, the pull-down refresh will be triggered first instead of scroll-view scrolling\n• The starting position of the native pull-to-refresh is below the native navigation bar. If the native navigation bar is canceled and a custom navigation bar is used, the native pull-to-refresh position will be at the top of the screen. If you want to pull under the custom navigation bar, you can only use the pull-down refresh of the circle method, and set the offset parameter to adjust the starting position of the circle circle to the bottom of the custom navigation bar. There are examples in the extension component of hello uni-app.\n• If you want to implement more complex pull-down refreshes on the app side, such as pulling down a special graphic like Meituan and JD App, you can use nvue's component. From HBuilderX 2.0.3+, you can experience the news template by selecting a new project\n• If you want to implement pull-down refresh on the Vue page through the web front-end technology, there are examples in the plug-in market, but the performance of the front-end pull-down refresh is not as good as the original one, and the complex and long list will be very stuck\n• On iOS, the pull-down refresh in default mode is bound to the bounce rebound. If bounce:none is set, the default pull-down refresh cannot be used\n\nConfigure specific styles when compiling to the H5 platform\n\nWhen styling a button with a type value, the fontSrc and text properties are ignored.\n• If the node is not configured, the configuration under will be used by default.\n• If the node is configured, it will override the configuration under .\n\nConfigure specific styles when compiling to the MP-ALIPAY platform\n• only supports https addresses, setting will replace the page text title\n• supports network address and local address, try to use absolute address\n• Some configurations may only take effect when the real machine is running, and Alipay should improve it in the future\n• Q: How to cancel the native navigation bar? or custom navigation\n\nThe component library is installed in batches, used at will, and automatically packaged on demand. Take the official as an example, select the project template on the HBuilderX new project interface, just type u on the page, pull out a large number of component code blocks, select directly, and you can use it. Greatly improve development efficiency and lower the threshold for use.\n\nIn the uni-app plug-in market , download components that conform to the directory structure, and you can use them directly.\n\nis automatically enabled and does not need to be manually enabled. When necessary, you can personalize settings in the node of , such as disabling automatic scanning, or customizing the strategy of scanning and matching components. Set the parameters as follows:\n\nIf you need to match the vue files in node_modules, you need to use the matching rule in the form of , where is the installed package name, is the path of the vue file in the package.\n\nIf the application is a multi-tab application, the tabBar configuration item can be used to specify the first-level navigation bar and the corresponding page displayed when tab switching.\n\nProviding tabBar configuration in pages.json is not only to facilitate rapid development of navigation, but more importantly, to improve performance on the App and MiniApp side. On these two platforms, the underlying native engine can directly read the tabBar information configured in pages.json and render native tabs without waiting for the js engine to initialize when starting.\n• When setting position to top, the icon will not be displayed\n• The list in the tabBar is an array, and only a minimum of 2 and a maximum of 5 tabs can be configured, and the tabs are sorted according to the order of the array.\n• Tabbar switching may not be rendered in time when it is loaded for the first time. You can pop up a waiting snowflake in the onLoad life cycle of each tabbar page (hello uni-app uses this method)\n• After the tabbar page is displayed once, it will be kept in memory. Switching the tabbar page again will only trigger the onShow of each page, and will not trigger onLoad again.\n• The tabbar at the top is currently only supported on the WeChat MiniApp. If you need to use the top tab, it is recommended not to use the top setting of the tabbar, but to make the top tab yourself, please refer to hello uni-app->template->top tab.\n\nAmong them, list receives an array, each item in the array is an object, and its attribute values are as follows:\n\nmidButton does not have a pagePath, it needs to monitor the click event, and handle the behavior logic after the click by itself. Listening to the click event is calling the API: uni.onTabBarMidButtonTap, see [https://uniapp.dcloud.io/api/ui/tabbar?id=ontabbarmidbuttontap](https://uniapp.dcloud.io/api/ui/tabbar ?id=ontabbarmidbuttontap)\n• None See Interface-Interface-tabbar for the js api of the tabbar, which can realize dynamic display and hiding (such as the pop-up layer cannot cover the tabbar), content modification (such as international Transformation), item plus corner mark and other functions. There are also examples in the hello uni-app.\n• None See onTabItemTap of the page life cycle for the item click event of the tabbar.\n• None The code jumps to the tabbar page, the api can only use uni.switchTab , cannot use uni.navigateTo, uni.redirectTo; use the navigator component open-type=\"switchTab\" must be set when jumping\n• None The default height of the tabbar is different on different platforms. The default height of the App side is adjusted from 56px to 50px since HBuilderX 2.3.4, which is unified with the H5 side. Developers can also set the height by themselves and adjust it back to 56px. See details\n• None The tabbar is a div simulation on the H5 side, which is part of the front-end screen window. If you want to use the bottom positioning method, you should use the css variable , such as a button floating 10px above the tabbar, the style is as follows\n• None An example of a tabbar template with a + sign in the middle, Reference . It can cross the end, but the + sign is not raised. If the middle is raised, configure the midButton of the tabbar.\n• None If you need to log in first and then enter the tab page, you don’t need to set the login page as the homepage, the homepage is still the tabbar page, you can refer to [Cloud-integrated login template](https://ext.dcloud.net.cn/plugin? id=13)\n• None The problem that the front-end pop-up mask layer cannot block the tabbar, and the tabbar is dynamically hidden during cross-end processing. You can use plus.nativeObj.view or subNVue on the App side to make pop-ups and masks. You can refer to this example of the sharing menu of native icons at the bottom\n• None Wechat MiniApp simulator version 1.02.1904090 has a bug. After zooming the simulator page percentage, the tabbar will freeze after clicking multiple times. There is no problem with the real machine, please pay attention when using it. See details\n• None On PC widescreen, when the page has a multi-window structure such as topWindow, leftWindow, or rightWindow, if you want to change the display position of the tabbar, please use [custom-tab-bar component](https://uniapp.dcloud.io/component /custom-tab-bar) configuration, if you want to hide the tabbar, you can use the following css (the advantage is that it can be linked with leftwindow and other forms):\n\nThe native tabBar is a relatively fixed configuration method, which may not satisfy all scenarios, which involves customizing the tabBar.\n\nBut note that except for the H5 side, the performance experience of the custom tabBar will be lower than that of the native tabBar. Do not customize the app and MiniApp unless necessary.\n• Custom tabBar component on the H5 side: There is no concept of higher performance of the native tabBar on the H5 side, and the common tabBar under widescreen is at the top instead of the bottom. At this time, you can use [custom-tab-bar component](https://uniapp .dcloud.io/component/custom-tab-bar) to customize\n• Ordinary custom tabBar: use view to draw tabBar by yourself. If the page is multi-page, switching the tabBar will not keep the bottom tabBar always displayed. Therefore, it is recommended to use the single-page method in this case. In the single-page mode, if it is a complex page, the application performance will drop significantly, and the page complexity needs to be reduced. If it is on the App side, the performance of nvue single page will be significantly higher than that of vue page\n• WeChat MiniApp custom tabbar: WeChat provides a solution to customize tabBar based on webview. This function has a poor experience and is not recommended. If you want to use it, refer to WeChat Documentation ,create a custom-tab-bar directory at the root of the project, and pay attention to the The code is wxml, wxss, not vue, and the uni-app compiler will directly copy the directory to the WeChat MiniApp\n• There is only one native tabbar and it is on the home page. If you need tabs on the second-level page, you need to write a view to achieve it. Generally, the more suitable navigation for secondary pages is segment component\n\nThe startup mode configuration takes effect only during the development period, and is used to simulate the scenario of direct access to the page, such as: after the MiniApp is forwarded, the user clicks on the opened page.\n\nNote: You can directly open the configuration page when running on the real machine in the app. You need to manually change the compilation mode in the WeChat developer tools, as shown in the figure below:\n\nSubpackage loading configuration, this configuration is the subpackage loading mechanism of the MiniApp.\n\nBecause MiniApp have size and resource loading limitations, each MiniApp platform provides a subpackage method to optimize the download and startup speed of MiniApp.\n\nThe so-called main package is to place the default startup page/TabBar page, and all subpackages need to use public resources/JS scripts; and the subpackages are divided according to the configuration of pages.json.\n\nWhen the MiniApp is started, the main package will be downloaded by default and the pages in the main package will be launched. When the user enters a page in the subpackage, the corresponding subpackage will be downloaded automatically, and then displayed after the download is complete. At this time, there will be a waiting prompt on the terminal interface.\n\nApp defaults to the whole package. Starting from uni-app 2.7.12+, it is also compatible with subpackage configuration of MiniApp. Its purpose is not to speed up the download, but to speed up the startup when the home page is vue. To enable subcontracting under App, in addition to configuring subcontracting rules in pages.json, you also need to set subcontracting settings on the app side in the manifest. For details, see: https://uniapp.dcloud.io/collocation/manifest?id=app-vue-optimization\n\nThe subPackages node receives an array, each item in the array is a sub-package of the application, and its attribute values are as follows:\n• The path of pages in is a relative path under , not a full path.\n• The size of each subpackage of the WeChat MiniApp is 2M, and the total volume cannot exceed 20M.\n• The size of each subpackage of the Baidu MiniApp is 2M, and the total volume cannot exceed 8M.\n• The size of each subpackage of the Alipay MiniApp is 2M, and the total volume cannot exceed 8M.\n• 抖音小程序每个分包的大小是2M，总体积一共不能超过16M（抖音小程序基础库 1.88.0 及以上版本开始支持，抖音小程序开发者工具请使用大于等于 2.0.6 且小于 3.0.0 的版本）。 -The size of each subpackage of the Kuaishou MiniApp is 2M, and the total volume cannot exceed 24M.\n• When is too large, you can use runtime compression code\n• For the project created by , check Run-->Run to MiniApp Simulator-->Whether to compress the code at runtime\n• The project created by can add the parameter in , example:\n\nYou need to fill in pages.json\n\nAfter the preloadRule is configured, when entering a certain page of the MiniApp, the framework will automatically pre-download the subpackages that may be required to improve the startup speed when entering subsequent subpackage pages\n\nIn , is the page path, and is the pre-download configuration for entering this page. Each configuration has the following items:\n\nApp subcontracting also supports preloadRule, but network rules are invalid.\n• Q: Why is the MiniApp location permission description configured in pages.json, but cannot be compiled to the MiniApp side? After running, it keeps prompting that getLocation needs to be declared in app.json\n• A: The permission description of the WeChat MiniApp is configured in the manifest, not in pages.json. For details, refer to the document: https://uniapp.dcloud.io/collocation/manifest?id=mp-weixin"
    },
    {
        "link": "https://alibabacloud.com/help/doc-detail/2804128.html",
        "document": "This topic describes the functions provided by JavaScript APIs of uni-app miniapps and how to use the APIs. You can refer to this topic when you use JavaScript APIs of uni-app miniapps.\n\nKeeps the current page open and redirects to the specified page in the app. You can use uni.navigateBack to return to the original page. Closes the current page and redirects to the specified page in the app. Closes all pages and redirects to the specified page in the app. Redirects to the specified TabBar page and closes all other non-TabBar pages. Closes the current page and goes back to the previous page (or a specific page in the page stack). You can obtain the current page stack by using getCurrentPages() to determine which page to go back to. Preloads pages. Page pre-loading is a performance optimization technology. The preloaded pages can be opened faster. Listens to an event once. After the event is triggered, it becomes invalid. The animations for opening and closing a window can be configured by using APIs, components, or pages.json. The use of APIs or components take precedence over the use of pages.json. For more information, see Window animation. Triggers global custom events. Additional parameters are passed to the listener callback function. Listens to global custom events. The events are triggered by uni.$emit. The callback function receives the parameters passed into the event trigger function. Listens to global custom events. The events are triggered by uni.$emit, but are triggered only once. The listener is removed after the events are triggered. Obtains an instance of the subNVues native subform by ID. Obtains an instance of the current subNVues native subform in the nvue page code of the subNVues form.\n\nSets whether to keep the app awake. Checks the permissions of the runtime environment. Checks whether a device has a notch in the screen. Checks whether the app splash screen is closed. Determines whether the current app is switched to the background. Determines whether the app is in full-screen mode. Determines whether the device running the app is rooted. Determines whether the current app is running in a simulator. Sets whether to display the app in full screen. Sets whether to allow the app to output logs. Sets the background color of the system status bar. Obtains the background color of the system status bar. Sets the style of the system status bar. Obtains the style of the system status bar. Obtains the height of the system status bar. Determines whether the status bar is immersive. Deletes all cookie values for the app. Deletes all session cookie values for the app. Obtains the safe area insets for the app. Obtains the screen orientation of the app. Obtains the UI style to determine whether the dark mode is used. Obtains the signature of the app. Obtains the orientation information of the current device around three axes: alpha, beta, and gamma. Obtains the proximity information of the current device. Specifies that the user agrees to the privacy policy. Specifies that the user does not agree to the privacy policy. Checks whether the user agrees to the privacy policy. Obtains information about the specified app. Sets the badge number on the app icon. Calls a third-party app to open the specified URL. Calls a third-party app to open the specified file. Processes the parameter that is used to specify a direct page URL. Determines whether to customize the URL for loading the app startup page. Listens to network status changes. You can use uni.offNetworkStatusChange to cancel the listening. Listens to changes in the system theme status. Cancels listening to changes in the system theme status. Listens to accelerometer data at a frequency of 5 times per second. Listening starts automatically after the API is called. To stop listening, call uni.offAccelerometer. Obtains the accelerometer information of the current device. Listens to the accelerometer data of a device. Cancels listening to the accelerometer data of a device. Listens to compass data at a frequency of 5 times per second. Listening starts automatically after the API is called. To stop listening, call uni.offCompassChange. Scans the barcode in an image. Sets whether to keep the screen steady on. This setting takes effect only for the current app. The setting becomes invalid after you exit the app. Listens to screen capture events initiated by users. Such events are triggered when users tap the screen capture button to take a screenshot. Makes a phone to vibrate for a long period of time (400 ms). Makes a phone to vibrate for a short period of time (15 ms). Adds a contact or a piece of contact information to the mobile contacts. The user can write this form to the address book of the mobile phone by using either the \"Add Contact\" or \"Add to Existing Contact\" method. No such option is available in the app. Starts searching for nearby Bluetooth peripherals. This operation consumes a large amount of system resources. After searching for and connecting to a device, be sure to call the uni.stopBluetoothDevicesDiscovery method to stop searching. Stops searching for nearby Bluetooth peripherals. If you have already found the device you need and do not need to continue searching, we recommend that you call this API to stop searching. Obtains devices in the connected state based on the UUIDs. Obtains all Bluetooth devices discovered during the active period of the Bluetooth module, including all devices that are already connected to the mobile phone. Obtains the status of the local Bluetooth adapter. Disables the Bluetooth module. Calling this method disconnects all established connections and releases system resources. We recommend that you call this method together with uni.openBluetoothAdapter after a Bluetooth process. Obtains the status of the Bluetooth adapter. Obtains devices in the connected state based on the UUIDs. Sets the maximum transmission unit (MTU) of a Bluetooth Low Energy (BLE) device. You must call this API after the call to uni.createBLEConnection succeeds. The MTU can range from 22 to 512 bytes. This API is valid for Android 5.1 or later. Writes binary data to the characteristic values of a BLE device. Listens to changes of the characteristic values of a BLE device. Enables the function of notifying any characteristic value changes to a BLE device and subscribes to BLE characteristic values. Obtains all the services provided by a Bluetooth device. Obtains all the characteristic values of a service provided by a Bluetooth device. Obtains all the characteristic values of a service provided by a Bluetooth device. Obtains all the services provided by a Bluetooth device. Enables the function of notifying any characteristic value changes to a BLE device and subscribes to BLE characteristic values. Listens to changes of the characteristic values of a BLE device. Writes binary data to the characteristic values of a BLE device. Checks whether biometric information such as fingerprints is enrolled in a device.\n\nShows a loading pop-up. You must call uni.hideLoading to close the pop-up. Shows a modal pop-up window. The window can contain only one OK button, or both the OK and Cancel buttons. It is similar to an API that integrates both the alerting and confirmation functions in HTML. Shows an action sheet that slides up from the bottom of the screen. Dynamically sets the title of the current page. Sets the color of the navigation bar on the page. Note If the color needs to be set right after the page is loaded, it can be done in the onReady function to avoid being overwritten by changes within the frame. Adds text to the upper-right corner of a specific item on a TabBar. Removes the text in the upper-right corner of a specific item on a TabBar. Shows the red dot in the upper-right corner of a specific item on a TabBar. Hides the red dot in the upper-right corner of a specific item on a TabBar. Creates an animation instance. Call instance methods to describe the animation. Then, use the export method to export the animation data, and pass the data to the animation property of the component. Dynamically loads network fonts. The file URL must be a download URL. Enables pull-to-refresh. Calling this method produces the same result as when a user manually pulls to refresh. Returns a SelectorQuery object instance. On this instance, methods such as select can be used to select nodes and methods such as boundingClientRect can be used to select information to be queried. Obtains the current language of the app. Sets the language of the app.\n\nCreates a drawing context for the specified canvas. In a custom component, the \"this\" custom component instance is passed as the second parameter to manage the <canvas> component in the component. Exports the content of the specified area of the current canvas to generate an image of the specified size, and returns the file path. In a custom component, the custom component instance is passed as the second parameter to manage the <canvas> component in the component. Draws pixel data to the canvas. In a custom component, the \"this\" custom component instance is passed as the second parameter to manage the <canvas> component in the component. Obtains the implied pixel data for the canvas area. In a custom component, the \"this\" custom component instance is passed as the second parameter to manage the <canvas> component in the component."
    },
    {
        "link": "https://m.php.cn/faq/496028.html",
        "document": ""
    },
    {
        "link": "https://github.com/Yuddd/Uni-app/blob/master/pages.json",
        "document": "To see all available qualifiers, see our documentation .\n\nSaved searches Use saved searches to filter your results more quickly\n\nWe read every piece of feedback, and take your input very seriously.\n\nYou signed in with another tab or window. Reload to refresh your session.\n\nYou signed out in another tab or window. Reload to refresh your session.\n\nYou switched accounts on another tab or window. Reload to refresh your session."
    },
    {
        "link": "https://frostwing98.com/slides/SoK.pdf",
        "document": ""
    }
]