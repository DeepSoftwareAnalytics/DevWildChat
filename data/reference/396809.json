[
    {
        "link": "https://support.microsoft.com/en-us/office/if-function-69aed7c9-4e8a-4755-a9bc-aa8bbff73be2",
        "document": "The IF function is one of the most popular functions in Excel, and it allows you to make logical comparisons between a value and what you expect. So an IF statement can have two results. The first result is if your comparison is True, the second if your comparison is False. For example, =IF(C2=”Yes”,1,2) says IF(C2 = Yes, then return a 1, otherwise return a 2).\n\nIn the above example, cell D2 says: IF(C2 = Yes, then return a 1, otherwise return a 2) In this example, the formula in cell D2 says: IF(C2 = 1, then return Yes, otherwise return No)As you see, the IF function can be used to evaluate both text and values. It can also be used to evaluate errors. You are not limited to only checking if one thing is equal to another and returning a single result, you can also use mathematical operators and perform additional calculations depending on your criteria. You can also nest multiple IF functions together in order to perform multiple comparisons. In the above example, the IF function in D2 is saying IF(C2 Is Greater Than B2, then return “Over Budget”, otherwise return “Within Budget”) In the above illustration, instead of returning a text result, we are going to return a mathematical calculation. So the formula in E2 is saying IF(Actual is Greater than Budgeted, then Subtract the Budgeted amount from the Actual amount, otherwise return nothing). In this example, the formula in F7 is saying IF(E7 = “Yes”, then calculate the Total Amount in F5 * 8.25%, otherwise no Sales Tax is due so return 0) Note: If you are going to use text in formulas, you need to wrap the text in quotes (e.g. “Text”). The only exception to that is using TRUE or FALSE, which Excel automatically understands."
    },
    {
        "link": "https://w3schools.com/excel/excel_if.php",
        "document": "The IF function is a premade function in Excel, which returns values based on a true or false condition.\n\nIt is typed and has 3 parts:\n\nThe condition is referred to as , which can check things like:\n• If a number is greater than another number\n• If a number is smaller than another number\n• If a number or text is equal to something\n\nNote: The different parts of the function are separated by a symbol, like comma or semicolon The symbol depends on your Language Settings.\n\nExample IF function (equal to)\n\nCheck if the Pokemon type is grass:\n\nThe condition is if the \"Type 1\" value for the Pokemon is \"Grass\".\n\nThe function returns \"Yes\" or \"No\".\n\nExample IF function, step by step:\n• Specify the value for when the condition is TRUE\n• Specify the value for when the condition is FALSE\n\nSince the value in cell is \"Grass\", the condition is true and the function will return \"Yes\".\n\nThe function can be repeated with the filling function for each row to perform the same check for each Pokemon:\n\nNow, each row has a check for Grass Type:\n\nExample IF Function (greater than)\n\nCheck if the Pokemon's total stats is greater than 500:\n\nThe function returns \"Yes\" or \"No\".\n\nExample IF function, step by step:\n• Specify the value for when the condition is TRUE\n• Specify the value for when the condition is FALSE\n\nSince the value in cell is 318, the condition is false and the function will return \"No\".\n\nThe function can be repeated with the filling function for each row to perform the same check for each Pokemon:\n\nNow, each row has a check for having more than 500 total stats:"
    },
    {
        "link": "https://support.microsoft.com/en-us/office/if-function-nested-formulas-and-avoiding-pitfalls-0b22ff44-f149-44ba-aeb5-4ef99da241c8",
        "document": "The IF function allows you to make a logical comparison between a value and what you expect by testing for a condition and returning a result if True or False.\n• =IF(Something is True, then do something, otherwise do something else) So an IF statement can have two results. The first result is if your comparison is True, the second if your comparison is False. IF statements are incredibly robust, and form the basis of many spreadsheet models, but they are also the root cause of many spreadsheet issues. Ideally, an IF statement should apply to minimal conditions, such as Male/Female, Yes/No/Maybe, to name a few, but sometimes you might need to evaluate more complex scenarios that require nesting* more than 3 IF functions together. * \"Nesting\" refers to the practice of joining multiple functions together in one formula.\n\nWhile Excel will allow you to nest up to 64 different IF functions, it's not at all advisable to do so. Why?\n• Multiple IF statements require a great deal of thought to build correctly and make sure that their logic can calculate correctly through each condition all the way to the end. If you don't nest your formula 100% accurately, then it might work 75% of the time, but return unexpected results 25% of the time. Unfortunately, the odds of you catching the 25% are slim.\n• Multiple IF statements can become incredibly difficult to maintain, especially when you come back some time later and try to figure out what you, or worse someone else, was trying to do. If you find yourself with an IF statement that just seems to keep growing with no end in sight, it's time to put down the mouse and rethink your strategy. Let's look at how to properly create a complex nested IF statement using multiple IFs, and when to recognize that it's time to use another tool in your Excel arsenal.\n\nFollowing is an example of a relatively standard nested IF statement to convert student test scores to their letter grade equivalent.\n• This complex nested IF statement follows a straightforward logic:\n• If the Test Score (in cell D2) is greater than 89, then the student gets an A\n• If the Test Score is greater than 79, then the student gets a B\n• If the Test Score is greater than 69, then the student gets a C\n• If the Test Score is greater than 59, then the student gets a D\n• Otherwise the student gets an F This particular example is relatively safe because it's not likely that the correlation between test scores and letter grades will change, so it won't require much maintenance. But here's a thought – what if you need to segment the grades between A+, A and A- (and so on)? Now your four condition IF statement needs to be rewritten to have 12 conditions! Here's what your formula would look like now: It's still functionally accurate and will work as expected, but it takes a long time to write and longer to test to make sure it does what you want. Another glaring issue is that you've had to enter the scores and equivalent letter grades by hand. What are the odds that you'll accidentally have a typo? Now imagine trying to do this 64 times with more complex conditions! Sure, it's possible, but do you really want to subject yourself to this kind of effort and probable errors that will be really hard to spot? Tip: Every function in Excel requires an opening and closing parenthesis (). Excel will try to help you figure out what goes where by coloring different parts of your formula when you're editing it. For instance, if you were to edit the above formula, as you move the cursor past each of the ending parentheses \")\", its corresponding opening parenthesis will turn the same color. This can be especially useful in complex nested formulas when you're trying to figure out if you have enough matching parentheses.\n\nFollowing is a very common example of calculating Sales Commission based on levels of Revenue achievement. This formula says IF(C9 is Greater Than 15,000 then return 20%, IF(C9 is Greater Than 12,500 then return 17.5%, and so on... While it's remarkably similar to the earlier Grades example, this formula is a great example of how difficult it can be to maintain large IF statements – what would you need to do if your organization decided to add new compensation levels and possibly even change the existing dollar or percentage values? You'd have a lot of work on your hands! Tip: You can insert line breaks in the formula bar to make long formulas easier to read. Just press ALT+ENTER before the text you want to wrap to a new line. Here is an example of the commission scenario with the logic out of order: Can you see what's wrong? Compare the order of the Revenue comparisons to the previous example. Which way is this one going? That's right, it's going from bottom up ($5,000 to $15,000), not the other way around. But why should that be such a big deal? It's a big deal because the formula can't pass the first evaluation for any value over $5,000. Let's say you've got $12,500 in revenue – the IF statement will return 10% because it is greater than $5,000, and it will stop there. This can be incredibly problematic because in a lot of situations these types of errors go unnoticed until they've had a negative impact. So knowing that there are some serious pitfalls with complex nested IF statements, what can you do? In most cases, you can use the VLOOKUP function instead of building a complex formula with the IF function. Using VLOOKUP, you first need to create a reference table: This formula says to look for the value in C2 in the range C5:C17. If the value is found, then return the corresponding value from the same row in column D. Similarly, this formula looks for the value in cell B9 in the range B2:B22. If the value is found, then return the corresponding value from the same row in column C. Note: Both of these VLOOKUPs use the TRUE argument at the end of the formulas, meaning we want them to look for an approxiate match. In other words, it will match the exact values in the lookup table, as well as any values that fall between them. In this case the lookup tables need to be sorted in Ascending order, from smallest to largest. VLOOKUP is covered in much more detail here, but this is sure a lot simpler than a 12-level, complex nested IF statement! There are other less obvious benefits as well:\n• VLOOKUP reference tables are right out in the open and easy to see.\n• Table values can be easily updated and you never have to touch the formula if your conditions change.\n• If you don't want people to see or interfere with your reference table, just put it on another worksheet."
    },
    {
        "link": "https://ablebits.com/office-addins-blog/if-function-excel",
        "document": "In this article, you will learn how to build an Excel IF statement for different types of values as well as how to create multiple IF statements.\n\nIF is one of the most popular and useful functions in Excel. Generally, you use an IF statement to test a condition and to return one value if the condition is met, and another value if the condition is not met.\n\nIn this tutorial, we are going to learn the syntax and common usages of the Excel IF function, and then take a closer look at formula examples that will hopefully prove helpful to both beginners and experienced users.\n\nIF is one of logical functions that evaluates a certain condition and returns one value if the condition is TRUE, and another value if the condition is FALSE. The syntax of the IF function is as follows: As you see, IF takes a total of 3 arguments, but only the first one is obligatory, the other two are optional. Logical_test (required) - the condition to test. Can be evaluated as either TRUE or FALSE. Value_if_true (optional) - the value to return when the logical test evaluates to TRUE, i.e. the condition is met. If omitted, the value_if_false argument must be defined. Value_if_false (optional) - the value to return when the logical test evaluates to FALSE, i.e. the condition is not met. If omitted, the value_if_true argument must be set.\n\n\n\nTo create a simple If then statement in Excel, this is what you need to do:\n• For logical_test, write an expression that returns either TRUE or FALSE. For this, you'd normally use one of the logical operators.\n• For value_if_true, specify what to return when the logical test evaluates to TRUE.\n• For value_if_false, specify what to return when the logical test evaluates to FALSE. Though this argument is optional, we recommend always configuring it to avoid unexpected results. For the detailed explanation, please see Excel IF: things to know. As an example, let's write a very simple IF formula that checks a value in cell A2 and returns \"Good\" if the value is greater than 80, \"Bad\" otherwise: This formula goes to C2, and then is copied down through C7: In case you wish to return a value only when the condition is met (or not met), otherwise - nothing, then use an empty string (\"\") for the \"undefined\" argument. For example: This formula will return \"Good\" if the value in A2 is greater than 80, a blank cell otherwise:\n\nExcel If then formula: things to know Though the last two parameters of the IF function are optional, your formula may produce unexpected results if you don't know the underlying logic. If the 2nd argument of your Excel IF formula is omitted (i.e. there are two consecutive commas after the logical test), you'll get zero (0) when the condition is met, which makes no sense in most cases. Here is an example of such a formula: To return a blank cell instead, supply an empty string (\"\") for the second parameter, like this: The screenshot below demonstrates the difference: Omitting the 3rd parameter of IF will produce the following results when the logical test evaluates to FALSE. If there is just a closing bracket after value_if_true, the IF function will return the logical value FALSE. Quite unexpected, isn't it? Here is an example of such a formula: Typing a comma after the value_if_true argument will force Excel to return 0, which doesn't make much sense either: The most reasonable approach is using a zero-length string (\"\") to get a blank cell when the condition is not met: Tip. To return a logical value when the specified condition is met or not met, supply TRUE for value_if_true and FALSE for value_if_false. For the results to be Boolean values that other Excel functions can recognize, don't enclose TRUE and FALSE in double quotes as this will turn them into normal text values.\n\nUsing IF function in Excel - formula examples Now that you are familiar with the IF function's syntax, let's look at some formula examples and learn how to use If then statements in real-life scenarios. To build an IF statement for numbers, use logical operators such as:\n• Greater than or equal to (>=)\n• Less than or equal to (<=) Above, you have already seen an example of such a formula that checks if a number is greater than a given number. And here's a formula that checks if a cell contains a negative number: For negative numbers (which are less than 0), the formula returns \"Invalid\"; for zeros and positive numbers - a blank cell. Commonly, you write an IF statement for text values using either \"equal to\" or \"not equal to\" operator. For example, the following formula checks the Delivery Status in B2 to determine whether an action is required or not: Translated into plain English, the formula says: return \"No\" if B2 is equal to \"delivered\", \"Yes\" otherwise. Another way to achieve the same result is to use the \"not equal to\" operator and swap the value_if_true and value_if_false values:\n• When using text values for IF's parameters, remember to always enclose them in double quotes.\n• Like most other Excel functions, IF is case-insensitive by default. In the above example, it does not differentiate between \"delivered\", \"Delivered\", and \"DELIVERED\". To treat uppercase and lowercase letters as different characters, use IF in combination with the case-sensitive EXACT function. For example, to return \"No\" only when B2 contains \"DELIVERED\" (the uppercase), you'd use this formula: In situation when you want to base the condition on partial match rather than exact match, an immediate solution that comes to mind is using wildcards in the logical test. However, this simple and obvious approach won't work. Many functions accept wildcards, but regrettably IF is not one of them. A working solution is to use IF in combination with ISNUMBER and SEARCH (case-insensitive) or FIND (case-sensitive). For example, in case \"No\" action is required both for \"Delivered\" and \"Out for delivery\" items, the following formula will work a treat: For more information, please see:\n• If cell contains then At first sight, it may seem that IF formulas for dates are akin to IF statements for numeric and text values. Regrettably, it is not so. Unlike many other functions, IF does recognize dates in logical tests and interprets them as mere text strings. In other words, you cannot supply a date in the form of \"1/1/2020\" or \">1/1/2020\". To make the IF function recognize a date, you need to wrap it in the DATEVALUE function. For example, here's how you can check if a given date is greater than another date: This formula evaluates the dates in column B and returns \"Coming soon\" if a game is scheduled for 18-Jul-2022 or later, \"Completed\" for a prior date. Of course, there is nothing that would prevent you from entering the target date in a predefined cell (say E2) and referring to that cell. Just remember to lock the cell address with the $ sign to make it an absolute reference. For instance: To compare a date with the current date, use the TODAY() function. For example: Excel IF statement for blanks and non-blanks If you are looking to somehow mark your data based on a certain cell(s) being empty or not empty, you can either:\n• Use the IF function together with ISBLANK, or\n• Use the logical expressions =\"\" (equal to blank) or <>\"\" (not equal to blank). The table below explains the difference between these two approaches with formula examples. Evaluates to TRUE if a cell is visually empty, even if it contains a zero-length string. =IF(A1=\"\", 0, 1) Returns 0 if A1 is visually blank. Otherwise returns 1. If A1 contains an empty string (\"\"), the formula returns 0. Evaluates to TRUE is a cell contains absolutely nothing - no formula, no spaces, no empty strings. =IF( Returns 0 if A1 is absolutely empty, 1 otherwise. If A1 contains an empty string (\"\"), the formula returns 1. Evaluates to TRUE if a cell contains some data. Otherwise, evaluates to FALSE. =IF( Returns 1 if A1 is non-blank; 0 otherwise. If A1 contains an empty string, the formula returns 0. Evaluates to TRUE if a cell is not empty. Otherwise, evaluates to FALSE. =IF( Works the same as the above formula, but returns 1 if A1 contains an empty string. And now, let's see blank and non-blank IF statements in action. Suppose you have a date in column B only if a game has already been played. To label the completed games, use one of these formulas: In case the tested cells have no zero-length strings, all the formulas will return exactly the same results: Check if two cells are the same To create a formula that checks if two cells match, compare the cells by using the equals sign (=) in the logical test of IF. For example: To check if the two cells contain same text including the letter case, make your IF formula case-sensitive with the help of the EXACT function. For instance, to compare the passwords in A2 and B2, and returns \"Match\" if the two strings are exactly the same, \"Do not match\" otherwise, the formula is: IF then formula to run another formula In all of the previous examples, an Excel IF statement returned values. But it can also perform a certain calculation or execute another formula when a specific condition is met or not met. For this, embed another function or arithmetic expression in the value_if_true and/or value_if_false arguments. For example, if B2 is greater than 80, we'll have it multiplied by 7%, otherwise by 3%:\n\nStarting from Excel 2007, we have a special function, named IFERROR, to check formulas for errors. In Excel 2013 and higher, there is also the IFNA function to handle #N/A errors. And still, there may be some circumstances when using the IF function together with ISERROR or ISNA is a better solution. Basically, IF ISERROR is the formula to use when you want to return something if error and something else if no error. The IFERROR function is unable to do that as it always returns the result of the main formula if it isn't an error. For example, to compare each score in column B against the top 3 scores in E2:E4, and return \"Yes\" if a match is found, \"No\" otherwise, you enter this formula in C2, and then copy it down through C7: For more information, please see IF ISERROR formula in Excel.\n\n\n\nHopefully, our examples have helped you get a grasp of the Excel IF basics. I thank you for reading and hope to see you on our blog next week!"
    },
    {
        "link": "https://support.microsoft.com/en-us/office/using-if-with-and-or-and-not-functions-in-excel-d895f58c-b36c-419e-b1f2-5c193a236d97",
        "document": "In Excel, the IF function allows you to make a logical comparison between a value and what you expect by testing for a condition and returning a result if that condition is True or False.\n• =IF(Something is True, then do something, otherwise do something else) But what if you need to test multiple conditions, where let’s say all conditions need to be True or False (AND), or only one condition needs to be True or False (OR), or if you want to check if a condition does NOT meet your criteria? All 3 functions can be used on their own, but it’s much more common to see them paired with IF functions.\n\nHere are overviews of how to structure AND, OR and NOT functions individually. When you combine each one of them with an IF statement, they read like this:\n• AND – =IF(AND(Something is True, Something else is True), Value if True, Value if False)\n• OR – =IF(OR(Something is True, Something else is True), Value if True, Value if False)\n• NOT – =IF(NOT(Something is True), Value if True, Value if False)\n\nFollowing are examples of some common nested IF(AND()), IF(OR()) and IF(NOT()) statements in Excel. The AND and OR functions can support up to 255 individual conditions, but it’s not good practice to use more than a few because complex, nested formulas can get very difficult to build, test and maintain. The NOT function only takes one condition. Here are the formulas spelled out according to their logic: IF A2 (25) is greater than 0, AND B2 (75) is less than 100, then return TRUE, otherwise return FALSE. In this case both conditions are true, so TRUE is returned. If A3 (“Blue”) = “Red”, AND B3 (“Green”) equals “Green” then return TRUE, otherwise return FALSE. In this case only the first condition is true, so FALSE is returned. IF A4 (25) is greater than 0, OR B4 (75) is less than 50, then return TRUE, otherwise return FALSE. In this case, only the first condition is TRUE, but since OR only requires one argument to be true the formula returns TRUE. IF A5 (“Blue”) equals “Red”, OR B5 (“Green”) equals “Green” then return TRUE, otherwise return FALSE. In this case, the second argument is True, so the formula returns TRUE. IF A6 (25) is NOT greater than 50, then return TRUE, otherwise return FALSE. In this case 25 is not greater than 50, so the formula returns TRUE. IF A7 (“Blue”) is NOT equal to “Red”, then return TRUE, otherwise return FALSE. Note that all of the examples have a closing parenthesis after their respective conditions are entered. The remaining True/False arguments are then left as part of the outer IF statement. You can also substitute Text or Numeric values for the TRUE/FALSE values to be returned in the examples. Here are some examples of using AND, OR and NOT to evaluate dates. Here are the formulas spelled out according to their logic: IF A2 is greater than B2, return TRUE, otherwise return FALSE. 03/12/14 is greater than 01/01/14, so the formula returns TRUE. IF A3 is greater than B2 AND A3 is less than C2, return TRUE, otherwise return FALSE. In this case both arguments are true, so the formula returns TRUE. IF A4 is greater than B2 OR A4 is less than B2 + 60, return TRUE, otherwise return FALSE. In this case the first argument is true, but the second is false. Since OR only needs one of the arguments to be true, the formula returns TRUE. If you use the Evaluate Formula Wizard from the Formula tab you'll see how Excel evaluates the formula. IF A5 is not greater than B2, then return TRUE, otherwise return FALSE. In this case, A5 is greater than B2, so the formula returns FALSE.\n\nUsing AND, OR and NOT with Conditional Formatting in Excel In Excel, you can also use AND, OR and NOT to set Conditional Formatting criteria with the formula option. When you do this you can omit the IF function and use AND, OR and NOT on their own. In Excel, from the Home tab, click Conditional Formatting > New Rule. Next, select the “Use a formula to determine which cells to format” option, enter your formula and apply the format of your choice. Using the earlier Dates example, here is what the formulas would be. If A2 is greater than B2, format the cell, otherwise do nothing. If A3 is greater than B2 AND A3 is less than C2, format the cell, otherwise do nothing. If A4 is greater than B2 OR A4 is less than B2 plus 60 (days), then format the cell, otherwise do nothing. If A5 is NOT greater than B2, format the cell, otherwise do nothing. In this case A5 is greater than B2, so the result will return FALSE. If you were to change the formula to =NOT(B2>A5) it would return TRUE and the cell would be formatted."
    },
    {
        "link": "https://datacamp.com/tutorial/compare-two-columns-in-excel",
        "document": "Learn how to create a range of visualizations in Excel for different data layouts, ensuring you incorporate best practices to help you build dashboards."
    },
    {
        "link": "https://ablebits.com/office-addins-blog/excel-compare-two-columns-matches-differences",
        "document": "Comparing columns in Excel is something that we all do once in a while. Microsoft Excel offers a number of options to compare and match data, but most of them focus on searching in one column. In this tutorial, we will explore several techniques to compare two columns in Excel and find matches and differences between them.\n\nHow to compare 2 columns in Excel row-by-row When you do data analysis in Excel, one of the most frequent tasks is comparing data in each individual row. This task can be done by using the IF function, as demonstrated in the following examples. Example 1. Compare two columns for matches or differences in the same row To compare two columns in Excel row-by-row, write a usual IF formula that compares the first two cells. Enter the formula in some other column in the same row, and then copy it down to other cells by dragging the fill handle (a small square in the bottom-right corner of the selected cell). As you do this, the cursor changes to the plus sign: To find cells within the same row having the same content, A2 and B2 in this example, the formula is as follows: To find cells in the same row with different values, simply replace the equals sign with the non-equality sign (<>): And of course, nothing prevents you from finding both matches and differences with a single formula: The result may look similar to this: As you see, the formula handles numbers, dates, times and text strings equally well. Tip. You can also compare two columns row-by-row using Excel Advanced Filter. Here is an example showing how to filter matches and differences between 2 columns. Example 2. Compare two lists for case-sensitive matches in the same row As you have probably noticed, the formulas from the previous example ignore case when comparing text values, as in row 10 in the screenshot above. If you want to find case-sensitive matches between 2 columns in each row, then use the EXACT function: To find case-sensitive differences in the same row, enter the corresponding text (\"Unique\" in this example) in the 3rd argument of the IF function, e.g.:\n\nCompare multiple columns for matches in the same row In your Excel worksheets, multiple columns can be compared based on the following criteria:\n• Find rows with the same values in all columns (Example 1)\n• Find rows with the same values in any 2 columns (Example 2) Example 1. Find matches in all cells within the same row If your table has three or more columns and you want to find rows that have the same values in all cells, an IF formula with an AND statement will work a treat: If your table has a lot of columns, a more elegant solution would be using the COUNTIF function: Where 5 is the number of columns you are comparing.\n\n Example 2. Find matches in any two cells in the same row If you are looking for a way to compare columns for any two or more cells with the same values within the same row, use an IF formula with an OR statement: In case there are many columns to compare, your OR statement may grow too big in size. In this case, a better solution would be adding up several COUNTIF functions. The first COUNTIF counts how many columns have the same value as in the 1st column, the second COUNTIF counts how many of the remaining columns are equal to the 2nd column, and so on. If the count is 0, the formula returns \"Unique\", \"Match\" otherwise. For example:\n\nHow to compare two columns in Excel for matches and differences Suppose you have 2 lists of data in Excel, and you want to find all values (numbers, dates or text strings) which are in column A but not in column B. For this, you can embed the COUNTIF($B:$B, $A2)=0 function in IF's logical test and check if it returns zero (no match is found) or any other number (at least 1 match is found). For instance, the following IF/COUNTIF formula searches across the entire column B for the value in cell A2. If no match is found, the formula returns \"No match in B\", an empty string otherwise: Tip. If your table has a fixed number of rows, you can specify a certain range (e.g. $B2:$B10) rather than the entire column ($B:$B) for the formula to work faster on large data sets. The same result can be achieved by using an IF formula with the embedded ISERROR and MATCH functions: Or, by using the following array formula (remember to press Ctrl + Shift + Enter to enter it correctly): If you want a single formula to identify both matches (duplicates) and differences (unique values), put some text for matches in the empty double quotes (\"\") in any of the above formulas. For example: =IF(COUNTIF($B:$B, $A2)=0, \"No match in B\", \"Match in B\") \n\n\n\nHow to compare two lists in Excel and pull matches Sometimes you may need not only match two columns in two different tables, but also pull matching entries from the lookup table. Microsoft Excel provides a special function for this - the VLOOKUP function. As an alternative, you can use a more powerful and versatile INDEX MATCH formula. The users of Excel 2021 and Excel 365, can accomplish the task with the XLOOKUP function. For example, the following formulas compare the product names in columns D against the names in column A and pull a corresponding sales figure from column B if a match is found, otherwise the #N/A error is returned. For more information, please see How to compare two columns using VLOOKUP. If you don't feel very comfortable with formulas, you can have the job done using a fast and intuitive solution - Merge Tables Wizard.\n\n\n\nCompare two lists and highlight matches and differences When you compare columns in Excel, you may want to \"visualize\" the items that are present in one column but missing in the other. You can shade such cells in any color of your choosing by using the Excel Conditional Formatting feature and the following examples demonstrate the detailed steps. Example 1. Highlight matches and differences in each row To compare two columns and Excel and highlight cells in column A that have identical entries in column B in the same row, do the following:\n• Select the cells you want to highlight (you can select cells within one column or in several columns if you want to color entire rows).\n• Click Conditional formatting > New Rule… > Use a formula to determine which cells to format.\n• Create a rule with a simple formula like (assuming that row 2 is the first row with data, not including the column header). Please double check that you use a relative row reference (without the $ sign) like in the formula above. To highlight differences between column A and B, create a rule with this formula: If you are new to Excel conditional formatting, please see How to create a formula-based conditional formatting rule for step-by-step instructions.\n\n Example 2. Highlight unique entries in each list Whenever you are comparing two lists in Excel, there are 3 item types that you can highlight:\n• Items that are only in the 1st list (unique)\n• Items that are only in the 2nd list (unique)\n• Items that are in both lists (duplicates) - demonstrated in the next example. This example demonstrates how to color the items that are only in one list. Supposing your List 1 is in column A (A2:A6) and List 2 in column C (C2:C5). You create the conditional formatting rules with the following formulas: And get the following result: If you closely followed the previous example, you won't have difficulties adjusting the COUNTIF formulas so that they find the matches rather than differences. All you have to do is to set the count greater than zero:\n\nWhen comparing values in several columns row-by-row, the quickest way to highlight matches is creating a conditional formatting rule, and the fastest way to shade differences is embracing the Go To Special feature, as demonstrated in the following examples. To highlight rows that have identical values in all columns, create a conditional formatting rule based on one of the following formulas: Where A2, B2 and C2 are the top-most cells and 3 is the number of columns to compare. Of course, neither AND nor COUNTIF formula is limited to comparing only 3 columns, you can use similar formulas to highlight rows with the same values in 4, 5, 6 or more columns.\n\n To quickly highlight cells with different values in each individual row, you can use Excel's Go To Special feature.\n• Select the range of cells you want to compare. In this example, I've selected cells A2 to C8. By default, the top-most cell of the selected range is the active cell, and the cells from the other selected columns in the same row will be compared to that cell. As you can see in the screenshot above, the active cell is white while all other cells of the selected range are highlighted. In this example, the active cell is A2, so the comparison column is column A. To change the comparison column, use either the Tab key to navigate through selected cells from left to right, or the Enter key to move from top to bottom. Tip. To select non-adjacent columns, select the first column, press and hold Ctrl, and then select the other columns. The active cell will be in the last column (or in the last block of adjacent columns). To change the comparison column, use the Tab or Enter key as described above.\n• On the Home tab, go to Editing group, and click Find & Select > Go To Special… Then select Row differences and click the OK button.\n• The cells whose values are different from the comparison cell in each row are colored. If you want to shade the highlighted cells in some color, simply click the Fill Color icon on the ribbon and select the color of your choosing.\n\nFormula-free way to compare two columns / lists in Excel Now that you know Excel's offerings for comparing and matching columns, let me show you our own solution for this task. This tool is named Compare Two Tables and it is included in our Ultimate Suite. The add-in can compare two tables or lists by any number of columns and both identify matches/differences (as we did with formulas) and highlight them (as we did with conditional formatting). For the purpose of this article, we'll be comparing the following 2 lists to find common values that are present in both. To compare two lists, here are the steps you need to follow:\n• Start with clicking the Compare Tables button on the Ablebits Data tab.\n• Select the first column/list and click Next. In terms of the add-in, this is your Table 1.\n• Select the second column/list and click Next. In terms of the add-in, it is your Table 2, and it can reside in the same or different worksheet or even in another workbook.\n• Choose what kind of data to look for:\n• Duplicate values (matches) - the items that exist in both lists.\n• Unique values (differences) - the items that are present in list 1, but not in list 2. Since our aim is to find matches, we select the first option and click Next.\n• This is the key step where you select the columns for comparison. In our case, the choice is obvious as we are only comparing 2 columns: 2000 Winners against 2021 Winners. In bigger tables, you can select several column pairs to compare by.\n• In the final step, you choose how to deal with the found items and click Finish. A few different options are available here. For our purposes, these two are most useful:\n• Highlight with color - shades matches or differences in the selected color (like Excel conditional formatting does).\n• Identify in the Status column - inserts the Status column with the \"Duplicate\" or \"Unique\" labels (like IF formulas do). For this example, I've decided to highlight duplicates in the following color: And in a moment, got the following result: With the Status column, the result would look as follows: Tip. If the lists you are comparing are in different worksheets or workbooks, it might be helpful to view Excel sheets side by side. This is how you compare columns in Excel for matches (duplicates) and differences (unique values). If you are interested to try this tool, you are welcome to download an evaluation version using the below link.\n\n\n\nI thank you for reading and encourage you to check out other helpful tutorials that we have :)"
    },
    {
        "link": "https://techcommunity.microsoft.com/t5/excel/formula-for-comparing-multiple-columns/m-p/4247157",
        "document": "I'm struggling to get formulas to work for me when comparing two data sets. There are four columns to compare and wanting to find if there is a matching \"set\" in another range of data\n\nSo I've been trying to do as a two step process where it checks whether the information in Data Set 1 is in Data set 2 unless concat to create unique strings, however what I also require is it then to state if there is no match, is there a match on say 3/4 items and then what is wrong if so.\n\nUnderstand this might not be possible but wanted to see if anyone else had any suggestions"
    },
    {
        "link": "https://reddit.com/r/excel/comments/wqv4uo/how_to_compare_data_in_two_columns_and_display",
        "document": "I'm trying to compare two vary lengthy columns against each other the data should match up exactly between them in an ideal world, but if it dosent we want to be able to identify which entries need to be corrected. There's roughly 20k entries in each column so going line by line is impractical. Is there a script or a macro anyone knows about that I can use to either mark the entries that don't match or display some sort of flag? Thanks."
    },
    {
        "link": "https://answers.microsoft.com/en-us/msoffice/forum/all/how-do-i-compare-2-sets-of-data-and-separate-out/8c321a6f-a0bf-4036-b022-c65306a09d02",
        "document": ""
    }
]