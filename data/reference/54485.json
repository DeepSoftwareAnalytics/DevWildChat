[
    {
        "link": "https://stackoverflow.com/questions/38685902/cant-copy-properities-of-one-class-to-another-using-beanutils",
        "document": "Also, just a note that will not work if you use Lombok to generate your public getters and setters. You must manually create them."
    },
    {
        "link": "https://stackoverflow.com/questions/19064331/argument-type-mismatch-by-using-beanutils-copyproperties",
        "document": "If considers only the setters and getter of the elements and is not intelligent enough to figure out that and are both collections and iterates and copies the elements one by one - which still requires that is compatible with - then it will throw this reflection error, then is not assignable from i.e. not compatible.\n\nIf you try to do the same at compile time\n\nThen you get the same sessage as a compile error.\n\nYou should either change to be a or to be a ."
    },
    {
        "link": "https://commons.apache.org/beanutils/changes.html",
        "document": "This is a major release and requires Java 8. This is a major release and requires Java 8 This is a maintenance release and requires Java 8. This is a maintenance release and requires Java 8. The primary reason for this release is a bugfix for CVE-2014-0114. More specifically, our goal with BEANUTILS-520 is to set the default behavior of the BeanUtilsBean to not allow class level access. The goal in doing this now is to bring 1.9.X into alignment with the same behavior of the 2.X version line in regards to security. If one would like to opt out of the default behavior, one could follow the example set out in the test class available in src/test/java/org/apache/commons/beanutils/bugs/Jira520TestCase.java. Upgrade to Java 5 including generics where possible Javadoc is missing its Overview page. Thanks to Gary Gregory. Remove -nouses directive from maven-bundle-plugin. OSGi package imports now state 'uses' definitions for package imports, this doesn't affect JPMS (from org.apache.commons:commons-parent:80). Thanks to Gary Gregory. The class org.apache.commons.beanutils2.PropertyUtils is now final (the class only contains static methods). Thanks to Gary Gregory. The constructor org.apache.commons.beanutils2.PropertyUtils is now private (the class only contains static methods). Thanks to Gary Gregory. The class org.apache.commons.beanutils2.locale.LocaleConvertUtils is now final (the class only contains static methods). Thanks to Gary Gregory. The constructor org.apache.commons.beanutils2.locale.LocaleConvertUtils is now private (the class only contains static methods). Thanks to Gary Gregory. The class org.apache.commons.beanutils2.locale.LocaleBeanUtils is now final (the class only contains static methods). Thanks to Gary Gregory. The constructor org.apache.commons.beanutils2.locale.LocaleBeanUtils is now private (the class only contains static methods). Thanks to Gary Gregory. The class org.apache.commons.beanutils2.MethodUtils is now final (the class only contains static methods). Thanks to Gary Gregory. The constructor org.apache.commons.beanutils2.MethodUtils is now private (the class only contains static methods). Thanks to Gary Gregory. The class org.apache.commons.beanutils2.ConvertUtils is now final (the class only contains static methods). Thanks to Gary Gregory. The constructor org.apache.commons.beanutils2.ConvertUtils is now private (the class only contains static methods). Thanks to Gary Gregory. The class org.apache.commons.beanutils2.ConstructorUtils is now final (the class only contains static methods). Thanks to Gary Gregory. The constructor org.apache.commons.beanutils2.ConstructorUtils is now private (the class only contains static methods). Thanks to Gary Gregory. The class LocaleBeanUtils no longer extends BeanUtils (both classes only contains static methods). Thanks to Gary Gregory. The class org.apache.commons.beanutils2.BeanUtils is now final (the class only contains static methods). Thanks to Gary Gregory. The constructor org.apache.commons.beanutils2.BeanUtils is now private (the class only contains static methods). Thanks to Gary Gregory. Bump org.apache.commons:commons-parent from 78 to 81. Thanks to Gary Gregory. Bump commons-logging:commons-logging from 1.3.4 to 1.3.5. Thanks to Gary Gregory. Change packaging from org.apache.commons.beanutils to org.apache.commons.beanutils2. Fixes BEANUTILS-503. Thanks to Gary Gregory. Double-Checked Locking anti pattern in WeakFastHashMap. Fixes BEANUTILS-402. Thanks to Melloware. Add missing serialVersionUID to Serializable classes. Fixes BEANUTILS-505. Thanks to Gary Gregory. Add Automatic-Module-Name entry to MANIFEST.MF. Fixes BEANUTILS-512. Thanks to Gary Gregory. Remove deprecated code for 2.0.0. Fixes BEANUTILS-514. Thanks to Gary Gregory. WeakHashmap enters into infinite loop in WrapDynaClass.java. Fixes BEANUTILS-509. Thanks to sunil, Akshay Gehi. Convert Collections4 to java.util.function. #8. Fixes BEANUTILS-527. Thanks to Melloware, Matt Sicker, Gary Gregory. New converters for UUID, URI, and Path #10. Fixes BEANUTILS-528. Thanks to Melloware, Matt Sicker, Gary Gregory. New converters for Java 8 Time classes #13. Fixes BEANUTILS-530. Thanks to Melloware, Matt Sicker, Gary Gregory. Log at the debug level instead of info. Fixes BEANUTILS-529. Thanks to Gary Gregory. Fix typos; fix error in Javadoc; performance fix; fix code smells #25. Fixes BEANUTILS-537. Thanks to XenoAmess, Gary Gregory. Migrate to JUnit 5 #93, #283, #284, #285, #287. Thanks to SethFalco, Steve Bosman, Gary Gregory. Fix SpotBugs [ERROR] Medium: org.apache.commons.beanutils2.BasicDynaClass.constructorTypes should be both final and package protected [org.apache.commons.beanutils2.BasicDynaClass] At BasicDynaClass.java:[line 95] MS_FINAL_PKGPROTECT. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: Load of known null value in org.apache.commons.beanutils2.converters.AbstractConverter.convert(Class, Object) [org.apache.commons.beanutils2.converters.AbstractConverter] At AbstractConverter.java:[line 163] NP_LOAD_OF_KNOWN_NULL_VALUE. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: Unused public or protected field: org.apache.commons.beanutils2.WrapDynaClass.descriptors [org.apache.commons.beanutils2.WrapDynaClass] In WrapDynaClass.java UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: org.apache.commons.beanutils2.converters.ArrayConverter.setAllowedChars(char[]) may expose internal representation by storing an externally mutable object into ArrayConverter.allowedChars [org.apache.commons.beanutils2.converters.ArrayConverter] At ArrayConverter.java:[line 202] EI_EXPOSE_REP2. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: org.apache.commons.beanutils2.converters.DateTimeConverter.setPatterns(String[]) may expose internal representation by storing an externally mutable object into DateTimeConverter.patterns [org.apache.commons.beanutils2.converters.DateTimeConverter] At DateTimeConverter.java:[line 204] EI_EXPOSE_REP2. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: org.apache.commons.beanutils2.ConversionException.getCause() may expose internal representation by returning ConversionException.cause [org.apache.commons.beanutils2.ConversionException] At ConversionException.java:[line 83] EI_EXPOSE_REP. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: new org.apache.commons.beanutils2.ConversionException(String, Throwable) may expose internal representation by storing an externally mutable object into ConversionException.cause [org.apache.commons.beanutils2.ConversionException] At ConversionException.java:[line 53] EI_EXPOSE_REP2. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: new org.apache.commons.beanutils2.ConversionException(Throwable) may expose internal representation by storing an externally mutable object into ConversionException.cause [org.apache.commons.beanutils2.ConversionException] At ConversionException.java:[line 65] EI_EXPOSE_REP2. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: org.apache.commons.beanutils2.converters.DateTimeConverter.getPatterns() may expose internal representation by returning DateTimeConverter.patterns [org.apache.commons.beanutils2.converters.DateTimeConverter] At DateTimeConverter.java:[line 189] EI_EXPOSE_REP. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: org.apache.commons.beanutils2.WrapDynaClass.getDynaProperties() may expose internal representation by returning WrapDynaClass.properties [org.apache.commons.beanutils2.WrapDynaClass] At WrapDynaClass.java:[line 172] EI_EXPOSE_REP. Thanks to Gary Gregory. Replace Commons Collections Test Framework 3.2.2 with 4.5.0-M3 #40. Thanks to Melloware, sebbASF, Gary Gregory, Michal Landsman. Provide error index in ConversionException message in DateTimeConverter.parse(Class, Class, String, DateFormat). Thanks to Gary Gregory. Avoid possible NPE in DateTimeConverter.parse(Class, Class, String). Thanks to Gary Gregory. Annotate Converter with @FunctionalInterface. Thanks to Claude Warren, Gary Gregory. Fix JDK 21 CI failure due to locale changes #201. Fixes BEANUTILS-564. Thanks to SingingBush. Fix warnings and To-Dos #92. Thanks to Seth Falco. Replace internal use of Locale.ENGLISH with Locale.ROOT. Thanks to Gary Gregory. New converter for Enum. Fixes BEANUTILS-346. Thanks to Melloware. Add and use ConversionException.format(String, Object...). Thanks to Dependabot, Gary Gregory. Add Converters for additional types: Color, Dimension, InetAddress, Locale, Pattern, Point #47. Thanks to Seth Falco, Gary Gregory. Bump actions/cache from 2 to 3.0.11 #77, #89, #103, #111. #137, #141. Thanks to Dependabot, Gary Gregory. Update actions/checkout from 2.3.1 to 3.0.2 #33, #108. Thanks to Dependabot, Gary Gregory. Update actions/setup-java from 1.4.0 to 3.6.0 #35, #114, #144. Thanks to Dependabot, Gary Gregory. Bump actions/upload-artifact from 3.1.0 to 3.1.1 #143. Thanks to Dependabot. Bump Apache Commons Collections from 4.3 to 4.4. Fixes BEANUTILS-522. Thanks to Gary Gregory. Bump Java from 6 to 7. Fixes BEANUTILS-504. Thanks to Gary Gregory. Bump Java from 7 to 8. Fixes BEANUTILS-515. Thanks to Gary Gregory. Bump junit-jupiter from 5.7.2 to 5.9.1 #113, #126, #134. Thanks to Dependabot. Bump JUnit from 4 to 5.9.1 vintage, #78, #112, #127, #136. Thanks to Gary Gregory, Dependabot. Bump Jacoco from 0.8.4 to 0.8.8. Thanks to Gary Gregory. Bump JApiCmp from 0.12.0 to 0.17.1, #46, #110, #130, #146. Thanks to Gary Gregory, Dependabot. Bump maven-surefire-plugin from 2.22.1 to 3.0.0-M7, #116, #122. Thanks to Gary Gregory, Dependabot. Bump maven-checkstyle-plugin from 3.0.0 to 3.2.0, #76, #129. Thanks to Gary Gregory, Dependabot. Bump maven-pmd-plugin from 3.12.0 to 3.19.0, #120, #128, #131. Thanks to Gary Gregory, Dependabot. Bump BC version from 1.9.3 to 1.9.4. Thanks to Gary Gregory. Bump org.apache.commons:commons-parent from 50 to 74 #229, #245, #254, #264, #274, #279. Thanks to Gary Gregory, Dependabot. Bump biz.aQute.bndlib from 5.1.0 to 6.4.1 #29, #45, #79, #109, #119, #121, #147, #175. Thanks to Dependabot. Jacoco 0.8.6 for JDK15 support #55. Thanks to melloware. Updated URLConverterTestCase to run without Internet access #50. Thanks to SethFalco. Don't initialize variables to defaults #71. Thanks to Arturo Bernal. Bump spotbugs-maven-plugin from 4.5.3.0 to 4.6.0.0. Thanks to Dependabot. Bump spotbugs from 4.5.3 to 4.6.0. Thanks to Dependabot. Bump org.apache.commons:commons-lang3 from 3.12.0 to 3.17.0 #263, #269, #280. Thanks to Gary Gregory, Dependabot. Bump commons-logging:commons-logging from 1.2 to 1.3.4 #226, #246, #259, #275. Thanks to Gary Gregory, Dependabot. Bump org.apache.commons:commons-parent from 74 to 78 #291, #295, #299, #306. Thanks to Gary Gregory, Dependabot. Removed BeanUtilsBean2, use BeanUtilsBean. BeanUtilsBean2 functionality is now in BeanUtilsBean. Previous BeanUtilsBean functionality for those methods is no longer supported. Thanks to Gary Gregory, Niall Pemberton. Removed ConvertUtilsBean2, use ConvertUtilsBean. ConvertUtilsBean2 functionality is now in ConvertUtilsBean. Previous ConvertUtilsBean functionality for those methods is no longer supported. Thanks to Gary Gregory, Niall Pemberton. Do not implement Serializable. Thanks to Gary Gregory. FluentPropertyBeanIntrospector concurrency issue (backport to 1.X) #325. Fixes BEANUTILS-541. Thanks to Sergey Chernov. Javadoc is missing its Overview page. Thanks to Gary Gregory. Remove -nouses directive from maven-bundle-plugin. OSGi package imports now state 'uses' definitions for package imports, this doesn't affect JPMS (from org.apache.commons:commons-parent:80). Thanks to Gary Gregory. Bump org.apache.commons:commons-parent from 78 to 81. Thanks to Gary Gregory. FluentPropertyBeanIntrospector caches corrupted writeMethod (backport to 1.x) #69. Fixes BEANUTILS-541. Thanks to Sergey Chernov. Replace internal use of Locale.ENGLISH with Locale.ROOT. Thanks to Gary Gregory. Replace Maven CLIRR plugin with JApiCmp. Thanks to Gary Gregory. Port to Java 1.4 Throwable APIs (!). Thanks to Gary Gregory. Fix Javadoc generation on Java 8, 17, and 21. Thanks to Gary Gregory. AbstractArrayConverter.parseElements(String) now returns a List<String> instead of a raw List. Thanks to Gary Gregory. Bump org.apache.commons:commons-parent from 47 to 78. Thanks to Gary Gregory. Bump Java requirement from Java 6 to 8. Thanks to Gary Gregory. Bump junit:junit from 4.12 to 4.13.2. Thanks to Gary Gregory. Bump JUnit from 4.x to 5.x \"vintage\". Thanks to Gary Gregory. Bump commons-logging:commons-logging from 1.2 to 1.3.4. Thanks to Gary Gregory. Deprecate BeanUtilsBean.initCause(Throwable, Throwable) for removal, use Throwable.initCause(Throwable). Thanks to Gary Gregory. Deprecate BeanUtils.initCause(Throwable, Throwable) for removal, use Throwable.initCause(Throwable). Thanks to Gary Gregory. BeanUtils mitigation of CVE-2014-0114. (CVE-2019-10086 for commons-beanutils). Fixes BEANUTILS-520. Thanks to Melloware. Update dependency from JUnit 3.8.1 to 4.12. Fixes BEANUTILS-433. Thanks to Benedikt Ritter, Gary Gregory. Indexed List Setters no longer work. Fixes BEANUTILS-465. Thanks to Daniel Atallah. Update commons-logging from 1.1.1 to 1.2. Fixes BEANUTILS-469. Thanks to Gary Gregory. Precision lost when converting BigDecimal. Fixes BEANUTILS-470. Thanks to Tommy Tynjä. FluentPropertyBeanIntrospector does not use the same naming algorithm as DefaultBeanIntrospector. Fixes BEANUTILS-474. Thanks to Michael Grove. Changed log level of warnings from FluentPropertyBeanIntrospector; exceptions are no longer logged with level WARN. Fixes BEANUTILS-477. Update commons-collections from 3.2.1 to 3.2.2. (CVE-2015-4852). Fixes BEANUTILS-482. Thanks to Gary Gregory. Update Java requirement from Java 5 to 6. Fixes BEANUTILS-490. Thanks to Gary Gregory. IndexedPropertyDescriptor not supported for List in Java 8. Fixes BEANUTILS-492. Thanks to Stian Soiland-Reyes. Exception when setting indexed properties: \"Default conversion to ArrayList failed\". Fixes BEANUTILS-493. Thanks to Bernhard Seebass. DateConverterTestBase fails on M/d/yy in Java 9. Fixes BEANUTILS-495. Thanks to Stian Soiland-Reyes. testGetDescriptorInvalidBoolean fails on Java 9. Fixes BEANUTILS-496. Thanks to Stian Soiland-Reyes. BaseLocaleConverter.checkConversionResult() fails with ConversionException when result is null when it should not. Fixes BEANUTILS-458. Thanks to Manuel Dominguez Sarmiento. Write methods for PropertyDescriptors created during custom introspection are lost. Fixes BEANUTILS-456. WrapDynaBeans always use the default PropertyUtilsBean instance. Fixes BEANUTILS-455. LocaleConverters do not take the target type into account. Fixes BEANUTILS-449. LocaleConverters do not check their default value. Fixes BEANUTILS-448. LazyDynaList.toArray() is not conform to the contract defined by the Collection interface. Fixes BEANUTILS-447. Some of the converters ignore the passed in target type. Fixes BEANUTILS-446. Converters can return an invalid result object if a default value is set. Fixes BEANUTILS-445. Replace UnmodifiableSet.decorate with Collections.unModifiableSet. Fixes BEANUTILS-441. Thanks to Samir Kerroumi. BeanUtilsBean.setProperty throws IllegalArgumentException if getter of nested property returns null. Fixes BEANUTILS-411. Thanks to Marcus Zander. Delete trailing white spaces and white spaces on empty lines from all files. Fixes BEANUTILS-429. Configure Checkstyle to check for trailing white spaces and white spaces on empty lines. Fixes BEANUTILS-427. BeanMap methods should initialize the root cause of exceptions that are thrown when running on JDK 1.4+. Fixes BEANUTILS-380. Thanks to Brendan Nolan. BeanMap does not work in osgi (fixed by BEANUTILS-379). Fixes BEANUTILS-378. Thanks to Christian Schneider. MethodUtils getMatchingAccessibleMethod() does not correctly handle inheritance and method overloading. Fixes BEANUTILS-381. Thanks to Todd Nine. MethodUtils is not thread safe because WeakFastHashMap which uses WeakHashMap is not thread-safe (duplicate of BEANUTILS-318 which was not fixed properly in BeanUtils 1.8.0). Fixes BEANUTILS-373. Thanks to Andrew Sunde. Add constructors which have useColumnLabel parameter to ResultSetDynaClass and RowSetDynaClass. Fixes BEANUTILS-371. Thanks to David Tonhofer. NullPointerException in BeanUtilsBean .setProperty(). Fixes BEANUTILS-368. Thanks to Peter Fassev. NPE in LazyDynaList. Fixes BEANUTILS-300. Thanks to Henri and Sebb. JDBCDynaClass throws class not found exception under java6. Fixes BEANUTILS-327. Thanks to Sascha Riemann. MappedPropertyDescriptor#reLoadClass() possible NPE / odd code; also swallows Throwable. Fixes BEANUTILS-336. Thanks to Sebb. BeanUtilsBean.setProperty throws IllegalArgumentException if value is null. Fixes BEANUTILS-339. Thanks to Alan Escreet. BeanUtilsBean.setProperty does not handle some kind of nested properties. Fixes BEANUTILS-345. Thanks to Simone Riccucci. MappedPropertyDescriptor throws an exception after method reference has been garbage collected. Fixes BEANUTILS-347. Thanks to Eickvonder. copyProperties throws NullPointerException if an IllegalArgumentException is thrown due to a null value parameter for a primitive. Fixes BEANUTILS-349. Thanks to Eivind Tagseth. FloatLocaleConverter cannot parse 0. Fixes BEANUTILS-351. Thanks to Lucian Chirita. Type in BooleanConverter: \"Cna't convert value\". Fixes BEANUTILS-354. Thanks to Anders Wallgren. Avoid calling setAccessible() if not needed. Fixes BEANUTILS-333. Thanks to Lukasz Lenart. Method createDynaProperty of JDBCDynaClass should first look for column label instead of column name in ResultSetMetadata object.. Fixes BEANUTILS-344. Thanks to Viral. change visibility of method \"evaluateValue\" belongs to the class BeanPropertyValueEqualsPredicate to \"protected\". Fixes BEANUTILS-350. Thanks to rodrigo hernandez. Allow access to non public class's public methods from a public sub-classes. Fixes BEANUTILS-265. Thanks to Tom Schindl and Romain Muller. Circular Reference on WeakHashMap. Fixes BEANUTILS-291. Thanks to Clebert Suconic. BeanUtilsBean.setProperty() does not support nested map. Fixes BEANUTILS-294. Thanks to Stephen Leung. Unnecessary Garbage Objects in Class PropertyUtilsBean. Fixes BEANUTILS-295. Thanks to Stefan Wohlgemuth. ConvertingWrapDynaBean hides cause exceptions. Fixes BEANUTILS-297. Thanks to Alex Tkachev. MethodUtils.getAccessibleMethod(Method method) could not find right public method. Fixes BEANUTILS-298. Thanks to Roman Mukhin. NPE in ArrayConverter when converting a non-quoted string with underscores to a string array. Fixes BEANUTILS-302. Thanks to Martin Bartlett. LocaleConvertUtilsBean.convert throws NPE on null Locale when debug logging is enabled. Fixes BEANUTILS-306. Thanks to Lucian Chirita. Fix WeakHashMap is not thread safe in MethodUtils using new FastWeakHashMap. Fixes BEANUTILS-318. Thanks to Sylvain Legault. PropertyUtils.getPropertyType fails for DynaBeans contained within a normal bean. Fixes BEANUTILS-319. Thanks to Erik Erskine. Iterating by a Map' key/value pairs in BeanUtilsBean and PropertyUtilsBean. Fixes BEANUTILS-326. Thanks to Vladimir Orlov. General Converter implementation improvements: New AbstractConverter which provides a basic structure for Converter implementations and new NumberConverter implementation. Fixes BEANUTILS-258. Better implementation of SqlDateConverter. Modified SqlDateConverter, SqlTimeConverter and SqlTimestampConverter to accept java.util.Date and Calendar object instances. Added tests. Fixes BEANUTILS-239. Thanks to Rafael Afonso. Support Mapped property inside a mapped property. Fixes BEANUTILS-43. Thanks to Firepica and Thomas Jacob. Support Indexed property inside a mapped property. Fixes BEANUTILS-113. Thanks to Firepica and Ludwig Wensauer. Support Arrays with multiple dimension. Fixes BEANUTILS-247. Thanks to Christian Poitras, Thomas Jacob and scott sadlo. Include bean class in the message of PropertyUtilsBean exceptions. Fixes BEANUTILS-207. Thanks to Erik Meade. Provide better error message for \"argument type mismatch\". Fixes BEANUTILS-224. Thanks to Ralf Hauser. Improved messages for unknown properties. Fixes BEANUTILS-30. Thanks to Barry Kaplan. MethodUtils.invoke for static methods. Fixes BEANUTILS-193. Thanks to Nestor Boscan. Log or throw exception in PropertyUtilsBean. Added mechanism to initialize the \"cause\" on an Exception using reflection for JDK 1.4+ (copied from Commons HttpClient). Fixes BEANUTILS-266. Thanks to Brian Ewins and Commons HttpClient. Provide a Map decorator for a DynaBean (enables DynaBean to be used with other teechnologies such as JSTL). Fixes BEANUTILS-185. Thanks to Gabriel Belingueres. Implement equals() and hashCode() methods for DynaProperty. Fixes BEANUTILS-233. Thanks to Russell. BeanUtils's tests fail to compile under JDK 1.6. Fixes BEANUTILS-243. Thanks to Henri Yandell. Lock in BeanUtilsBean.getInstance(. Fixes BEANUTILS-49. Thanks to Jesper Richter-Reichhelm. Beanutils's describe() method cannot determine reader methods for anonymous class. Fixes BEANUTILS-157. Thanks to Thorbjorn Ravn Andersen. Added warning about describe behavior to the javadocs. Fixes BEANUTILS-158. BeanUtilsBean's setProperty() does not convert objects using custom converters properly. Fixes BEANUTILS-249. Thanks to Brad. Fix javadoc - IllegalArgumentException in BeanUtils.copyProperties when property types don't match. Fixes BEANUTILS-17. Thanks to Matthew Sgarlata and Corey Scott. Writing to a mapped property requires a setter for a map, but never uses it. Fixes BEANUTILS-68. Thanks to Dmitry Platonoff. BeanUtilsBean.getArrayProperty() does not use ConvertUtils. Fixes BEANUTILS-110. Thanks to Etienne Bernard. MappedPropertyDescriptor: Add comments re: * use of static variable safe in shared classloader * memory leak possible on webapp undeploy. Add test for MappedPropertyDescriptor with different types on get/set methods. Fixes BEANUTILS-163. LocaleBeanUtils setProperty does not work on nested property. Fixes BEANUTILS-140. Thanks to Marco La Porta. Package scope implementation of a public interface for mapped property fails (fixed by changes to MappedPropertyDescriptor associated with BEANUTILS-6). Fixes BEANUTILS-87. Thanks to YOKOTA Takehiko. PropertyUtils incosistency - can't use \"dot\" in mapped properties for setProperty or getPropertyDescriptor (fixed by the changes for BEANUTILS-259 Plugable Property Name Expression Resolver). Fixes BEANUTILS-33. Thanks to Eoin Curran. Public methods overridden in anonymous or private subclasses are not recognized by PropertyUtils. Fixes BEANUTILS-273. Thanks to Marcelo Liberato. PropertyUtilsBean's isReadable() / isWriteable() always return false for mapped properties. Fixes BEANUTILS-88. Thanks to Chuck Daniels. PropertyUtilsBean isReadable() and isWriteable() methods do not work correctly for WrapDynaBean. Fixes BEANUTILS-61. Thanks to Brian Ewins. PropertyUtils.isReadable() and PropertyUtils.getProperty() not consistent. Fixes BEANUTILS-18. Thanks to Maarten Coene. PropertyUtilsBean.copyProperties does not catch NoSuchMethodException. Fixes BEANUTILS-92. Thanks to Will Pugh. PropertyUtilsBean.getIndexedProperty()'s javadoc should indicate IndexOutOufBoundsException can be thrown rather than just ArrayIndexOutOufBoundsException. Fixes BEANUTILS-256. Thanks to Torsten Feig. Create new methods getPropertyOfMapBean and setPropertyOfMapBean that the existing setNestedProperty and getNestedProperty methods now call when they discover the bean they are accessing implements Map. This makes it much easier for users to subclass and customize this behavior of PropertyUtilsBean, eg in order to restore pre-1.5 behavior. This patch also causes an exception to be thrown when the propertyName passed to getPropertyOfMapBean or setPropertyOfMapBean has MAPPED_DELIM or INDEXED_DELIM chars in it. This never worked as expected before (the whole string was treated literally as the propertyName), so throwing an exception here should not break any existing code. It should be of help to future developers who make this mistake though... Fixes BEANUTILS-162. Ignore simple properties on java.util.Map objects - Map methods are always used on a Map object. Reverts BEANUTILS-144. See BEANUTILS-162 for discussion. Correct getPropertyDescriptor() and setNestedProperty() methods to throw a NestedNullException rather than just IllegalArgumentException (consistent with the getNestedProperty() method). Fixes BEANUTILS-262. BooleanArrayConverter: Use new AbstractArrayConverter constructors and Convert strings to booleans by invoking a BooleanConverter rather than hard-wiring the conversion. BooleanConverter: Add facility for user to override the default set of true and false string definitions and provide ability to pass special NO_DEFAULT object as the \"defaultValue\" constructor parameter. Thanks to Eric Rizzo. AbstractArrayConverter: provide ability to pass special NO_DEFAULT object as the \"defaultValue\" constructor parameter. DecimalLocaleConverter and subClasses never throw a ConversionException. Fixes BEANUTILS-78. Thanks to Stefan Lotscher. FloatLocaleConverter cannot parse negative values. Fixes BEANUTILS-44. Thanks to Paul Jenkins. DateLocaleConverter does not always throw an Exception for invalid dates. Fixes BEANUTILS-271. Thanks to Nico Hoogervorst. Don't try parsing values that are already Dates/Numbers in Date/Number locale Converters. Fixes BEANUTILS-288. WrapDynaClass: Added comment re potential memory leak, and safety when using shared classloader WrapDynaBeanTestCase failing with jikes/kaffe because of static List in TestBean. Fixes BEANUTILS-36. Thanks to Jack. Misleading error message in ConvertingWrapDynaBean. Fixes BEANUTILS-23. Thanks to Aslak Hellesoy. LazyDynaBean: don't try and instantiate properties of type Object.class. Fixes BEANUTILS-24. Thanks to Roi Ares. JDBCDynaClass \"lowerCase\" option causes problems in RowSetDynaClass and ResultSetIterator. Fixes BEANUTILS-289. RowSetDynaClass fails to copy ResultSet to DynaBean with Oracle 10g JDBC driver. Fixes BEANUTILS-142. Thanks to Li Zhang. Fix BeanComparator throws wrong exception and hides cause. Fixes BEANUTILS-241. Thanks to Chris Hyzer. Deprecate the public static defaultTransformers HashMap and make it unmodifiable. Fixes BEANUTILS-112. Thanks to Simon Kitching. Fixi the build to include all the tests and change the build.properties.sample so it's easier to use for the default maven user (ie: it looks by default in the .maven repository). Fixes BEANUTILS-287. Improvements to maven build. Fixes BEANUTILS-217. Thanks to Carlos Sanchez. Add Implementation-Vendor-Id entry to jar's manifest. Fixes BEANUTILS-54. Thanks to Pascal Grange. Resolve compiler warnings: Unused imports, un-read local variables, field hiding, empty block, improperly used statics, uncessary semi colons, unnecessary casts. Fixes BEANUTILS-121. Thanks to Chris Tilden. Replace use of static Log objects with instance or local variables. It isn't safe to use static Log objects in code that might be deployed via a shared classloader as they will bind to the Log object from the context classloader in use when the first use happens. BeanMap: Fix internal variable to not include non-existant write methods. - ported from Commons Collections. Fixes COLLECTIONS-22. Thanks to Dimiter Dimitrov. Change MethodUtils to make getMatchingAccessibleMethod() method selection more rational. Thanks to Steve Cohen."
    },
    {
        "link": "https://baeldung.com/apache-commons-beanutils",
        "document": "Apache Commons BeansUtils contains all tools necessary for working with Java beans.\n\nSimply put, a bean is a simple Java class containing fields, getters/setters, and a no-argument constructor.\n\nJava provides reflection and introspection capabilities to identify getter-setter methods and call them dynamically. However, these APIs can be difficult to learn and may require developers to write boilerplate code to perform simple operations.\n\nIn this article, we will explore some of the main usages of Apache Commons BeansUtils while dealing with Java Beans.\n\nHere is the Maven dependency required to be included in the POM file before using it:\n\nLet’s create two bean classes Course and Student with typical getter and setter methods.\n\nWe have a Course class that has a course name, course codes, and multiple enrolled students. Enrolled Students are identified by unique enrollment Id. Course class maintains enrolled students in a Map object where enrollment Id is a key, and the student object will be the value.\n\nBean properties can be divided into three categories: simple properties, indexed properties, and mapped properties.\n\nSingle-value properties are also called simple or scalar.\n\nTheir value might be a primitive such as int and float, or complex type objects. BeanUtils has a PropertyUtils class that allows us to modify simple properties in a Java Bean.\n\nHere is the example code to set the properties:\n\nIndexed properties have a collection as a value that can be individually accessed using an index number. As an extension to JavaBean, BeanUtils considers java.util.List type values as indexed as well.\n\nWe can modify an indexed property individual value using a PropertyUtils’s setIndexedProperty method.\n\nHere is example code modifying indexed property:\n\nAny property that has a java.util.Map as the underlying type is called a mapped property. BeanUtils allows us to update the individual value in a map using a String-valued key.\n\nHere is the example code to modify the value in a mapped property:\n\nIf a property value is an object and we need to access a property value inside that object, that would be accessing a nested property. PropertyUtils allow us to access and modify nested properties as well.\n\nAssume we want to access the name property of Student class through Course object. We might write:\n\nWe can access the nested property values using getNestedProperty and modify the nested property using setNestedProperty methods in PropertyUtils. Here is the code:\n\nCopying properties from one object to another object is often tedious and error-prone for developers.\n\nBeanUtils class provides a copyProperties method that copies the properties of source object to target object where the property name is same in both objects.\n\nLet’s create another bean class. It’ll have the same properties as Course except a students property instead of the enrolledStudent Course property. Let’s name that class CourseEntity. The class would look like:\n\nNow, we’ll copy the properties of Course object to CourseEntity object:\n\nRemember this will copy the properties with the same name only. Therefore, it will not copy the property enrolledStudent in Course class because there is no property with the same name in CourseEntity class.\n\nSometimes, it can be handy to copy only non-null fields. To do so, we can define our own BeanUtilsBean and override the definition of copyProperty():\n\nAs we can see, we copy the property only if its initial value isn’t null. Let’s now test this code:\n\nWe instantiated a Course object with a null name. Then, we created a CourseEntity object with the name entityName. After this, we copied all non-null properties from the Course object to their corresponding property in the CourseEntity object. As we expected, we could finally check that the name of our CourseEntity object didn’t change. In a word, the null name in the Course object got ignored!\n\nIn this quick article, we went over the utility classes provided by BeanUtils. We also looked into different types of properties and how can we access and modify their values.\n\nFinally, we looked into accessing nested property values and copying properties from one object to another object.\n\nOf course, reflection and introspection capabilities in the Java SDK also allow us to access properties dynamically but it can be difficult to learn and require some boilerplate code. BeanUtils allows us to access and modify these values with a single method call."
    },
    {
        "link": "https://commons.apache.org/beanutils/javadocs/v1.8.0/RELEASE-NOTES.txt",
        "document": ""
    },
    {
        "link": "https://stackoverflow.com/questions/2601175/how-to-ask-beanutils-to-ignore-null-values",
        "document": "Using Commons beanUtils I would like to know how to ask any converter say the Dateconverter to ignore null values and use null as default. As an example consider a public class,\n\nand my convertertest as,\n\nThe above throws a NPE since the date happens to be null. This looks a very primitive scenario to me which should be handled by default (as in, I would expect x2 to have null value for date1). The doco tells me that I can ask the converter to do this. Can someone point me as to the best way for doing this ?\n\nI dont want to get hold of the Converter and isUseDefault() to be true because then I have to do it for all Date, Enum and many other converters !"
    },
    {
        "link": "https://baeldung.com/apache-commons-beanutils",
        "document": "Apache Commons BeansUtils contains all tools necessary for working with Java beans.\n\nSimply put, a bean is a simple Java class containing fields, getters/setters, and a no-argument constructor.\n\nJava provides reflection and introspection capabilities to identify getter-setter methods and call them dynamically. However, these APIs can be difficult to learn and may require developers to write boilerplate code to perform simple operations.\n\nIn this article, we will explore some of the main usages of Apache Commons BeansUtils while dealing with Java Beans.\n\nHere is the Maven dependency required to be included in the POM file before using it:\n\nLet’s create two bean classes Course and Student with typical getter and setter methods.\n\nWe have a Course class that has a course name, course codes, and multiple enrolled students. Enrolled Students are identified by unique enrollment Id. Course class maintains enrolled students in a Map object where enrollment Id is a key, and the student object will be the value.\n\nBean properties can be divided into three categories: simple properties, indexed properties, and mapped properties.\n\nSingle-value properties are also called simple or scalar.\n\nTheir value might be a primitive such as int and float, or complex type objects. BeanUtils has a PropertyUtils class that allows us to modify simple properties in a Java Bean.\n\nHere is the example code to set the properties:\n\nIndexed properties have a collection as a value that can be individually accessed using an index number. As an extension to JavaBean, BeanUtils considers java.util.List type values as indexed as well.\n\nWe can modify an indexed property individual value using a PropertyUtils’s setIndexedProperty method.\n\nHere is example code modifying indexed property:\n\nAny property that has a java.util.Map as the underlying type is called a mapped property. BeanUtils allows us to update the individual value in a map using a String-valued key.\n\nHere is the example code to modify the value in a mapped property:\n\nIf a property value is an object and we need to access a property value inside that object, that would be accessing a nested property. PropertyUtils allow us to access and modify nested properties as well.\n\nAssume we want to access the name property of Student class through Course object. We might write:\n\nWe can access the nested property values using getNestedProperty and modify the nested property using setNestedProperty methods in PropertyUtils. Here is the code:\n\nCopying properties from one object to another object is often tedious and error-prone for developers.\n\nBeanUtils class provides a copyProperties method that copies the properties of source object to target object where the property name is same in both objects.\n\nLet’s create another bean class. It’ll have the same properties as Course except a students property instead of the enrolledStudent Course property. Let’s name that class CourseEntity. The class would look like:\n\nNow, we’ll copy the properties of Course object to CourseEntity object:\n\nRemember this will copy the properties with the same name only. Therefore, it will not copy the property enrolledStudent in Course class because there is no property with the same name in CourseEntity class.\n\nSometimes, it can be handy to copy only non-null fields. To do so, we can define our own BeanUtilsBean and override the definition of copyProperty():\n\nAs we can see, we copy the property only if its initial value isn’t null. Let’s now test this code:\n\nWe instantiated a Course object with a null name. Then, we created a CourseEntity object with the name entityName. After this, we copied all non-null properties from the Course object to their corresponding property in the CourseEntity object. As we expected, we could finally check that the name of our CourseEntity object didn’t change. In a word, the null name in the Course object got ignored!\n\nIn this quick article, we went over the utility classes provided by BeanUtils. We also looked into different types of properties and how can we access and modify their values.\n\nFinally, we looked into accessing nested property values and copying properties from one object to another object.\n\nOf course, reflection and introspection capabilities in the Java SDK also allow us to access properties dynamically but it can be difficult to learn and require some boilerplate code. BeanUtils allows us to access and modify these values with a single method call."
    },
    {
        "link": "https://stackoverflow.com/questions/63395166/org-apache-commons-beanutils-copyproperties-ignore-fields",
        "document": "I am using Java 7 and .\n\nIs it possible to copy the beans, but ignore specific fields?\n\ne.g. I have the following:\n\nBut would like to not copy a member variable in called ."
    },
    {
        "link": "https://commons.apache.org/proper/commons-beanutils/javadocs/v1.9.4/apidocs/org/apache/commons/beanutils/BeanUtilsBean.html",
        "document": "\n• Gets the instance which provides the functionality for . This is a pseudo-singleton - an single instance is provided per (thread) context classloader. This mechanism provides isolation for web apps deployed in the same container.\n• Sets the instance which provides the functionality for . This is a pseudo-singleton - an single instance is provided per (thread) context classloader. This mechanism provides isolation for web apps deployed in the same container.\n• Clone a bean based on the available property getters and setters, even if the bean class itself does not implement Cloneable. Note: this method creates a shallow clone. In other words, any objects referred to by the bean are shared with the clone rather than being cloned in turn. - if the caller does not have access to the property accessor method - if a new instance of the bean's class cannot be instantiated - if the property accessor method throws an exception - if an accessor method for this property cannot be found\n• Copy property values from the origin bean to the destination bean for all cases where the property names are the same. For each property, a conversion is attempted as necessary. All combinations of standard JavaBeans and DynaBeans as origin and destination are supported. Properties that exist in the origin bean, but do not exist in the destination bean (or are read-only in the destination bean) are silently ignored. If the origin \"bean\" is actually a , it is assumed to contain String-valued simple property names as the keys, pointing at the corresponding property values that will be converted (if necessary) and set in the destination bean. Note that this method is intended to perform a \"shallow copy\" of the properties and so complex properties (for example, nested ones) will not be copied. This method differs from , which was primarily designed for populating JavaBeans from the map of request parameters retrieved on an HTTP request, is that no scalar->indexed or indexed->scalar manipulations are performed. If the origin property is indexed, the destination property must be also. If you know that no type conversions are required, the method in will execute faster than this method. FIXME - Indexed and mapped properties that do not have getter and setter methods for the underlying array or Map are not copied by this method. - if the caller does not have access to the property accessor method - if the or argument is null or if the property type is different from the source type and the relevant converter has not been registered. - if the property accessor method throws an exception\n• Copy the specified property value to the specified destination bean, performing any type conversion that is required. If the specified bean does not have a property of the specified name, or the property is read only on the destination bean, return without doing anything. If you have custom destination property types, register s for them by calling the method of .\n• Does not support destination properties that are indexed, but only an indexed setter (as opposed to an array setter) is available.\n• Does not support destination properties that are mapped, but only a keyed setter (as opposed to a Map setter) is available.\n• The desired property type of a mapped setter cannot be determined (since Maps support any data type), so no conversion will be performed. - Bean on which setting is to be performed - Property name (can be nested/indexed/mapped/combo) - Value to be set - if the caller does not have access to the property accessor method - if the property accessor method throws an exception\n• Return the entire set of properties for which the specified bean provides a read method. This map contains the to converted property values for all properties for which a read method is provided (i.e. where the getReadMethod() returns non-null). This map can be fed back to a call to to reconsitute the same set of properties, modulo differences for read-only and write-only properties, but only if there are no indexed properties. Warning: if any of the bean property implementations contain (directly or indirectly) a call to this method then a stack overflow may result. For example: will result in an infinite regression when is called. It is recommended that such methods are given alternative names (for example, ). - Bean whose properties are to be extracted - if the caller does not have access to the property accessor method - if the property accessor method throws an exception - if an accessor method for this property cannot be found\n• Return the value of the specified array property of the specified bean, as a String array. - Bean whose property is to be extracted - Name of the property to be extracted - if the caller does not have access to the property accessor method - if the property accessor method throws an exception - if an accessor method for this property cannot be found\n• Return the value of the specified indexed property of the specified bean, as a String. The zero-relative index of the required value must be included (in square brackets) as a suffix to the property name, or will be thrown. - Bean whose property is to be extracted - of the property value to be extracted The indexed property's value, converted to a String - if the caller does not have access to the property accessor method - if the property accessor method throws an exception - if an accessor method for this property cannot be found\n• Return the value of the specified indexed property of the specified bean, as a String. The index is specified as a method parameter and must *not* be included in the property name expression - Bean whose property is to be extracted - Simple property name of the property value to be extracted - Index of the property value to be extracted The indexed property's value, converted to a String - if the caller does not have access to the property accessor method - if the property accessor method throws an exception - if an accessor method for this property cannot be found\n• Return the value of the specified indexed property of the specified bean, as a String. The String-valued key of the required value must be included (in parentheses) as a suffix to the property name, or will be thrown. - Bean whose property is to be extracted - of the property value to be extracted The mapped property's value, converted to a String - if the caller does not have access to the property accessor method - if the property accessor method throws an exception - if an accessor method for this property cannot be found\n• Return the value of the specified mapped property of the specified bean, as a String. The key is specified as a method parameter and must *not* be included in the property name expression - Bean whose property is to be extracted - Simple property name of the property value to be extracted - Lookup key of the property value to be extracted The mapped property's value, converted to a String - if the caller does not have access to the property accessor method - if the property accessor method throws an exception - if an accessor method for this property cannot be found\n• Return the value of the (possibly nested) property of the specified name, for the specified bean, as a String. - Bean whose property is to be extracted - Possibly nested name of the property to be extracted The nested property's value, converted to a String - if the caller does not have access to the property accessor method - if the property accessor method throws an exception - if an accessor method for this property cannot be found\n• Return the value of the specified property of the specified bean, no matter which property reference format is used, as a String. - Bean whose property is to be extracted - Possibly indexed and/or nested name of the property to be extracted The property's value, converted to a String - if the caller does not have access to the property accessor method - if the property accessor method throws an exception - if an accessor method for this property cannot be found\n• Return the value of the specified simple property of the specified bean, converted to a String. - Bean whose property is to be extracted - Name of the property to be extracted The property's value, converted to a String - if the caller does not have access to the property accessor method - if the property accessor method throws an exception - if an accessor method for this property cannot be found\n• Populate the JavaBeans properties of the specified bean, based on the specified name/value pairs. This method uses Java reflection APIs to identify corresponding \"property setter\" method names, and deals with setter arguments of type , , , , , and . In addition, array setters for these types (or the corresponding primitive types) can also be identified. The particular setter method to be called for each property is determined using the usual JavaBeans introspection mechanisms. Thus, you may identify custom setter methods using a BeanInfo class that is associated with the class of the bean itself. If no such BeanInfo class is available, the standard method name conversion (\"set\" plus the capitalized name of the property in question) is used. NOTE: It is contrary to the JavaBeans Specification to have more than one setter method (with different argument signatures) for the same property. WARNING - The logic of this method is customized for extracting String-based request parameters from an HTTP request. It is probably not what you want for general property copying with type conversion. For that purpose, check out the method instead. - JavaBean whose properties are being populated - Map keyed by property name, with the corresponding (String or String[]) value(s) to be set - if the caller does not have access to the property accessor method - if the property accessor method throws an exception\n• Set the specified property value, performing type conversions as required to conform to the type of the destination property. If the property is read only then the method returns without throwing an exception. If is passed into a property expecting a primitive value, then this will be converted as if it were a string. WARNING - The logic of this method is customized to meet the needs of , and is probably not what you want for general property copying with type conversion. For that purpose, check out the method instead. WARNING - PLEASE do not modify the behavior of this method without consulting with the Struts developer community. There are some subtleties to its functionality that are not documented in the Javadoc description above, yet are vital to the way that Struts utilizes this method. - Bean on which setting is to be performed - Property name (can be nested/indexed/mapped/combo) - Value to be set - if the caller does not have access to the property accessor method - if the property accessor method throws an exception\n• Gets the instance used to perform the conversions.\n• Gets the instance used to access properties.\n• If we're running on JDK 1.4 or later, initialize the cause for the given throwable. - The cause of the throwable. true if the cause was initialized, otherwise false.\n• Convert the value to an object of the specified class (if possible). - Value to be converted (may be null) - Class of the value to be converted to - if thrown by an underlying Converter"
    },
    {
        "link": "https://commons.apache.org/beanutils/changes.html",
        "document": "This is a major release and requires Java 8. This is a major release and requires Java 8 This is a maintenance release and requires Java 8. This is a maintenance release and requires Java 8. The primary reason for this release is a bugfix for CVE-2014-0114. More specifically, our goal with BEANUTILS-520 is to set the default behavior of the BeanUtilsBean to not allow class level access. The goal in doing this now is to bring 1.9.X into alignment with the same behavior of the 2.X version line in regards to security. If one would like to opt out of the default behavior, one could follow the example set out in the test class available in src/test/java/org/apache/commons/beanutils/bugs/Jira520TestCase.java. Upgrade to Java 5 including generics where possible Javadoc is missing its Overview page. Thanks to Gary Gregory. Remove -nouses directive from maven-bundle-plugin. OSGi package imports now state 'uses' definitions for package imports, this doesn't affect JPMS (from org.apache.commons:commons-parent:80). Thanks to Gary Gregory. The class org.apache.commons.beanutils2.PropertyUtils is now final (the class only contains static methods). Thanks to Gary Gregory. The constructor org.apache.commons.beanutils2.PropertyUtils is now private (the class only contains static methods). Thanks to Gary Gregory. The class org.apache.commons.beanutils2.locale.LocaleConvertUtils is now final (the class only contains static methods). Thanks to Gary Gregory. The constructor org.apache.commons.beanutils2.locale.LocaleConvertUtils is now private (the class only contains static methods). Thanks to Gary Gregory. The class org.apache.commons.beanutils2.locale.LocaleBeanUtils is now final (the class only contains static methods). Thanks to Gary Gregory. The constructor org.apache.commons.beanutils2.locale.LocaleBeanUtils is now private (the class only contains static methods). Thanks to Gary Gregory. The class org.apache.commons.beanutils2.MethodUtils is now final (the class only contains static methods). Thanks to Gary Gregory. The constructor org.apache.commons.beanutils2.MethodUtils is now private (the class only contains static methods). Thanks to Gary Gregory. The class org.apache.commons.beanutils2.ConvertUtils is now final (the class only contains static methods). Thanks to Gary Gregory. The constructor org.apache.commons.beanutils2.ConvertUtils is now private (the class only contains static methods). Thanks to Gary Gregory. The class org.apache.commons.beanutils2.ConstructorUtils is now final (the class only contains static methods). Thanks to Gary Gregory. The constructor org.apache.commons.beanutils2.ConstructorUtils is now private (the class only contains static methods). Thanks to Gary Gregory. The class LocaleBeanUtils no longer extends BeanUtils (both classes only contains static methods). Thanks to Gary Gregory. The class org.apache.commons.beanutils2.BeanUtils is now final (the class only contains static methods). Thanks to Gary Gregory. The constructor org.apache.commons.beanutils2.BeanUtils is now private (the class only contains static methods). Thanks to Gary Gregory. Bump org.apache.commons:commons-parent from 78 to 81. Thanks to Gary Gregory. Bump commons-logging:commons-logging from 1.3.4 to 1.3.5. Thanks to Gary Gregory. Change packaging from org.apache.commons.beanutils to org.apache.commons.beanutils2. Fixes BEANUTILS-503. Thanks to Gary Gregory. Double-Checked Locking anti pattern in WeakFastHashMap. Fixes BEANUTILS-402. Thanks to Melloware. Add missing serialVersionUID to Serializable classes. Fixes BEANUTILS-505. Thanks to Gary Gregory. Add Automatic-Module-Name entry to MANIFEST.MF. Fixes BEANUTILS-512. Thanks to Gary Gregory. Remove deprecated code for 2.0.0. Fixes BEANUTILS-514. Thanks to Gary Gregory. WeakHashmap enters into infinite loop in WrapDynaClass.java. Fixes BEANUTILS-509. Thanks to sunil, Akshay Gehi. Convert Collections4 to java.util.function. #8. Fixes BEANUTILS-527. Thanks to Melloware, Matt Sicker, Gary Gregory. New converters for UUID, URI, and Path #10. Fixes BEANUTILS-528. Thanks to Melloware, Matt Sicker, Gary Gregory. New converters for Java 8 Time classes #13. Fixes BEANUTILS-530. Thanks to Melloware, Matt Sicker, Gary Gregory. Log at the debug level instead of info. Fixes BEANUTILS-529. Thanks to Gary Gregory. Fix typos; fix error in Javadoc; performance fix; fix code smells #25. Fixes BEANUTILS-537. Thanks to XenoAmess, Gary Gregory. Migrate to JUnit 5 #93, #283, #284, #285, #287. Thanks to SethFalco, Steve Bosman, Gary Gregory. Fix SpotBugs [ERROR] Medium: org.apache.commons.beanutils2.BasicDynaClass.constructorTypes should be both final and package protected [org.apache.commons.beanutils2.BasicDynaClass] At BasicDynaClass.java:[line 95] MS_FINAL_PKGPROTECT. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: Load of known null value in org.apache.commons.beanutils2.converters.AbstractConverter.convert(Class, Object) [org.apache.commons.beanutils2.converters.AbstractConverter] At AbstractConverter.java:[line 163] NP_LOAD_OF_KNOWN_NULL_VALUE. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: Unused public or protected field: org.apache.commons.beanutils2.WrapDynaClass.descriptors [org.apache.commons.beanutils2.WrapDynaClass] In WrapDynaClass.java UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: org.apache.commons.beanutils2.converters.ArrayConverter.setAllowedChars(char[]) may expose internal representation by storing an externally mutable object into ArrayConverter.allowedChars [org.apache.commons.beanutils2.converters.ArrayConverter] At ArrayConverter.java:[line 202] EI_EXPOSE_REP2. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: org.apache.commons.beanutils2.converters.DateTimeConverter.setPatterns(String[]) may expose internal representation by storing an externally mutable object into DateTimeConverter.patterns [org.apache.commons.beanutils2.converters.DateTimeConverter] At DateTimeConverter.java:[line 204] EI_EXPOSE_REP2. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: org.apache.commons.beanutils2.ConversionException.getCause() may expose internal representation by returning ConversionException.cause [org.apache.commons.beanutils2.ConversionException] At ConversionException.java:[line 83] EI_EXPOSE_REP. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: new org.apache.commons.beanutils2.ConversionException(String, Throwable) may expose internal representation by storing an externally mutable object into ConversionException.cause [org.apache.commons.beanutils2.ConversionException] At ConversionException.java:[line 53] EI_EXPOSE_REP2. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: new org.apache.commons.beanutils2.ConversionException(Throwable) may expose internal representation by storing an externally mutable object into ConversionException.cause [org.apache.commons.beanutils2.ConversionException] At ConversionException.java:[line 65] EI_EXPOSE_REP2. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: org.apache.commons.beanutils2.converters.DateTimeConverter.getPatterns() may expose internal representation by returning DateTimeConverter.patterns [org.apache.commons.beanutils2.converters.DateTimeConverter] At DateTimeConverter.java:[line 189] EI_EXPOSE_REP. Thanks to Gary Gregory. Fix SpotBugs [ERROR] Medium: org.apache.commons.beanutils2.WrapDynaClass.getDynaProperties() may expose internal representation by returning WrapDynaClass.properties [org.apache.commons.beanutils2.WrapDynaClass] At WrapDynaClass.java:[line 172] EI_EXPOSE_REP. Thanks to Gary Gregory. Replace Commons Collections Test Framework 3.2.2 with 4.5.0-M3 #40. Thanks to Melloware, sebbASF, Gary Gregory, Michal Landsman. Provide error index in ConversionException message in DateTimeConverter.parse(Class, Class, String, DateFormat). Thanks to Gary Gregory. Avoid possible NPE in DateTimeConverter.parse(Class, Class, String). Thanks to Gary Gregory. Annotate Converter with @FunctionalInterface. Thanks to Claude Warren, Gary Gregory. Fix JDK 21 CI failure due to locale changes #201. Fixes BEANUTILS-564. Thanks to SingingBush. Fix warnings and To-Dos #92. Thanks to Seth Falco. Replace internal use of Locale.ENGLISH with Locale.ROOT. Thanks to Gary Gregory. New converter for Enum. Fixes BEANUTILS-346. Thanks to Melloware. Add and use ConversionException.format(String, Object...). Thanks to Dependabot, Gary Gregory. Add Converters for additional types: Color, Dimension, InetAddress, Locale, Pattern, Point #47. Thanks to Seth Falco, Gary Gregory. Bump actions/cache from 2 to 3.0.11 #77, #89, #103, #111. #137, #141. Thanks to Dependabot, Gary Gregory. Update actions/checkout from 2.3.1 to 3.0.2 #33, #108. Thanks to Dependabot, Gary Gregory. Update actions/setup-java from 1.4.0 to 3.6.0 #35, #114, #144. Thanks to Dependabot, Gary Gregory. Bump actions/upload-artifact from 3.1.0 to 3.1.1 #143. Thanks to Dependabot. Bump Apache Commons Collections from 4.3 to 4.4. Fixes BEANUTILS-522. Thanks to Gary Gregory. Bump Java from 6 to 7. Fixes BEANUTILS-504. Thanks to Gary Gregory. Bump Java from 7 to 8. Fixes BEANUTILS-515. Thanks to Gary Gregory. Bump junit-jupiter from 5.7.2 to 5.9.1 #113, #126, #134. Thanks to Dependabot. Bump JUnit from 4 to 5.9.1 vintage, #78, #112, #127, #136. Thanks to Gary Gregory, Dependabot. Bump Jacoco from 0.8.4 to 0.8.8. Thanks to Gary Gregory. Bump JApiCmp from 0.12.0 to 0.17.1, #46, #110, #130, #146. Thanks to Gary Gregory, Dependabot. Bump maven-surefire-plugin from 2.22.1 to 3.0.0-M7, #116, #122. Thanks to Gary Gregory, Dependabot. Bump maven-checkstyle-plugin from 3.0.0 to 3.2.0, #76, #129. Thanks to Gary Gregory, Dependabot. Bump maven-pmd-plugin from 3.12.0 to 3.19.0, #120, #128, #131. Thanks to Gary Gregory, Dependabot. Bump BC version from 1.9.3 to 1.9.4. Thanks to Gary Gregory. Bump org.apache.commons:commons-parent from 50 to 74 #229, #245, #254, #264, #274, #279. Thanks to Gary Gregory, Dependabot. Bump biz.aQute.bndlib from 5.1.0 to 6.4.1 #29, #45, #79, #109, #119, #121, #147, #175. Thanks to Dependabot. Jacoco 0.8.6 for JDK15 support #55. Thanks to melloware. Updated URLConverterTestCase to run without Internet access #50. Thanks to SethFalco. Don't initialize variables to defaults #71. Thanks to Arturo Bernal. Bump spotbugs-maven-plugin from 4.5.3.0 to 4.6.0.0. Thanks to Dependabot. Bump spotbugs from 4.5.3 to 4.6.0. Thanks to Dependabot. Bump org.apache.commons:commons-lang3 from 3.12.0 to 3.17.0 #263, #269, #280. Thanks to Gary Gregory, Dependabot. Bump commons-logging:commons-logging from 1.2 to 1.3.4 #226, #246, #259, #275. Thanks to Gary Gregory, Dependabot. Bump org.apache.commons:commons-parent from 74 to 78 #291, #295, #299, #306. Thanks to Gary Gregory, Dependabot. Removed BeanUtilsBean2, use BeanUtilsBean. BeanUtilsBean2 functionality is now in BeanUtilsBean. Previous BeanUtilsBean functionality for those methods is no longer supported. Thanks to Gary Gregory, Niall Pemberton. Removed ConvertUtilsBean2, use ConvertUtilsBean. ConvertUtilsBean2 functionality is now in ConvertUtilsBean. Previous ConvertUtilsBean functionality for those methods is no longer supported. Thanks to Gary Gregory, Niall Pemberton. Do not implement Serializable. Thanks to Gary Gregory. FluentPropertyBeanIntrospector concurrency issue (backport to 1.X) #325. Fixes BEANUTILS-541. Thanks to Sergey Chernov. Javadoc is missing its Overview page. Thanks to Gary Gregory. Remove -nouses directive from maven-bundle-plugin. OSGi package imports now state 'uses' definitions for package imports, this doesn't affect JPMS (from org.apache.commons:commons-parent:80). Thanks to Gary Gregory. Bump org.apache.commons:commons-parent from 78 to 81. Thanks to Gary Gregory. FluentPropertyBeanIntrospector caches corrupted writeMethod (backport to 1.x) #69. Fixes BEANUTILS-541. Thanks to Sergey Chernov. Replace internal use of Locale.ENGLISH with Locale.ROOT. Thanks to Gary Gregory. Replace Maven CLIRR plugin with JApiCmp. Thanks to Gary Gregory. Port to Java 1.4 Throwable APIs (!). Thanks to Gary Gregory. Fix Javadoc generation on Java 8, 17, and 21. Thanks to Gary Gregory. AbstractArrayConverter.parseElements(String) now returns a List<String> instead of a raw List. Thanks to Gary Gregory. Bump org.apache.commons:commons-parent from 47 to 78. Thanks to Gary Gregory. Bump Java requirement from Java 6 to 8. Thanks to Gary Gregory. Bump junit:junit from 4.12 to 4.13.2. Thanks to Gary Gregory. Bump JUnit from 4.x to 5.x \"vintage\". Thanks to Gary Gregory. Bump commons-logging:commons-logging from 1.2 to 1.3.4. Thanks to Gary Gregory. Deprecate BeanUtilsBean.initCause(Throwable, Throwable) for removal, use Throwable.initCause(Throwable). Thanks to Gary Gregory. Deprecate BeanUtils.initCause(Throwable, Throwable) for removal, use Throwable.initCause(Throwable). Thanks to Gary Gregory. BeanUtils mitigation of CVE-2014-0114. (CVE-2019-10086 for commons-beanutils). Fixes BEANUTILS-520. Thanks to Melloware. Update dependency from JUnit 3.8.1 to 4.12. Fixes BEANUTILS-433. Thanks to Benedikt Ritter, Gary Gregory. Indexed List Setters no longer work. Fixes BEANUTILS-465. Thanks to Daniel Atallah. Update commons-logging from 1.1.1 to 1.2. Fixes BEANUTILS-469. Thanks to Gary Gregory. Precision lost when converting BigDecimal. Fixes BEANUTILS-470. Thanks to Tommy Tynjä. FluentPropertyBeanIntrospector does not use the same naming algorithm as DefaultBeanIntrospector. Fixes BEANUTILS-474. Thanks to Michael Grove. Changed log level of warnings from FluentPropertyBeanIntrospector; exceptions are no longer logged with level WARN. Fixes BEANUTILS-477. Update commons-collections from 3.2.1 to 3.2.2. (CVE-2015-4852). Fixes BEANUTILS-482. Thanks to Gary Gregory. Update Java requirement from Java 5 to 6. Fixes BEANUTILS-490. Thanks to Gary Gregory. IndexedPropertyDescriptor not supported for List in Java 8. Fixes BEANUTILS-492. Thanks to Stian Soiland-Reyes. Exception when setting indexed properties: \"Default conversion to ArrayList failed\". Fixes BEANUTILS-493. Thanks to Bernhard Seebass. DateConverterTestBase fails on M/d/yy in Java 9. Fixes BEANUTILS-495. Thanks to Stian Soiland-Reyes. testGetDescriptorInvalidBoolean fails on Java 9. Fixes BEANUTILS-496. Thanks to Stian Soiland-Reyes. BaseLocaleConverter.checkConversionResult() fails with ConversionException when result is null when it should not. Fixes BEANUTILS-458. Thanks to Manuel Dominguez Sarmiento. Write methods for PropertyDescriptors created during custom introspection are lost. Fixes BEANUTILS-456. WrapDynaBeans always use the default PropertyUtilsBean instance. Fixes BEANUTILS-455. LocaleConverters do not take the target type into account. Fixes BEANUTILS-449. LocaleConverters do not check their default value. Fixes BEANUTILS-448. LazyDynaList.toArray() is not conform to the contract defined by the Collection interface. Fixes BEANUTILS-447. Some of the converters ignore the passed in target type. Fixes BEANUTILS-446. Converters can return an invalid result object if a default value is set. Fixes BEANUTILS-445. Replace UnmodifiableSet.decorate with Collections.unModifiableSet. Fixes BEANUTILS-441. Thanks to Samir Kerroumi. BeanUtilsBean.setProperty throws IllegalArgumentException if getter of nested property returns null. Fixes BEANUTILS-411. Thanks to Marcus Zander. Delete trailing white spaces and white spaces on empty lines from all files. Fixes BEANUTILS-429. Configure Checkstyle to check for trailing white spaces and white spaces on empty lines. Fixes BEANUTILS-427. BeanMap methods should initialize the root cause of exceptions that are thrown when running on JDK 1.4+. Fixes BEANUTILS-380. Thanks to Brendan Nolan. BeanMap does not work in osgi (fixed by BEANUTILS-379). Fixes BEANUTILS-378. Thanks to Christian Schneider. MethodUtils getMatchingAccessibleMethod() does not correctly handle inheritance and method overloading. Fixes BEANUTILS-381. Thanks to Todd Nine. MethodUtils is not thread safe because WeakFastHashMap which uses WeakHashMap is not thread-safe (duplicate of BEANUTILS-318 which was not fixed properly in BeanUtils 1.8.0). Fixes BEANUTILS-373. Thanks to Andrew Sunde. Add constructors which have useColumnLabel parameter to ResultSetDynaClass and RowSetDynaClass. Fixes BEANUTILS-371. Thanks to David Tonhofer. NullPointerException in BeanUtilsBean .setProperty(). Fixes BEANUTILS-368. Thanks to Peter Fassev. NPE in LazyDynaList. Fixes BEANUTILS-300. Thanks to Henri and Sebb. JDBCDynaClass throws class not found exception under java6. Fixes BEANUTILS-327. Thanks to Sascha Riemann. MappedPropertyDescriptor#reLoadClass() possible NPE / odd code; also swallows Throwable. Fixes BEANUTILS-336. Thanks to Sebb. BeanUtilsBean.setProperty throws IllegalArgumentException if value is null. Fixes BEANUTILS-339. Thanks to Alan Escreet. BeanUtilsBean.setProperty does not handle some kind of nested properties. Fixes BEANUTILS-345. Thanks to Simone Riccucci. MappedPropertyDescriptor throws an exception after method reference has been garbage collected. Fixes BEANUTILS-347. Thanks to Eickvonder. copyProperties throws NullPointerException if an IllegalArgumentException is thrown due to a null value parameter for a primitive. Fixes BEANUTILS-349. Thanks to Eivind Tagseth. FloatLocaleConverter cannot parse 0. Fixes BEANUTILS-351. Thanks to Lucian Chirita. Type in BooleanConverter: \"Cna't convert value\". Fixes BEANUTILS-354. Thanks to Anders Wallgren. Avoid calling setAccessible() if not needed. Fixes BEANUTILS-333. Thanks to Lukasz Lenart. Method createDynaProperty of JDBCDynaClass should first look for column label instead of column name in ResultSetMetadata object.. Fixes BEANUTILS-344. Thanks to Viral. change visibility of method \"evaluateValue\" belongs to the class BeanPropertyValueEqualsPredicate to \"protected\". Fixes BEANUTILS-350. Thanks to rodrigo hernandez. Allow access to non public class's public methods from a public sub-classes. Fixes BEANUTILS-265. Thanks to Tom Schindl and Romain Muller. Circular Reference on WeakHashMap. Fixes BEANUTILS-291. Thanks to Clebert Suconic. BeanUtilsBean.setProperty() does not support nested map. Fixes BEANUTILS-294. Thanks to Stephen Leung. Unnecessary Garbage Objects in Class PropertyUtilsBean. Fixes BEANUTILS-295. Thanks to Stefan Wohlgemuth. ConvertingWrapDynaBean hides cause exceptions. Fixes BEANUTILS-297. Thanks to Alex Tkachev. MethodUtils.getAccessibleMethod(Method method) could not find right public method. Fixes BEANUTILS-298. Thanks to Roman Mukhin. NPE in ArrayConverter when converting a non-quoted string with underscores to a string array. Fixes BEANUTILS-302. Thanks to Martin Bartlett. LocaleConvertUtilsBean.convert throws NPE on null Locale when debug logging is enabled. Fixes BEANUTILS-306. Thanks to Lucian Chirita. Fix WeakHashMap is not thread safe in MethodUtils using new FastWeakHashMap. Fixes BEANUTILS-318. Thanks to Sylvain Legault. PropertyUtils.getPropertyType fails for DynaBeans contained within a normal bean. Fixes BEANUTILS-319. Thanks to Erik Erskine. Iterating by a Map' key/value pairs in BeanUtilsBean and PropertyUtilsBean. Fixes BEANUTILS-326. Thanks to Vladimir Orlov. General Converter implementation improvements: New AbstractConverter which provides a basic structure for Converter implementations and new NumberConverter implementation. Fixes BEANUTILS-258. Better implementation of SqlDateConverter. Modified SqlDateConverter, SqlTimeConverter and SqlTimestampConverter to accept java.util.Date and Calendar object instances. Added tests. Fixes BEANUTILS-239. Thanks to Rafael Afonso. Support Mapped property inside a mapped property. Fixes BEANUTILS-43. Thanks to Firepica and Thomas Jacob. Support Indexed property inside a mapped property. Fixes BEANUTILS-113. Thanks to Firepica and Ludwig Wensauer. Support Arrays with multiple dimension. Fixes BEANUTILS-247. Thanks to Christian Poitras, Thomas Jacob and scott sadlo. Include bean class in the message of PropertyUtilsBean exceptions. Fixes BEANUTILS-207. Thanks to Erik Meade. Provide better error message for \"argument type mismatch\". Fixes BEANUTILS-224. Thanks to Ralf Hauser. Improved messages for unknown properties. Fixes BEANUTILS-30. Thanks to Barry Kaplan. MethodUtils.invoke for static methods. Fixes BEANUTILS-193. Thanks to Nestor Boscan. Log or throw exception in PropertyUtilsBean. Added mechanism to initialize the \"cause\" on an Exception using reflection for JDK 1.4+ (copied from Commons HttpClient). Fixes BEANUTILS-266. Thanks to Brian Ewins and Commons HttpClient. Provide a Map decorator for a DynaBean (enables DynaBean to be used with other teechnologies such as JSTL). Fixes BEANUTILS-185. Thanks to Gabriel Belingueres. Implement equals() and hashCode() methods for DynaProperty. Fixes BEANUTILS-233. Thanks to Russell. BeanUtils's tests fail to compile under JDK 1.6. Fixes BEANUTILS-243. Thanks to Henri Yandell. Lock in BeanUtilsBean.getInstance(. Fixes BEANUTILS-49. Thanks to Jesper Richter-Reichhelm. Beanutils's describe() method cannot determine reader methods for anonymous class. Fixes BEANUTILS-157. Thanks to Thorbjorn Ravn Andersen. Added warning about describe behavior to the javadocs. Fixes BEANUTILS-158. BeanUtilsBean's setProperty() does not convert objects using custom converters properly. Fixes BEANUTILS-249. Thanks to Brad. Fix javadoc - IllegalArgumentException in BeanUtils.copyProperties when property types don't match. Fixes BEANUTILS-17. Thanks to Matthew Sgarlata and Corey Scott. Writing to a mapped property requires a setter for a map, but never uses it. Fixes BEANUTILS-68. Thanks to Dmitry Platonoff. BeanUtilsBean.getArrayProperty() does not use ConvertUtils. Fixes BEANUTILS-110. Thanks to Etienne Bernard. MappedPropertyDescriptor: Add comments re: * use of static variable safe in shared classloader * memory leak possible on webapp undeploy. Add test for MappedPropertyDescriptor with different types on get/set methods. Fixes BEANUTILS-163. LocaleBeanUtils setProperty does not work on nested property. Fixes BEANUTILS-140. Thanks to Marco La Porta. Package scope implementation of a public interface for mapped property fails (fixed by changes to MappedPropertyDescriptor associated with BEANUTILS-6). Fixes BEANUTILS-87. Thanks to YOKOTA Takehiko. PropertyUtils incosistency - can't use \"dot\" in mapped properties for setProperty or getPropertyDescriptor (fixed by the changes for BEANUTILS-259 Plugable Property Name Expression Resolver). Fixes BEANUTILS-33. Thanks to Eoin Curran. Public methods overridden in anonymous or private subclasses are not recognized by PropertyUtils. Fixes BEANUTILS-273. Thanks to Marcelo Liberato. PropertyUtilsBean's isReadable() / isWriteable() always return false for mapped properties. Fixes BEANUTILS-88. Thanks to Chuck Daniels. PropertyUtilsBean isReadable() and isWriteable() methods do not work correctly for WrapDynaBean. Fixes BEANUTILS-61. Thanks to Brian Ewins. PropertyUtils.isReadable() and PropertyUtils.getProperty() not consistent. Fixes BEANUTILS-18. Thanks to Maarten Coene. PropertyUtilsBean.copyProperties does not catch NoSuchMethodException. Fixes BEANUTILS-92. Thanks to Will Pugh. PropertyUtilsBean.getIndexedProperty()'s javadoc should indicate IndexOutOufBoundsException can be thrown rather than just ArrayIndexOutOufBoundsException. Fixes BEANUTILS-256. Thanks to Torsten Feig. Create new methods getPropertyOfMapBean and setPropertyOfMapBean that the existing setNestedProperty and getNestedProperty methods now call when they discover the bean they are accessing implements Map. This makes it much easier for users to subclass and customize this behavior of PropertyUtilsBean, eg in order to restore pre-1.5 behavior. This patch also causes an exception to be thrown when the propertyName passed to getPropertyOfMapBean or setPropertyOfMapBean has MAPPED_DELIM or INDEXED_DELIM chars in it. This never worked as expected before (the whole string was treated literally as the propertyName), so throwing an exception here should not break any existing code. It should be of help to future developers who make this mistake though... Fixes BEANUTILS-162. Ignore simple properties on java.util.Map objects - Map methods are always used on a Map object. Reverts BEANUTILS-144. See BEANUTILS-162 for discussion. Correct getPropertyDescriptor() and setNestedProperty() methods to throw a NestedNullException rather than just IllegalArgumentException (consistent with the getNestedProperty() method). Fixes BEANUTILS-262. BooleanArrayConverter: Use new AbstractArrayConverter constructors and Convert strings to booleans by invoking a BooleanConverter rather than hard-wiring the conversion. BooleanConverter: Add facility for user to override the default set of true and false string definitions and provide ability to pass special NO_DEFAULT object as the \"defaultValue\" constructor parameter. Thanks to Eric Rizzo. AbstractArrayConverter: provide ability to pass special NO_DEFAULT object as the \"defaultValue\" constructor parameter. DecimalLocaleConverter and subClasses never throw a ConversionException. Fixes BEANUTILS-78. Thanks to Stefan Lotscher. FloatLocaleConverter cannot parse negative values. Fixes BEANUTILS-44. Thanks to Paul Jenkins. DateLocaleConverter does not always throw an Exception for invalid dates. Fixes BEANUTILS-271. Thanks to Nico Hoogervorst. Don't try parsing values that are already Dates/Numbers in Date/Number locale Converters. Fixes BEANUTILS-288. WrapDynaClass: Added comment re potential memory leak, and safety when using shared classloader WrapDynaBeanTestCase failing with jikes/kaffe because of static List in TestBean. Fixes BEANUTILS-36. Thanks to Jack. Misleading error message in ConvertingWrapDynaBean. Fixes BEANUTILS-23. Thanks to Aslak Hellesoy. LazyDynaBean: don't try and instantiate properties of type Object.class. Fixes BEANUTILS-24. Thanks to Roi Ares. JDBCDynaClass \"lowerCase\" option causes problems in RowSetDynaClass and ResultSetIterator. Fixes BEANUTILS-289. RowSetDynaClass fails to copy ResultSet to DynaBean with Oracle 10g JDBC driver. Fixes BEANUTILS-142. Thanks to Li Zhang. Fix BeanComparator throws wrong exception and hides cause. Fixes BEANUTILS-241. Thanks to Chris Hyzer. Deprecate the public static defaultTransformers HashMap and make it unmodifiable. Fixes BEANUTILS-112. Thanks to Simon Kitching. Fixi the build to include all the tests and change the build.properties.sample so it's easier to use for the default maven user (ie: it looks by default in the .maven repository). Fixes BEANUTILS-287. Improvements to maven build. Fixes BEANUTILS-217. Thanks to Carlos Sanchez. Add Implementation-Vendor-Id entry to jar's manifest. Fixes BEANUTILS-54. Thanks to Pascal Grange. Resolve compiler warnings: Unused imports, un-read local variables, field hiding, empty block, improperly used statics, uncessary semi colons, unnecessary casts. Fixes BEANUTILS-121. Thanks to Chris Tilden. Replace use of static Log objects with instance or local variables. It isn't safe to use static Log objects in code that might be deployed via a shared classloader as they will bind to the Log object from the context classloader in use when the first use happens. BeanMap: Fix internal variable to not include non-existant write methods. - ported from Commons Collections. Fixes COLLECTIONS-22. Thanks to Dimiter Dimitrov. Change MethodUtils to make getMatchingAccessibleMethod() method selection more rational. Thanks to Steve Cohen."
    }
]