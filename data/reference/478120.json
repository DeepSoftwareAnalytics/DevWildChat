[
    {
        "link": "https://learn.microsoft.com/en-us/power-bi/visuals/power-bi-visualization-slicers",
        "document": "Suppose you want your report readers to be able to look at overall sales metrics, but also highlight performance for individual district managers and different time frames. You could create separate reports or comparative charts. You could add filters in the Filters pane. Or you could use slicers. Slicers are another way of filtering. They're displayed on the report page, and narrow the portion of the semantic model that's shown in the other report visualizations.\n\nThis article walks through creating and formatting a basic slicer, using the free Retail Analysis Sample. It also covers controlling which visuals are affected by a slicer, syncing with slicers on other pages, and filtering and formatting slicers.\n\nThese other articles explain how to make specific types of slicers:\n\nWhen to use a slicer\n\nSlicers are a great choice when you want to:\n• Display commonly used or important filters on the report canvas for easier access.\n• Make it easier to see the current filtered state without having to open a drop-down list.\n• Filter by columns that are unneeded and hidden in the data tables.\n• Create more focused reports by putting slicers next to important visuals.\n• None With the new slicer selected, from the Fields pane, expand the District table and select DM to populate the slicer.\n• None Resize and drag the elements on the canvas to make room for the slicer. If you resize the slicer too small, its items are cut off. The new slicer is now populated with a list of district manager names and their selection boxes.\n• None Select names on the slicer and notice the effects on the other visualizations on the page. Select names again to deselect them, or hold down the Ctrl key to select more than one name. Selecting all names has the same effect as selecting none.\n\nControl which page visuals are affected by slicers\n\nBy default, slicers on report pages affect all the other visualizations on that page, including each other. As you choose values in the list and date slicers that you just created, notice the effects on the other visualizations. The filtered data is an intersection of the values selected in both slicers.\n\nUse visual interactions to exclude some page visualizations from being affected by others. For example, in the Retail Analysis sample on the Overview page, the Total Sales Variance by FiscalMonth and District Manager chart shows overall comparative data for district managers by month, which is information that you may want to keep visible. Use visual interactions to keep slicer selections from filtering this chart.\n• Select the None option in the filter control above the Total Sales Variance by FiscalMonth and District Manager chart to stop the District Manager slicer from filtering it.\n\nFor more information about editing interactions, see Change how visuals interact in a Power BI report.\n\nSync and use slicers on other pages\n\nYou can sync a slicer and use it on any or all pages in a report.\n\nIn the current report, the District Monthly Sales page has a District Manager (or DM) slicer, but what if we also wanted that slicer on the New Stores page? The New Stores page has a slicer, but it provides only Store Name information. With the Sync slicers pane, you can sync the District Manager slicer to these pages, so that slicer selections on any page affect visualizations on all three pages.\n• None On the District Monthly Sales page of the report, select the District Manager slicer. Because you've already created a District Manager slicer on the Overview page, the Sync slicers pane appears as follows:\n• None In the Sync column of the Sync slicers pane, select the Overview, District Monthly Sales, and New Stores pages. This selection causes the District Monthly Sales slicer to sync across these three pages.\n• None In the Visible column of the Sync slicers pane, select the New Stores page. This selection causes the District Monthly Sales slicer to be visible in these three pages. The Sync slicers pane now appears as follows:\n• None Observe the effects of syncing the slicer and making it visible on the other pages. On the District Monthly Sales page, notice that the District Manager slicer now shows the same selections as on the Overview page. On the New Stores page, the District Manager slicer is now visible and it selections affect the selections that are visible in the Store Name slicer. Although the slicer initially appears on the synced pages at the same size and position as on the original page, you can move, resize, and format synced slicers on the various pages independently. If you sync a slicer to a page but don't make it visible on that page, slicer selections made on the other pages still filter the data on the page.\n\nYou can also sync two or more separate slicers. Syncing slicers is useful when working with composite models, as you might want to make the same selection across sources without relying on cross-source group relationships. To sync two or more separate slicers, you mark them as being part of a group.\n• None Make sure the Sync slicers pane is visible by selecting it from the View menu.\n• None Select one of the slicers that you want in the group. In the Sync slicers pane, expand Advanced options, and enter a name for the group. You can name it anything you want.\n• None Then select another slicer you want to sync with the first, and enter the same name in the group name box. Be sure to enter it exactly the same.\n• None Make sure to select either Sync field changes to other slicers, Sync filter changes to other slicers or both depending on your scenario.\n• If you just want to keep the slicers in sync so filters set by the slicers are kept in sync, select Sync filter changes to other slicers.\n• If you also want to make sure that any changes you make to the field on which the slicers are based get synced across the group, select Sync field changes to other slicers.\n• None Test that the sync works the way you want by changing the selection in one of the slicers. Observe that it gets updated in the other slicer in the group.\n\nYou can apply visual-level filters to slicers to reduce the list of values that are displayed in the slicer. For example you might filter out blank values from a list slicer, or filter out certain dates from a range slicer. When you filter the slicer, it only affects the values that are shown in the slicer, not the filter that the slicer applies to other visuals when you make a selection. For example, let's say you apply a filter to a range slicer to only show certain dates. The selection on the slicer will only show the first and last dates from that range, but you would still see other dates in your other visuals. Once you change the selected range in the slicer, you'll see the other visuals update. Clearing the slicer would show all the dates again.\n\nFor more information on visual-level filters, see Filter types.\n\nDifferent formatting options are available, depending on the slicer type. For Style, Vertical list is the default. Select Tile to produce a slicer with tiles or buttons arranged horizontally, and scroll arrows to access items that don't fit in the slicer. By using the Tile style with Responsive layout, and Background coloring, you can produce buttons or tiles rather than standard list items, and make slicer items resize to fit different screen sizes and layouts.\n• None Select the \"District Manager\" slicer, and select the Format icon in the Visualizations pane.\n• None Resize the slicer to be wide but not tall.\n• None In the Format pane, under Visual, expand Slicer settings > Options, and select Tile. Slicer list items are sorted in ascending order, by default. To reverse the sort order to descending, select the ellipsis (...) in the top right corner of the slicer > Sort axis > Sort descending.\n• None Expand Slicer header and change the Title text to \"District Manager\".\n• None Expand Values and select a Background Color. This color is one of the theme colors, .\n• With the Tile style, deselected items show the chosen text and background colors. Selected items use the system default, usually a black background with white text.\n• With the Vertical list style, items always show the selected colors, and selected check boxes are always black.\n\nAfter you select the Tile style, you can turn On the Responsive layout to change the size and arrangement of slicer items according to the view screen and slicer size.\n\nResponsive layout is only available for tile slicers and numeric range slicers, not for vertical list slicers. For more information about responsive layouts, see Create a responsive slicer you can resize.\n\nFor range slicers, responsive formatting changes the style of the slider and provides more flexible resizing. Read more about numeric range slicers.\n• None The Show \"Select all\" option is Off by default. Under Selection, turn Show \"Select all\" option to On to add a Select all item to the slicer. With it, you can select or deselect all items as once. When all items are selected, selecting one item deselects it, allowing an is-not type of filter.\n• None Single select is Off by default. Selecting an item selects it. When you hold down the Ctrl key, you can select multiple items. Selecting an item again deselects it. When you turn Single select to On, you can't select more than one item at a time. In vertical list slicers, the check boxes become radio buttons.\n\nThe Title text in Slicer header is On by default. This selection shows the data field name at the top of the slicer. You can edit the title text, which is especially useful for hierarchy slicers. See Change the title text in the article \"Add multiple fields to a hierarchy slicer\" for details.\n\nTitle on the General tab is another option. It's Off by default.\n\nOther formatting options are Off by default. Turn On these options to control them:\n• None Lock aspect: Keep the relative height and width of the slicer if it's resized. Under General > Properties > Size.\n• None Background: Add a background color to the slicer and set its transparency. Under General > Effects.\n• None Border: Add a border around the slicer and set its color. Under General > Effects. There's also a Border option on the Visual tab. It adds a border either over, under, or next to each option in the slicer. It's separate from and unaffected by the General settings.\n• None Shadow: Add a drop shadow to the slider. Under General > Effects.\n\nFor more about slicers, see the following articles:"
    },
    {
        "link": "https://learn.microsoft.com/en-us/power-bi/guidance/relationships-bidirectional-filtering",
        "document": "This article targets you as a data modeler who works with Power BI Desktop. It provides you with guidance on when to create bi-directional model relationships. A bi-directional relationship is one that filters in both directions.\n\nAn introduction to model relationships is not covered in this article. If you're not completely familiar with relationships, their properties or how to configure them, we recommend that you first read the Model relationships in Power BI Desktop article. It's also important that you have an understanding of star schema design. For more information, see Understand star schema and the importance for Power BI.\n\nGenerally, we recommend that you minimize the use of bi-directional relationships. That's because they can negatively impact on model query performance, and possibly deliver confusing experiences for your report users.\n\nHowever, there are three scenarios when bi-directional filtering can solve specific requirements:\n\nBi-directional relationships play an important role when creating the following two special model relationship types:\n• One-to-one: All one-to-one relationships must be bi-directional—it isn't possible to configure otherwise. Generally, we don't recommend creating these types of relationships. For a complete discussion and alternative design patterns, see One-to-one relationship guidance.\n• Many-to-many: When relating two dimension tables, a bridging table is required. A bi-directional filter is required to ensure filters propagate across the bridging table. For more information, see Many-to-many relationship guidance.\n\nBi-directional relationships can deliver slicers that limit options to where data exists. (If you're familiar with Excel PivotTables and slicers, it's the default behavior when sourcing data from a Power BI semantic model or an Analysis Services model.) To help explain what it means, first consider the following model diagram.\n\nThe first table is named ., and it contains three columns: , , and . The second table is named , and it contains three columns: , , and . The third table is named , and it contains four columns: , , , and . The and tables are dimension tables, and each has a one-to-many relationship to the table. Each relationship filters in a single direction.\n\nTo help describe how bi-directional filtering works, the model diagram has been modified to reveal the table rows. All examples in this article are based on this data.\n\nThe row details for the three tables are described in the following bulleted list:\n• The table has two rows:\n• The table has three rows:\n• The table has three rows:\n\nNow consider the following report page.\n\nThe page consists of two slicers and a card visual. The first slicer is based on the field, and it has two options: Australia and United States. It currently slices by Australia. The second slicer is based on the field, and it has three options: Hat, Jeans, and T-shirt. No items are selected (meaning no products are filtered). The card visual displays a quantity of 30.\n\nWhen report users slice by Australia, you might want to limit the product slicer to display options where data relates to Australian sales. That's what's meant by showing slicer options \"with data\". You can achieve this behavior by setting the relationship between the and tables to filter in both directions.\n\nThe product slicer now lists a single option: T-shirt. This option represents the only product sold to Australian customers.\n\nFirst, we recommend that you consider carefully whether this design works for your report users. Some report users find the experience confusing because they don't understand why slicer options dynamically appear or disappear when they interact with other slicers.\n\nIf you do decide to show slicer options \"with data\", we don't recommend you set up a bi-directional relationships. Bi-directional relationships require more processing and so they can negatively impact on query performance—especially as the number of bi-directional relationships in the model increases.\n\nThere's a better way to achieve the same result: Instead of using bi-directional filters, you can apply a visual-level filter to the product slicer itself.\n\nLet's now consider that the relationship between the and tables no longer filters in both directions. And, the following measure definition has been added to the table.\n\nTo show the product slicer options \"with data\", it simply needs to be filtered by the measure by using the \"is not blank\" condition.\n\nA different scenario involving bi-directional relationships treats a fact table like a bridging table. This way, it supports analyzing dimension table data within the filter context of a different dimension table.\n\nUsing the example model in this article, consider how the following questions can be answered:\n• How many colors were sold to Australian customers?\n\nBoth questions can be answered without summarizing data in the bridging fact table. They do, however, require that filters propagate from one dimension table to the other. When filters propagate via the fact table, summarization of dimension table columns can be achieved using the DISTINCTCOUNT DAX function—and possibly the MIN and MAX DAX functions.\n\nAs the fact table behaves like a bridging table, you can apply the many-to-many relationship guidance to relate two dimension tables. It will require setting up at least one relationship to filter in both directions. For more information, see Many-to-many relationship guidance.\n\nHowever, as already described in this article, this design will likely result in a negative impact on performance, and the user experience consequences related to slicer options \"with data\". So, we recommend that you activate bi-directional filtering in a measure definition by using the CROSSFILTER DAX function instead. You can use the CROSSFILTER function to modify filter directions—or even disable the relationship—during the evaluation of an expression.\n\nConsider the following measure definition added to the table. In this example, the model relationship between the and tables has been set up to filter in a single direction.\n\nDuring the evaluation of the measure, the relationship between the and tables filters in both directions.\n\nThe following table visual present statistics for each product sold. The column is simply the sum of quantity values. The column represents the distinct count of country-region values of all customers who have purchased the product.\n\nFor more information related to this article, check out the following resources:\n• Understand star schema and the importance for Power BI\n• Questions? Try asking the Fabric Community"
    },
    {
        "link": "https://community.powerbi.com/t5/Desktop/Need-a-little-help-with-Slicers-and-Relationships/td-p/1376186",
        "document": "Issue: My Power of BI Desktop Slicer is showing all Users in the entire system, rather than only showing the Users that are associated with the filtered Opportunity data.\n• I have an Opportunity table with a OwnerID.\n• I have created a one way 'One to Many' relationship from UserID to OwnerID.\n\n(I have also tried a 'Many to One' relationship from OwnerID to UserID)\n• I have a page filter (and visual) that only show opportunities from this Quarter.\n• I have a Slicer with the User table's 'Full Name' in the Slicer Field.\n\nThe problem is that the Slicer shows all names in the table instead of the handful of people that own the current list of filtered Opportunities.\n\nWhat do I need to do to make that Slicer only show User's that are related to the filtered Opportunities on the page?"
    },
    {
        "link": "https://okviz.com/blog/design-guide-for-power-bi-slicers-and-filters",
        "document": "Power BI reports provide a level of interactivity for users that go beyond traditional, static reporting. Compared to more conventional Business Intelligence reports, such as Paginated Reports, Power BI’s report canvas can be much more dynamic. Power BI does not simply rely on outside parameter selections to apply filters, which then impact how visuals render. Instead, Power BI provides more advanced interactions that empower viewers to make meaningful selections as they explore and click on elements of a report.\n\nAt its core, Power BI’s interactivity relies on how filters are passed (or not passed) between visuals or by outside filter selections. There are a multitude of ways that report designers may build interactivity into their reports. Three important ways that designers can encourage interaction are through techniques such as cross filtering (and cross highlighting), the Filter Pane, and slicers.\n\nThere is no correct way to choose between cross filtering, slicers, or the Filter Pane. Depending on your analysis and what viewers prefer, you often work with a combination of all three. In most situations, however, the balance of these techniques will influence your report design both from a visual perspective and from a user experience perspective.\n\nLet’s consider aspects of all three:\n\nCross filtering in Power BI provides interactivity among visuals on the page. Visuals respond based on a user’s selection from another visual. Closely related is cross highlighting, which is available for a subset of visuals such as bar and column charts. In the case of cross highlighting, the context of the visual total is preserved but semi-transparent. The filtered selection is opaque.\n\nMultiple levels of cross filtering are also available by employing Ctrl + Click across more than one visual.\n\nWithout any outside slicer visual or using the Filter Pane, viewers can dynamically apply filters on the page through cross filtering.\n\nUnlike slicers and filters, however, cross filtering does not easily maintain selection state. As soon as a user clicks elsewhere, the selection is lost and the associated filter is no longer applied. Compared to cross filtering, slicers and filters applied through the Filter Pane retain their selections until a user explicitly changes the values.\n\nYou have global control in the Options area to set the cross filtering or cross highlighting experience for your report viewers. You can also modify behavior on a per-visual basis using Edit Interactions on the Format tab in the ribbon and applying changes with icons in the visual header.\n\nA second option to apply filters is Power BI’s Filter Pane. The Filter Pane is either expanded, collapsed, or hidden. While you can adjust the width of the Filter Pane, the location is not customizable. It always appears on the right side of the report canvas. Power BI offers some ability to change Filter Pane formatting as a whole and for individual filters.\n\nColor may be an important element of your Filter Pane design. In addition to matching or accenting the background of your main report, Filter Cards on the Filter Pane itself have a background color property. Depending on whether an individual filter is Available or Applied, color may be different. This distinction provides visual cues to highlight when filters are applied.\n\nThe Filter Pane offers both a Basic Filtering and an Advanced Filtering option. While this article is meant to consider more of the overall impact of options on a report’s visual design, you can go deeper by exploring these different Filter Pane options. They will impact the user experience but will not have as much impact on the visual design of your report canvas.\n\nDepending on the context of a user’s selection and your decisions as report author, you will see a combination of Visual Level Filters (“Filters on this visual”), Page Level Filters (“Filters on this page”), and Report Level Filters (“Filters on all pages”) on the Filter Pane.\n\nUnlike with slicers, you could add any number of possible filters to the Filter Pane without impacting the design of your report canvas. The Filter Pane provides a good method to give users some of the additional filters they may want without having to crowd your report with slicers.\n\nWhile slicers provide similar filtering results as cross filtering or the Filter Pane, slicers are visuals. Consequently, choosing to use slicers means that you allot portions of the page itself to additional visuals. Therefore, you must factor slicers into the visual design of your report canvas, and space on a page is finite. Devoting areas of your report page to slicers means those sections are not available for your primary visuals.\n\nWhile Microsoft determines the Filter Pane’s location, you have an abundance of ways to position your slicers on the report canvas. For example, do you want your collection of slicers grouped together at the top, left, or right side of the page?\n\nA collection of slicers may commonly be seen grouped together toward the top, left, or right side of a report page.\n\nPerhaps you want to employ a bookmark technique to “hide” the slicers when not in use. You also must decide if all filters should be slicers, or whether only important filters will be shown on a page as slicers while minor ones move to the Filter Pane. Each decision has visual impact and an influence on your user experience.\n\nSlicers should be positioned to feel natural to report viewers. Yet, slicer choice and positioning that may work for your visual design may not always be optimal for users. Find balance to provide the best user experience that will make slicers available while not distracting from the primary visualizations on the page.\n\nSince they are visuals, another consideration for slicers is whether to use the core Slicer visual or one of the many custom visuals available from the AppSource marketplace. This choice is not simply about functionality or aesthetics either. A key consideration for choosing any custom visual is that it cannot extend outside of its boundary while the built-in slicer can. Note how below, the dropdown slicer in the image on the left extends past the bottom border when needed, but in the image on the right nothing can extend past the right border.\n\nThe built-in Slicer visual provides versatility combined with the advantage of being fully supported across all Power BI usage scenarios.\n\nThere is a wide variety of visual formatting available to the basic Slicer visual. The default view is List, but options include:\n• Available for all data types\n• Also available for Date or DateTime data types\n• Also available for Whole Number or Decimal Number data types\n• Less Than or Equal To\n• Greater Than or Equal To\n\nIn addition, the default Slicer offers single and multi-select options along with optional Select All.\n\nOverall, the built-in Slicer visual offers a large range of functionality and the full support of the Power BI product team across all areas of the Power BI ecosystem. Consider whether this slicer may meet your needs alongside any of the following custom visual slicers.\n\nBy default, report pages will re-render whenever a slicer selection changes. In some cases, this may not be ideal if you have many selections to make and would like to delay query evaluation and refreshing of the report page. One of Power BI’s Query Reduction techniques available in Options is to Add an Apply button to each slicer to apply changes when you’re ready.\n\nThis decision is not strictly a performance consideration because it also impacts the visual appearance of your report. Adding the Apply button for query reduction requires more room on the report page dedicated to each slicer.\n\nWhen using default visual interactions, slicers behave like Page Level Filters. You can also modify the default behavior on a per-visual basis using Edit Interactions, which unlocks more flexibility than what you have available from filters applied to the entire page in the Filter Pane.\n\nSync Slicers are another feature unique to slicers compared to the Filter Pane or cross filtering. If you use Sync Slicers on every page, they act like Report Level Filters, applying the same filter selections on all pages. Sync Slicers offer more flexibility than using the Filter Pane in this regard though, since you can customize the sync behavior on a slicer by slicer and page by page basis.\n\nFinally, another consideration when using slicers is that you can apply measure filters. While this capability may not heavily influence your layout and visual design, it could certainly impact the user experience and your data model design.\n\nMeasure filters in slicers can be particularly helpful if your users only want to see options where relevant measure data exists. For example, what if users only want to choose among States with Sales in a related fact table instead of all states in the dimension table? Adding a measure filter to the slicer satisfies the use case and also helps avoid the temptation to use a bi-directional relationship between the two tables.\n\nAs mentioned, there is no right combination of Cross filtering, Filter Pane, and Slicers that will work in every circumstance. Before looking at sample usage scenarios in more detail, let’s summarize some strengths and weaknesses of each choice.\n\nIn summary, selection state for cross filtering is temporary while it is more permanent for slicers and for the Filter Pane. Cross filtering changes frequently as users interact with visuals, while the other two options only update when a user manually and explicitly updates values.\n\nWhen it comes to the impact on the report page, cross filtering or the Filter Pane do not require additional space like slicers do. The Filter Pane is collapsible to allow for an enlarged view of the report page.\n\nIn terms of syncing selections across multiple pages, slicers offer the most flexibility combining Sync Slicers with the ability to edit individual visual interactions. The Filter Pane with fields added to “Filters on all pages” / Report Level Filters allows selections to remain consistent from page to page as well.\n\nWith regard to visual diversity, slicers provide a variety of options while cross filtering can be setup for nearly any visual. The built-in Slicer developed by the Power BI Product team is only one among many slicers. There are several Marketplace visuals developed by community and partners, each with their own appeal in different scenarios.\n\n\n\nWhile there are limitless possibilities for how report designers build content for their different industries and organizations, here are a few sample scenarios and how designers may select between common slicer or filter options. What might work better considering different ways to approach report design? The following ideas help illustrate what’s commonly available but are not meant to be exhaustive. You know your data and your users. Design for them!\n\nSome questions to consider that could be helpful while working through a report design process might be:\n• Is your report Exploratory or Explanatory?\n• An exploratory report helps users uncover new insights by offering many paths to ad hoc discovery. An exploratory report in Power BI may offer many different slicers, filters on the Filter Pane, and heavily promote cross filtering. Many early iterations of a report or reports used to help understand a new dataset are exploratory in nature.\n• An explanatory report guides users through the data and may take a different approach to interaction. Fewer filters may be used because you as the report author move the viewer through the content. Explanatory reports may still encourage interaction, but it is often more intentionally directed using techniques such as bookmarks or drill through pages.\n• How many visuals are too many?\n• Although they allow valuable on-page interaction, slicers take up space. Filters on the Filter Pane do not.\n• Slicers add extra complexity to your page layout and formatting. While filters on the Filter Pane have some format options such as color, you will typically spend less time designing with filters than with slicers.\n• Will your report rely heavily on DirectQuery — with or without aggregations built into the data model?\n• Since DirectQuery keeps the data at the source, you may want to both limit the number of slicers and enable query reduction to improve the overall user experience.\n• There are a host of additional techniques to consider that are more related to the data modeling process than to report design, so don’t forget about that side too.\n• Will your viewers rely on the Power BI mobile app?\n• \n• While not a completely foreign experience from accessing a report in the Power BI service or embedded in an application, the user experience on the mobile app differs—especially if you use the dedicated mobile layout.\n• Too many filters on the mobile app may be cumbersome for users.\n\nHave you encountered Power BI design conversations where stakeholders want to add almost everything from the data model as a page full of slicers? Oftentimes, this request signals that the users do not fully understand what they want yet, so they opt for everything.\n\nMany business users like slicers because they are easy to use and highly visible. Since slicers are part of the report page itself, they are hard to miss.\n\nIn situations like this, try to help users uncover the goals for the report or dashboard, prioritize what is most important, and define how they primarily will interact with the report. If they describe their goals using natural language such as “I want to see Sales by Year by Country”, anything following a “by” in the sentence may be a good candidate for a filter.\n\nAre there opportunities to employ common hierarchies around Date, Geography, or Product? Using the hierarchy options in certain slicers may offer the chance to consolidate what may have started as multiple slicers into one.\n\nAre there many values or long text in the values? Perhaps a searchable option would work well.\n\nA picture is worth a thousand words, right? Some slicers allow images, which may be useful to display icons, logos, or even flags.\n\nPrioritizing is key though. While slicers are beneficial, there is a visual impact (and quickly a performance cost) as you increase the number of slicers on a page.\n\nBefore the current Filter Pane arrived, there were several arguments against adding fields to Filters instead of using Slicers. The previous filter area defaulted to a collapsed view and was hard for untrained viewers to find, applied filters were not easily differentiated from available ones, and more. With the newer Filter Pane, those early concerns are largely reduced.\n\nThere could also be an opportunity for additional options outside of the “slicer versus filter” discussion. Why limit yourself to the more traditional ways of reporting? Remember, we often want to encourage more consumer interaction with the visuals and the data!\n• When enabled, Power BI’s Personalize Visuals feature allows viewers to change visuals and add personal bookmarks without overwriting the original report. With Tabular Editor, you can even create perspectives in the dataset so that you can curate an end user view that is specifically for Personalize Visuals.\n• The Q&A visual allows viewers to ask natural language questions about a dataset. Results for the Q&A visual — which uses AI to help parse language and answer questions — should improve if you invest time managing terms and teaching Q&A based on your viewers’ previous questions.\n\nIn general, high priority or highly-used filters will be good candidates for slicers. Move everything else to the Filter Pane if possible.\n\nExample: slicers for filtering many values\n\nWhen working with a large number of field values, the Slicer in List mode does not leave as much space for other visualizations. More efficient options will often improve your overall user experience.\n\nIf a field has more than a few values, consider the Dropdown option within the default Slicer, searchable options such as the Text Filter, Smart Filter Pro by OKVIZ (which also allows multiple fields added to the same visual), or move these filters to the Filter Pane where you can use Advanced Filtering set to contains to search. From a visual design perspective, any of these options use space more efficiently than the List view in the core Slicer visual does.\n\nPopulating slicer or filter values also has a performance cost. Delaying results until they are needed benefits your user experience. Considering this point, avoid using slicer options that populate large amounts of data at the expense of rendering primary visuals on the report page.\n\nSome visuals such as the Smart Filter Pro by OKVIZ have more advanced capabilities. For example, this visual allows users to copy and paste a long list of items from other applications such as Notepad or Excel. You can also add AND / OR logic as well as search a range of values or dates. Finally, the Smart Filter Pro also supports search patterns and wildcard search (*, ?, !) in and has good performance compared to other possible options that load all unfiltered items into memory.\n\nWhenever an important hierarchy is involved, consider the default Slicer visual now that it supports an expandable tree view for hierarchies. This improvement offers much more flexibility than what used to be available when the Slicer was limited to a single field. The Hierarchy Slicer and Hierarchical Filter – xViz, and Smart Filter Pro set to Hierarchy Mode all handle hierarchies as well.\n\nHierarchies cannot be added to the Filter Pane as a unit. Instead, each level within the hierarchy would have to be added as a separate filter. In this case, visualizing a hierarchy is best viewed in an appropriate slicer.\n\nIf you want image selection, perhaps use cross filtering with an image in the Table or Matrix visual, or add images to the Chiclet slicer. These options will display images from URLs or small, low-resolution images stored into the data model. The Table and Matrix visuals limit image height to 150px maximum. The Chiclet slicer allows some additional control over image sizing and appearance.\n\nFor slicing on dates, perhaps use the Timeline Slicer or one of the other timeline brush community visuals. Consider the Play Axis custom visual when working with any type of sequence. This visual includes a timer to automatically progress through a sequence of values. It can be particularly helpful to “animate” a timeline.\n\nExample: integrating charts with filters and slicers\n\nConsider cross filtering core visuals if filters are required but not core to your visualization, and when preserving selections is not important. Almost every core visual is good for cross filtering. The Table or Matrix visual with Data Bars enabled in conditional formatting is a good way to improve a dense visual to summarize data while also encouraging interaction and cross filtering.\n\nAlternatively, consider some of the community visuals that combine charts with slicer or filter values. An example of this approach is the Attribute Slicer.\n\nSince slicers are visuals, there are numerous options for your reports. You can choose among any combination of the core Slicer and the myriad marketplace visuals from other developers. You could also forego slicers and opt to move filters to the Filter Pane. Find the combination that suits your data and users.\n\nIf you’ve made the decision that you want to use slicers in some way on your Power BI report, experiment with the various marketplace visuals to find which one(s) may work best for you. There are so many options, some of which combine unique data visualization with filtering in the same visual.\n\nKeep in mind that depending on your usage scenario, a custom visual may be appropriate or could cause a headache. For example, many organizations may only allow Certified visuals. In addition, even if your organization allows all visuals, your users may want to export to PowerPoint / PDF or view the report in another way where uncertified custom visuals may fall short. In many of these cases, your visual design may not suffer but the user experience may.\n\nOverall, try to be consistent. While it is okay to include a combination of slicers and Filter Pane on a report, avoid mixing too many different types of slicers on your report page. Your choice of slicer needs to consider the end-to-end impact from design to deployment.\n\nMost important of all, your viewers will benefit from intentional design on your part. Don’t overlook the many ways that users may interact with your report, which is a key differentiator of Power BI over more traditional BI reporting. Take the same care when designing your filtering capabilities into your report that you would with your primary data visualization design."
    },
    {
        "link": "https://databear.com/mastering-power-bi-slicers",
        "document": "Power BI slicers are powerful tools for filtering data, but sometimes they don’t behave as expected. In this post, we’ll dive into the intricacies of Power BI slicers, explore their functionalities, and discuss common issues users face, particularly when slicers don’t filter other slicers. Let’s unravel the mystery of slicers and enhance your Power BI skills!\n\nSlicers are visual filters that allow users to segment data directly on the report canvas. They provide an intuitive way for users to interact with their data, allowing for dynamic filtering based on the selected criteria. Unlike traditional filters that operate behind the scenes, slicers are visible and interactive, making them a user-friendly option for report consumers.\n\nOne common issue users encounter is when selecting an item in one slicer does not filter the options in another slicer. This can be frustrating, especially when you expect the slicers to interact. Let’s break down the reasons why this might happen and how to troubleshoot it.\n\nWhen using slicers, it’s essential to understand how they interact with each other. By default, all slicers on a page should filter the visuals based on the selections made. However, if one slicer is not filtering another, there are several factors to consider:\n• Data Relationships: Ensure that the data model has appropriate relationships. If slicers are based on different tables that aren’t related, they won’t filter each other.\n• Visual Interactions: Check if visual interactions are set correctly. You can customize which visuals are affected by slicers in the format pane.\n• Filter Context: Understand the filter context in which your slicers operate. If the filters applied are conflicting, it may prevent one slicer from filtering another.\n\nTo get the most out of your slicers, it’s important to configure them correctly. Here are some best practices:\n• Keep it Simple: Avoid cluttering your report with too many slicers. Focus on the most relevant ones that add value to the report.\n• Use Hierarchical Slicers: When dealing with categories and subcategories, hierarchical slicers can provide a better user experience.\n• Synchronize Slicers: If you have multiple pages in your report, consider synchronizing slicers across those pages to maintain consistency in filtering.\n\nSetting up slicers in Power BI is straightforward. Follow these steps to create your first slicer:\n• Select the Slicer visualization from the Visualizations pane.\n• Drag the field you want to use for filtering into the slicer.\n• Configure the slicer type (dropdown, list, or tile) based on your needs.\n• Adjust formatting options to enhance the visual appeal of your slicer.\n\nFor more advanced configurations, consider the following:\n• Single Select vs. Multi-Select: Decide whether users should be able to select multiple items or just one at a time.\n• Show “Select All” Option: This feature can enhance user experience by allowing them to quickly select or deselect all items.\n• Responsive Layouts: Ensure your slicers adapt to different screen sizes for better accessibility.\n\nSometimes, slicers can conflict with each other, leading to unexpected results. Here are some strategies to mitigate these issues:\n• Review Data Models: Ensure that your data model is designed correctly. Check for relationships between tables that might be necessary for slicers to function effectively.\n• Adjust Visual Interactions: Use the visual interactions feature to specify how slicers and visuals should interact with one another.\n• Test with Sample Data: Create a simplified version of your report with sample data to isolate the issue and identify the root cause.\n• Can slicers filter visuals from different pages? Yes, but you need to synchronize slicers across those pages.\n• What if my slicer shows blank values? You can apply filters to your slicer to exclude blank values from the display.\n• How do I reset slicers? Adding a “Clear All” button can help users reset all slicers to their default state quickly.\n\nPower BI slicers are invaluable tools for data visualization, allowing users to filter data interactively and intuitively. Understanding their functionality and how to troubleshoot common issues will greatly enhance your reporting capabilities. If you want to take your Power BI skills further, consider exploring expert-led training courses available through this link.\n\nWith the right knowledge and practice, you’ll be able to leverage slicers to create dynamic, user-friendly reports that provide actionable insights. Don’t hesitate to reach out for assistance or to learn more about advanced Power BI features!"
    },
    {
        "link": "https://learn.microsoft.com/en-us/dax/allexcept-function-dax",
        "document": "Removes all context filters in the table except filters that have been applied to the specified columns.\n\nThe first argument to the ALLEXCEPT function must be a reference to a base table. All subsequent arguments must be references to base columns. You cannot use table expressions or column expressions with the ALLEXCEPT function.\n\nA table with all filters removed except for the filters on the specified columns.\n• None This function is not used by itself, but serves as an intermediate function that can be used to change the set of results over which some other calculation is performed.\n• None ALL and ALLEXCEPT can be used in different scenarios: Removes all filters from the specified table. In effect, ALL(Table) returns all of the values in the table, removing any filters from the context that otherwise might have been applied. This function is useful when you are working with many levels of grouping, and want to create a calculation that creates a ratio of an aggregated value to the total value. Removes all filters from the specified columns in the table; all other filters on other columns in the table still apply. All column arguments must come from the same table. The ALL(Column) variant is useful when you want to remove the context filters for one or more specific columns and to keep all other context filters. Removes all context filters in the table except filters that are applied to the specified columns. This is a convenient shortcut for situations in which you want to remove the filters on many, but not all, columns in a table.\n• None This function is not supported for use in DirectQuery mode when used in calculated columns or row-level security (RLS) rules.\n\nThe following measure formula sums SalesAmount_USD and uses the ALLEXCEPT function to remove any context filters on the DateTime table except if the filter has been applied to the CalendarYear column.\n\nBecause the formula uses ALLEXCEPT, whenever any column but CalendarYear from the table DateTime is used to slice a visualization, the formula will remove any slicer filters, providing a value equal to the sum of SalesAmount_USD. However, if the column CalendarYear is used to slice the visualization, the results are different. Because CalendarYear is specified as the argument to ALLEXCEPT, when the data is sliced on the year, a filter will be applied on years at the row level"
    },
    {
        "link": "https://dax.guide/allexcept",
        "document": "When used as a modifier in CALCULATE or CALCULATETABLE, ALLEXCEPT removes the filters from the expanded table specified in the first argument, keeping only the filters in the columns specified in the following arguments. When used as a table function, ALLEXCEPT materializes all the unique combinations of the columns in the table specified in the first argument that are not listed in the following arguments. In this case, the result only has the columns of the table and ignores the expanded table.\n\n For example, having a table T with four columns (a, b, c, d), the two following table expressions are equivalent: FILTER ( ALLEXCEPT ( T, T[a], T[b] ), -- The result as a table expression has only T[c] and T[d] <expr> ) -- The result of the following expression is identical to the previous one FILTER ( ALL ( T[c], T[d] ), -- The result as a table expression has only T[c] and T[d] <expr> ) However, ALLEXCEPT is commonly used as a CALCULATE modifier and very rarely needed as a table function.\n\nRemove filters from all the columns of the Customer table but City. Remove filters from all the columns of the expanded table Sales but City. Remove filters from all the columns of the expanded table Sales but Date table and City column. ALLEXCEPT used as a table function returns a table removing columns and duplicated rows. -- Returns all the 'Product' columns EVALUATE ALL ( 'Product' ) -- Returns all the 'Product' columns but ProductKey and Product Code EVALUATE ALLEXCEPT ( 'Product', 'Product'[ProductKey], 'Product'[Product Code] ) -- Reducing the number of columns returned -- also reducse the number of rows EVALUATE ALLEXCEPT ( 'Product', 'Product'[ProductKey], 'Product'[Product Code], 'Product'[Product Name], 'Product'[Manufacturer], 'Product'[Brand] ) -- The following query returns all the products -- with Contoso brand, regardless of the color EVALUATE CALCULATETABLE ( CALCULATETABLE ( 'Product', ALLEXCEPT ( 'Product', 'Product'[Brand] ) ), 'Product'[Brand] = \"Contoso\", 'Product'[Color] = \"Red\" ) -- In this example, ALLEXCEPT ignores Sales expanded table filters -- except the cross-filters coming from Date and the column Product[Color] DEFINE MEASURE Sales[# Sales] = COUNTROWS ( Sales ) EVALUATE CALCULATETABLE ( { ( 1, \"# Sales (CY 2009 - Red)\", [# Sales] ), ( 2, \"# Sales (CY 2009)\", CALCULATE ( [# Sales], ALLEXCEPT ( Sales, 'Date' ) ) ), ( 3, \"# Sales (Red)\", CALCULATE ( [# Sales], ALLEXCEPT ( Sales, 'Product'[Color] ) ) ), ( 4, \"# Sales\", CALCULATE ( [# Sales], REMOVEFILTERS ( ) ) ) }, 'Product'[Color] = \"Red\", 'Date'[Calendar Year] = \"CY 2009\" ) ORDER BY [Value1] -- ALLEXCEPT has a different behavior if used as a table function -- or as a CALCULATE modifier. EVALUATE CALCULATETABLE ( { ( \"CALCULATE FILTER\", CALCULATE ( COUNTROWS ( Sales ), ALLEXCEPT ( Sales, 'Date' ) ) ), ( \"TABLE FUNCTION\", COUNTROWS ( ALLEXCEPT ( Sales, 'Date' ) ) ) }, 'Date'[Calendar Year] = \"CY 2009\", 'Product'[Color] = \"Red\" )"
    },
    {
        "link": "https://community.powerbi.com/t5/Desktop/Filtering-with-ALLEXCEPT/td-p/2497426",
        "document": "I'm struggling to get a Measure to act the way it should using AllExcept().\n\n\n\nFor context , imagine my data is:\n\n\n\nI have a slicer for Business + Project.\n\nOn the dashboard, I want to display the total cost for the catergory of the project across the whole business.\n\nE.g. if Project 3 is selected, then the measure will return $8 (5+3). If Project 1 is selected it will be $1. If Project 5 is selected it will be $7 etc.\n\nInitially, to create this measure I duplicated the query and added the filters into the table before bringing it into PowerBI. I called this table TEST.\n\nThe measure I created, which does work, is\n\nThis works as expected.\n\n\n\nIn my report I have a few other filters in place across the page that needs to also be considered. This is because the project will appear a few times in the dataset, but we only want to look at one where the Source = \"Main\", Progress = \"Active\" and the date is after 01/09/2020. I know wanted to repeat this measure with the real table (called 'Table'). This of course, didn't work properly as it wasn't considering the additional filters required of the report. But even when adding in the filters, it isn't working. It actually appears to be over filtering the data as the number is significantly smaller than the real one. The measure looks like this Any clues as to why this isn't working as expected? No combination of the additional filters is working. I feel this should be simple!"
    },
    {
        "link": "https://sqlbi.com/articles/using-allexcept-versus-all-and-values",
        "document": "Like all the functions of the ALL* family, ALLEXCEPT can offer two different behaviors: it can be used as a table function, or as a CALCULATE modifier. ALLEXCEPT is seldom used as a table function. ALLEXCEPT is mostly used along with CALCULATE to remove all filters from a table, except for some columns.\n\nIn DAX, there are basically two patterns available to remove all the filters from a table except for some columns:\n\nThe first measure uses ALLEXCEPT, the second one uses the combination of ALL and VALUES. Despite looking identical in their semantics, the two techniques result in different behaviors. Using ALLEXCEPT is more likely to result in errors, because it is sensitive to the external filter context due to ALLEXCEPT being used as a CALCULATE modifier.\n\nMoreover, DAX introduced REMOVEFILTERS in 2019 which is an alias for ALL when used as a CALCULATE modifier. It results in more readable code. UsingRemoveFiltersValues in the next code is semantically equivalent to UsingAllValues:\n\nIn most scenarios, the pair REMOVEFILTERS/VALUES is what you need to implement the semantic of a measure. You should consider ALLEXCEPT as a CALCULATE modifier in more advanced cases, such as removing circular depencies in calculated columns. This is explained in Understanding circular dependencies in DAX – SQLBI.\n\nLet me elaborate on the topic with an example. The following report shows the sales amount sliced by continent and country, along with a PercOverContinent measure that shows the percentage of the country over the total of the continent.\n\nIn order to compute PercOverContinent, we need to divide Sales Amount (that is, the Sales Amount measure in the current filter context) by the same measure in a filter context where we remove all filters from the Customer table, except for the Continent column. A possible implementation is the following:\n\nYou can author the same measure in different ways, for example by using REMOVEFILTERS on Customer[Country], even though that would result in a different calculation. Indeed, by using ALLEXCEPT you create a measure that works when you slice by any column in the Customer table, always retaining the filter on Continent only. For example, the PercOverContinent measure produces the percentage of State over Continent, when you slice by Continent and State.\n\nDespite working in this specific report, the PercOverContinent measure is written in a fragile way. In order to understand the problem, let us go back to the previous report that slices by Country. In the next figure, look at the percentage shown for France: it is 11.48%.\n\nThe value is correct: France represents 11.48% of sales against the total of Europe. Nonetheless, if we remove the continent from the report, the number suddenly changes to 3.32%.\n\nIndeed, by using ALLEXCEPT we created a measure that works if and only if the report includes the Continent column. If the report does not place a filter on Continent, the measure stops working. Doing the math, you discover that 3.32% is the percentage of France against the total sales all over the world. The filter on Europe disappeared at the denominator, despite us explicitly asking – by using ALLEXCEPT – to keep that filter.\n\nTo understand the reason why the measure does not work, we must focus on the filter context of the cell for France. We specifically look at the difference between the cell where it is working and the one where it is not.\n\nWhen the measure is working as expected, the filter context contains both the Continent (Europe) and the Country (France).\n\nWhen ALLEXCEPT is applied as a CALCULATE modifier in the denominator, ALLEXCEPT removes all the filters from the Customer table (there are two filters) except for a filter on Continent (there is one filter for the continent). Therefore, ALLEXCEPT removes the filter from Country but leaves the filter on the continent untouched. As a consequence, the denominator computes the sales in Europe as expected.\n\nThe scenario where the formula computes the wrong value (3.32%) is different. In the cell computing the inaccurate result, the filter context does not contain a filter over Customer[Continent]. This happens because we removed the continent from the matrix. Therefore, the filter context contains only a filter for Country.\n\nIn this scenario, when ALLEXCEPT is applied it removes all the filters from the Customer table, except for a filter on Continent. It turns out that there are no filters on Continent. Therefore, ALLEXCEPT removes all the filters, leaving an empty filter context. As a consequence, the value computed at the denominator is not the value of Sales Amount for Europe, but the grand total of Sales Amount for all the customers.\n\nIt is common for DAX newbies to forget that ALLEXCEPT, as a CALCULATE modifier, does not introduce new filters. It can only remove existing ones. If there are no filters on Customer[Continent] when ALLEXCEPT is invoked, there will be no filters after ALLEXCEPT has done its job.\n\nIf you want to remove all filters from a table except for some columns, a safer method is to rely on the pair REMOVEFILTERS/VALUES. REMOVEFILTERS (or ALL) removes all the filters from the table; VALUES evaluates the values of a column as visible in the current filter context, and applies the result as a filter:\n\nWhen evaluated for France, VALUES returns “Europe” because Customer[Continent] is cross-filtered by the explicit filter present on the Customer[Country] column. Therefore, ALL removes any filter from the Customer table – including a filter on the Continent, if present. VALUES restores the filter on the Continent column. It is worth remembering that VALUES is not a CALCULATE modifier. VALUES always applies its filter to the filter context, because it is a table function. Since the result of VALUES is a table containing “Europe”, the resulting filter filters the continents visible in the selection, regardless of the continent (Europe) being already present in the filter context or not.\n\nYou can use VALUES when you need to retain a filter on a single column. If you need to keep a filter on multiple columns, you can use SUMMARIZE instead of VALUES to build a suitable table that contains the columns you want to retain in the filter context.\n\nAs an example, to compute the percentage of the city against the state you must retain the filter on three columns: State, Country and Continent. This can be achieved with the following code:\n\nA measure written using ALL/VALUES works regardless of the columns used in the report. As such, it guarantees a correct result for a measure whose semantic is a ratio over a specified column. This is not to say that you should not use ALLEXCEPT at all. There are scenarios where ALLEXCEPT makes sense and works perfectly fine. Mastering DAX requires you to understand well how the filter context is manipulated by the different functions available in DAX, so that you can write sound and strong code that works on any report.\n\nNOTE: a previous version of this article written in 2016 is available here."
    },
    {
        "link": "https://medium.com/microsoft-power-bi/demystifying-the-allexcept-function-in-dax-f11331ca8158",
        "document": "Data analysis is at the heart of decision-making in today’s business world. To harness the power of data effectively, tools like Microsoft Power BI and Excel’s Power Pivot offer a powerful formula language called Data Analysis Expressions (DAX). DAX enables users to create complex calculations and aggregations over their data models. One of the lesser-known yet highly useful DAX functions is ALLEXCEPT. In this article, we will delve into the ALLEXCEPT function, exploring its syntax, application, and real-world scenarios where it can be a game-changer.\n\nTo better understand the ALLEXCEPT function, let’s start with some sample data. Imagine we have a sales dataset with the following structure:\n\nNow, let’s dive into the syntax and usage of the ALLEXCEPT function.\n\nThe ALLEXCEPT function in DAX allows you to remove filters from all columns in a table except those specified in the argument list. Its syntax is:\n• : The name of the table from which you want to remove filters.\n• , , ...: The columns from the specified table for which you want to keep filters. Filters on all other columns will be removed.\n\nThe primary use case of ALLEXCEPT is to create calculations within a particular context while disregarding filters applied to other columns. This is especially handy in scenarios where you need to perform calculations within a specific dimension or attribute of your data, ignoring filters on other dimensions.\n\nSuppose you want to calculate the total sales for each product, but you want to ignore any filters applied to the ‘Date’ column. You can achieve this using the ALLEXCEPT function as follows:\n\nIn this example, we are using ALLEXCEPT as a modifier for the CALCULATE function. ALLEXCEPT removes any filters on the ‘Date’ column, allowing us to calculate the total sales for each product, regardless of the date filters applied to the data.\n\nAfter applying the DAX formula, the results for the total sales ignoring the ‘Date’ column filters would be:\n\nThe following image shows the comparison of using ALLEXCEPT to remove the date filter against a measure that does not exclude the date filter. I selected the date of 01/03/2023 in the slicer to filter the date in the sales table.\n\nThe ALLEXCEPT function in DAX is a powerful tool for manipulating and analysing data within specific contexts while ignoring filters on other columns. By specifying which columns to keep filters on, you can perform complex calculations and aggregations tailored to your analytical needs. In this article, we explored its syntax, usage, and provided a real-world example to illustrate its capabilities. Incorporating ALLEXCEPT into your DAX toolkit can enhance your data analysis and reporting capabilities in Power BI and Excel.\n\nThe ALLEXCEPT function in DAX is a powerful tool for manipulating and analysing data within specific contexts while ignoring filters on other columns. By specifying which columns to keep filters on, you can perform complex calculations and aggregations tailored to your analytical needs. In this article, we explored its syntax, usage, and provided a real-world example to illustrate its capabilities. Incorporating ALLEXCEPT into your DAX toolkit can enhance your data analysis and reporting capabilities in Power BI and Excel."
    }
]