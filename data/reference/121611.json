[
    {
        "link": "https://support.microsoft.com/en-us/office/if-function-nested-formulas-and-avoiding-pitfalls-0b22ff44-f149-44ba-aeb5-4ef99da241c8",
        "document": "The IF function allows you to make a logical comparison between a value and what you expect by testing for a condition and returning a result if True or False.\n• =IF(Something is True, then do something, otherwise do something else) So an IF statement can have two results. The first result is if your comparison is True, the second if your comparison is False. IF statements are incredibly robust, and form the basis of many spreadsheet models, but they are also the root cause of many spreadsheet issues. Ideally, an IF statement should apply to minimal conditions, such as Male/Female, Yes/No/Maybe, to name a few, but sometimes you might need to evaluate more complex scenarios that require nesting* more than 3 IF functions together. * \"Nesting\" refers to the practice of joining multiple functions together in one formula.\n\nWhile Excel will allow you to nest up to 64 different IF functions, it's not at all advisable to do so. Why?\n• Multiple IF statements require a great deal of thought to build correctly and make sure that their logic can calculate correctly through each condition all the way to the end. If you don't nest your formula 100% accurately, then it might work 75% of the time, but return unexpected results 25% of the time. Unfortunately, the odds of you catching the 25% are slim.\n• Multiple IF statements can become incredibly difficult to maintain, especially when you come back some time later and try to figure out what you, or worse someone else, was trying to do. If you find yourself with an IF statement that just seems to keep growing with no end in sight, it's time to put down the mouse and rethink your strategy. Let's look at how to properly create a complex nested IF statement using multiple IFs, and when to recognize that it's time to use another tool in your Excel arsenal.\n\nFollowing is an example of a relatively standard nested IF statement to convert student test scores to their letter grade equivalent.\n• This complex nested IF statement follows a straightforward logic:\n• If the Test Score (in cell D2) is greater than 89, then the student gets an A\n• If the Test Score is greater than 79, then the student gets a B\n• If the Test Score is greater than 69, then the student gets a C\n• If the Test Score is greater than 59, then the student gets a D\n• Otherwise the student gets an F This particular example is relatively safe because it's not likely that the correlation between test scores and letter grades will change, so it won't require much maintenance. But here's a thought – what if you need to segment the grades between A+, A and A- (and so on)? Now your four condition IF statement needs to be rewritten to have 12 conditions! Here's what your formula would look like now: It's still functionally accurate and will work as expected, but it takes a long time to write and longer to test to make sure it does what you want. Another glaring issue is that you've had to enter the scores and equivalent letter grades by hand. What are the odds that you'll accidentally have a typo? Now imagine trying to do this 64 times with more complex conditions! Sure, it's possible, but do you really want to subject yourself to this kind of effort and probable errors that will be really hard to spot? Tip: Every function in Excel requires an opening and closing parenthesis (). Excel will try to help you figure out what goes where by coloring different parts of your formula when you're editing it. For instance, if you were to edit the above formula, as you move the cursor past each of the ending parentheses \")\", its corresponding opening parenthesis will turn the same color. This can be especially useful in complex nested formulas when you're trying to figure out if you have enough matching parentheses.\n\nFollowing is a very common example of calculating Sales Commission based on levels of Revenue achievement. This formula says IF(C9 is Greater Than 15,000 then return 20%, IF(C9 is Greater Than 12,500 then return 17.5%, and so on... While it's remarkably similar to the earlier Grades example, this formula is a great example of how difficult it can be to maintain large IF statements – what would you need to do if your organization decided to add new compensation levels and possibly even change the existing dollar or percentage values? You'd have a lot of work on your hands! Tip: You can insert line breaks in the formula bar to make long formulas easier to read. Just press ALT+ENTER before the text you want to wrap to a new line. Here is an example of the commission scenario with the logic out of order: Can you see what's wrong? Compare the order of the Revenue comparisons to the previous example. Which way is this one going? That's right, it's going from bottom up ($5,000 to $15,000), not the other way around. But why should that be such a big deal? It's a big deal because the formula can't pass the first evaluation for any value over $5,000. Let's say you've got $12,500 in revenue – the IF statement will return 10% because it is greater than $5,000, and it will stop there. This can be incredibly problematic because in a lot of situations these types of errors go unnoticed until they've had a negative impact. So knowing that there are some serious pitfalls with complex nested IF statements, what can you do? In most cases, you can use the VLOOKUP function instead of building a complex formula with the IF function. Using VLOOKUP, you first need to create a reference table: This formula says to look for the value in C2 in the range C5:C17. If the value is found, then return the corresponding value from the same row in column D. Similarly, this formula looks for the value in cell B9 in the range B2:B22. If the value is found, then return the corresponding value from the same row in column C. Note: Both of these VLOOKUPs use the TRUE argument at the end of the formulas, meaning we want them to look for an approxiate match. In other words, it will match the exact values in the lookup table, as well as any values that fall between them. In this case the lookup tables need to be sorted in Ascending order, from smallest to largest. VLOOKUP is covered in much more detail here, but this is sure a lot simpler than a 12-level, complex nested IF statement! There are other less obvious benefits as well:\n• VLOOKUP reference tables are right out in the open and easy to see.\n• Table values can be easily updated and you never have to touch the formula if your conditions change.\n• If you don't want people to see or interfere with your reference table, just put it on another worksheet."
    },
    {
        "link": "https://support.microsoft.com/en-us/office/if-function-69aed7c9-4e8a-4755-a9bc-aa8bbff73be2",
        "document": "The IF function is one of the most popular functions in Excel, and it allows you to make logical comparisons between a value and what you expect. So an IF statement can have two results. The first result is if your comparison is True, the second if your comparison is False. For example, =IF(C2=”Yes”,1,2) says IF(C2 = Yes, then return a 1, otherwise return a 2).\n\nIn the above example, cell D2 says: IF(C2 = Yes, then return a 1, otherwise return a 2) In this example, the formula in cell D2 says: IF(C2 = 1, then return Yes, otherwise return No)As you see, the IF function can be used to evaluate both text and values. It can also be used to evaluate errors. You are not limited to only checking if one thing is equal to another and returning a single result, you can also use mathematical operators and perform additional calculations depending on your criteria. You can also nest multiple IF functions together in order to perform multiple comparisons. In the above example, the IF function in D2 is saying IF(C2 Is Greater Than B2, then return “Over Budget”, otherwise return “Within Budget”) In the above illustration, instead of returning a text result, we are going to return a mathematical calculation. So the formula in E2 is saying IF(Actual is Greater than Budgeted, then Subtract the Budgeted amount from the Actual amount, otherwise return nothing). In this example, the formula in F7 is saying IF(E7 = “Yes”, then calculate the Total Amount in F5 * 8.25%, otherwise no Sales Tax is due so return 0) Note: If you are going to use text in formulas, you need to wrap the text in quotes (e.g. “Text”). The only exception to that is using TRUE or FALSE, which Excel automatically understands."
    },
    {
        "link": "https://ablebits.com/office-addins-blog/excel-nested-if-statement",
        "document": "The tutorial explains how to use the nested IF function in Excel to check multiple conditions. You will also learn a few other functions that could be good alternatives to using a nested formula in Excel.\n\nHow do you usually implement a decision-making logic in your Excel worksheets? In most cases, you'd use an IF formula to test your condition and return one value if the condition is met, another value if the condition is not met. To evaluate more than one condition and return different values depending on the results, you nest multiple IFs inside each other.\n\nThough very popular, the nested IF statement is not the only way to check multiple conditions in Excel. In this tutorial, you will find a handful of alternatives that are definitely worth exploring.\n\nHere's the classic Excel nested IF formula in a generic form: You can see that each subsequent IF function is embedded into the value_if_false argument of the previous function. Each IF function is enclosed in its own set of parentheses, but all the closing parentheses are at the end of the formula. Our generic nested IF formula evaluates 3 conditions, and returns 4 different results (result 4 is returned if none of the conditions is TRUE). Translated into a human language, this nested IF statement tells Excel to do the following: Test condition1, if TRUE - return result1, if FALSE -\n\ntest condition2, if TRUE - return result2, if FALSE -\n\n test condition3, if TRUE - return result3, if FALSE -\n\nreturn result4 As an example, let's find out commissions for a number of sellers based on the amount of sales they've made: In math, changing the order of addends does not change the sum. In Excel, changing the order of IF functions changes the result. Why? Because a nested IF formula returns a value corresponding to the first TRUE condition. Therefore, in your nested IF statements, it's very important to arrange the conditions in the right direction - high to low or low to high, depending on your formula's logic. In our case, we check the \"highest\" condition first, then the \"second highest\", and so on: If we placed the conditions in the reverse order, from the bottom up, the results would be all wrong because our formula would stop after the first logical test (B2>=1) for any value greater than 1. Let's say, we have $100 in sales - it is greater than 1, so the formula would not check other conditions and return 3% as the result. If you'd rather arrange the conditions from low to high, then use the \"less than\" operator and evaluate the \"lowest\" condition first, then the \"second lowest\", and so on: As you see, it takes quite a lot of thought to build the logic of a nested IF statement correctly all the way to the end. And although Microsoft Excel allows nesting up to 64 IF functions in one formula, it is not something you'd really want to do in your worksheets. So, if you (or someone else) are gazing at your Excel nested IF formula trying to figure out what it actually does, it's time to reconsider your strategy and probably choose another tool in your arsenal. For more information, please see Excel nested IF statement.\n\n\n\nIn case you need to evaluate a few sets of different conditions, you can express those conditions using OR as well as AND function, nest the functions inside IF statements, and then nest the IF statements into each other. Nested IF in Excel with OR statements By using the OR function you can check two or more different conditions in the logical test of each IF function and return TRUE if any (at least one) of the OR arguments evaluates to TRUE. To see how it actually works, please consider the following example. Supposing, you have two columns of sales, say January sales in column B and February sales in column C. You wish to check the numbers in both columns and calculate the commission based on a higher number. In other words, you build a formula with the following logic: if either Jan or Feb sales are greater than $150, the seller gets 10% commission, if Jan or Feb sales are greater than or equal to $101, the seller gets 7% commission, and so on. To have it done, write a few OF statements like OR(B2>150, C2>150) and nest them into the logical tests of the IF functions discussed above. As the result, you get this formula: And have the commission assigned based on the higher sales amount:\n\n For more formula examples, please see Excel IF OR statement.\n\n Nested IF in Excel with AND statements If your logical tests include multiple conditions, and all of those conditions should evaluate to TRUE, express them by using the AND function. For example, to assign the commissions based on a lower number of sales, take the above formula and replace OR with AND statements. To put it differently, you tell Excel to return 10% only if Jan and Feb sales are greater than $150, 7% if Jan and Feb sales are greater than or equal to $101, and so on. As the result, our nested IF formula calculates the commission based on the lower number in columns B and C. If either column is empty, there is no commission at all because none of the AND conditions is met:\n\n If you'd like to return 0% instead of blank cells, replace an empty string (''\") in the last argument with 0%: More information can be found here: Excel IF with multiple AND/OR conditions.\n\n\n\nVLOOKUP instead of nested IF in Excel When you are dealing with \"scales\", i.e. continuous ranges of numerical values that together cover the entire range, in most cases you can use the VLOOKUP function instead of nested IFs. For starters, make a reference table like shown in the screenshot below. And then, build a Vlookup formula with approximate match, i.e. with the range_lookup argument set to TRUE. Assuming the lookup value is in B2 and the reference table is F2:G5, the formula goes as follows: Please notice that we fix the table_array with absolute references ($F$2:$G$5) for the formula to copy correctly to other cells:\n\n By setting the last argument of your Vlookup formula to TRUE, you tell Excel to search for the closest match - if an exact match is not found, return the next largest value that is smaller than the lookup value. As the result, your formula will match not only the exact values in the lookup table, but also any values that fall in between. For example, the lookup value in B3 is $95. This number does not exist in the lookup table, and Vlookup with exact match would return an #N/A error in this case. But Vlookup with approximate match continues searching until it finds the nearest value that is less than the lookup value (which is $50 in our example) and returns a value from the second column in the same row (which is 5%). But what if the lookup value is less than the smallest number in the lookup table or the lookup cell is empty? In this case, a Vlookup formula will return the #N/A error. If it's not what you actually want, nest VLOOKUP inside IFERROR and supply the value to output when the lookup value is not found. For example: Important note! For a Vlookup formula with approximate match to work correctly, the first column in the lookup table must be sorted in ascending order, from smallest to largest. For more information, please see Exact match VLOOKUP vs. approximate match VLOOKUP.\n\n\n\nIFS statement as alternative to nested IF function In Excel 2016 and later versions, Microsoft introduced a special function to evaluate multiple conditions - the IFS function. An IFS formula can handle up to 127 logical_test/value_if_true pairs, and the first logical test that evaluates to TRUE \"wins\": In accordance with the above syntax, our nested IF formula can be reconstructed in this way: Please pay attention that the IFS function returns the #N/A error if none of the specified conditions is met. To avoid this, you can add one more logical_test/value_if_true to the end of your formula that will return 0 or empty string (\"\") or whatever value you want if none of the previous logical tests is TRUE: As the result, our formula will return an empty string (blank cell) instead of the #N/A error if a corresponding cell in column B is empty or contains text or negative number.\n\n Note. Like nested IF, Excel's IFS function returns a value corresponding to the first condition that evaluates to TRUE, which is why the order of logical tests in an IFS formula matters. For more information, please see Excel IFS function instead of nested IF.\n\n\n\nCHOOSE instead of nested IF formula in Excel Another way to test multiple conditions within a single formula in Excel is using the CHOOSE function, which is designed to return a value from the list based on a position of that value. Applied to our sample dataset, the formula takes the following shape: In the first argument (index_num), you evaluate all the conditions and add up the results. Given that TRUE equates to 1 and FALSE to 0, this way you calculate the position of the value to return. For example, the value in B2 is $150. For this value, the first 3 conditions are TRUE and the last one (B2 > 150) is FALSE. So, index_num equals to 3, meaning the 3rd value is returned, which is 7%.\n\n Tip. If none of the logical tests is TRUE, index_num is equal to 0, and the formula returns the #VALUE! error. An easy fix is wrapping CHOOSE in the IFERROR function like this: For more information, please see Excel CHOOSE function with formula examples.\n\nSWITCH function as a concise form of nested IF in Excel In situations when you are dealing with a fixed set of predefined values, not scales, the SWITCH function can be a compact alternative to complex nested IF statements: The SWITCH function evaluates expression against a list of values and returns the result corresponding to the first found match. In case, you'd like to calculate the commission based on the following grades, rather than sales amounts, you could use this compact version of nested IF formula in Excel: Or, you can make a reference table like shown in the screenshot below and use cell references instead of hardcoded values: Please notice that we lock all references except the first one with the $ sign to prevent them from changing when copying the formula to other cells:\n\n Note. The SWITCH function is only available in Excel 2016 and higher. For more information, please see SWITCH function - the compact form of nested IF statement.\n\n\n\nYou can see that Microsoft Excel provides a handful of good alternatives to nested IF formulas, and hopefully this tutorial has given you some clues on how to leverage them in your worksheets. To have a closer look at the examples discussed in this tutorial, you are welcome to download our sample workbook below. I thank you for reading and hope to see you on our blog next week!"
    },
    {
        "link": "https://support.microsoft.com/en-us/office/video-nested-if-functions-bdb0ebe2-caff-4914-835b-36796040e303",
        "document": "The IF function is one of the most popular functions in Excel, and it allows you to make logical comparisons between a value and what you expect. So an IF statement can have two results. The first result is if your comparison is True, the second if your comparison is False. For example, =IF(C2=”Yes”,1,2) says IF(C2 = Yes, then return a 1, otherwise return a 2).\n\nIn the above example, cell D2 says: IF(C2 = Yes, then return a 1, otherwise return a 2) In this example, the formula in cell D2 says: IF(C2 = 1, then return Yes, otherwise return No)As you see, the IF function can be used to evaluate both text and values. It can also be used to evaluate errors. You are not limited to only checking if one thing is equal to another and returning a single result, you can also use mathematical operators and perform additional calculations depending on your criteria. You can also nest multiple IF functions together in order to perform multiple comparisons. In the above example, the IF function in D2 is saying IF(C2 Is Greater Than B2, then return “Over Budget”, otherwise return “Within Budget”) In the above illustration, instead of returning a text result, we are going to return a mathematical calculation. So the formula in E2 is saying IF(Actual is Greater than Budgeted, then Subtract the Budgeted amount from the Actual amount, otherwise return nothing). In this example, the formula in F7 is saying IF(E7 = “Yes”, then calculate the Total Amount in F5 * 8.25%, otherwise no Sales Tax is due so return 0) Note: If you are going to use text in formulas, you need to wrap the text in quotes (e.g. “Text”). The only exception to that is using TRUE or FALSE, which Excel automatically understands."
    },
    {
        "link": "https://ablebits.com/office-addins-blog/nested-if-excel-multiple-conditions",
        "document": "The tutorial explains how to use multiple IF in Excel and provides a couple of nested If formula examples for most common tasks.\n\nIf someone asks you what Excel function you use most often, what would your answer be? In most cases, it's the Excel IF function. A regular If formula that tests a single condition is very straightforward and easy to write. But what if your data requires more elaborate logical tests with multiple conditions? In this case, you can include several IF functions in one formula, and these multiple If statements are called Excel Nested IF. The biggest advantage of the nested If statement is that it allows you to check more than one condition and return different values depending on the results of those checks, all in a single formula.\n\nMicrosoft Excel has limits to the levels of nested IFs. In Excel 2003 and lower, up to 7 levels were allowed. In Excel 2007 and higher, you can nest up to 64 IF functions in one formula.\n\nFurther on in this tutorial, you will find a couple of Excel nested If examples along with a detailed explanation of their syntax and logic.\n\nHere's a typical example of Excel If with multiple conditions. Supposing you have a list of students in column A and their exam scores in column B, and you want to classify the scores with the following conditions: And now, let's write a nested IF function based on the above criteria. It's considered a good practice to begin with the most important condition and keep your functions as simple as possible. Our Excel nested IF formula goes as follows: And works exactly as it should:\n\n I've heard some people say that Excel multiple If is driving them crazy :) Try looking at it at a different angle:\n\n What the formula actually tells Excel to do is to evaluate the logical_test of the first IF function and, if the condition is met, return the value supplied in the value_if_true argument. If the condition of the 1st If function is not met, then test the 2nd If statement, and so on. IF(check if B2>=249, if true - return \"Excellent\", or else \n\n IF(check if B2>=200, if true - return \"Good\", or else\n\n IF(check if B2>150, if true - return \"Satisfactory\", if false -\n\n return \"Poor\"))) If you need a nested IF formula with wildcard characters (partial match), check out this example: If cell contains, then return different values.\n\n\n\nExample 2. Multiple If with arithmetic calculations Here's another typical task: the unit price varies depending on the specified quantity, and your goal is to write a formula that calculates the total price for any amount of items input in a specific cell. In other words, your formula needs to check multiple conditions and perform different calculations depending on what amount range the specified quantity falls in: This task can also be accomplished by using multiple IF functions. The logic is the same as in the above example, the only difference is that you multiply the specified quantity by the value returned by nested IFs (i.e. the corresponding price per unit). Assuming the user enters the quantity in cell B8, the formula is as follows: And the result will look something similar to this:\n\n As you understand, this example demonstrates only the general approach, and you can easily customize this nested If function depending on your particular task. For example, instead of \"hard-coding\" the prices in the formula, you can reference the cells containing those values (cells B2 to B6). This will enable your users to edit the source data without having to update the formula: Or, you may want to include an additional IF function(s) that fixes an upper, lower or both bounds of the amount range. When the quantity is outside the range, the formula will display an \"out of the range\" message. For example: =IF(OR(B8>200,B8<1), \"Qty. out of range\", B8*IF(B8>=101,12, IF(B8>=50, 13, IF(B8>=20, 16, IF( B8>=11, 18, IF(B8>=1, 20, \"\")))))) \n\n The nested IF formulas described above work in all versions of Excel. In Excel 365 and Excel 2021, you can also use the IFS function for the same purpose. Advanced Excel users that are familiar with array formulas, can use this formula that basically does the same thing as the nested IF function discussed above. Though the array formula is far more difficult to comprehend, let along to write, it has one indisputable advantage - you specify the range of cells containing your conditions rather than referencing each condition individually. This makes the formula more flexible, and if your users happen to change any of the existing conditions or add a new one, you will only have to update a single range reference in the formula.\n\n\n\nAs you have just seen, there is no rocket science in using multiple IF in Excel. The following tips will help you improve your nested IF formulas and prevent common mistakes. In Excel 2007 - Excel 365, you can nest up to 64 IF functions. In older versions of Excel 2003 and lower, up to 7 nested IF functions can be used. However, the fact that you can nest a lot of IFs in one formula doesn't mean you should. Please keep in mind that each additional level makes your formula more difficult to understand and troubleshoot. If your formula has too many nested levels, you may want to optimize it by using one of these alternatives.\n\n The order of nested IF functions matters The Excel nested IF function evaluates the logical tests in the order they appear in the formula, and as soon as one of the conditions evaluates to TRUE, the subsequent conditions are not tested. In other words, the formula stops after the first TRUE result. Let's see how it works in practice. With B2 equal to 274, the nested IF formula below evaluates the first logical test (B2>249), and returns \"Excellent\" because this logical test is TRUE: Now, let's reverse the order of IF functions: The formula tests the first condition, and because 274 is greater than 150, the result of this logical test is also TRUE. Consequently, the formula returns \"Satisfactory\" without testing other conditions. You see, changing the order of IF functions changes the result:\n\n \n\n To watch the logical flow of your nested IF formula step-by-step, use the Evaluate Formula feature located on the Formula tab, in the Formula Auditing group. The underlined expression is the part currently under evaluation, and clicking the Evaluate button will show you all the steps in the evaluation process. For example, the evaluation of the first logical test of the nested IF formula shown in the screenshot below will go as follows: B2>249; 274>249; TRUE; Excellent.\n\n \n\n Balance the parenthesis of nested IF functions One of the main challenges with nested IFs in Excel is matching parenthesis pairs. If the parentheses do not match, your formula won't work. Luckily, Microsoft Excel provides a couple of features that can help you to balance the parentheses when editing a formula:\n• If you have more than one set of parentheses, the parenthesis pairs are shaded in different colors so that the opening parenthesis matches the closing one.\n• When you close a parenthesis, Excel briefly highlights the matching pair. The same bolding, or \"flickering\", effect is produced when you move through the formula by using the arrow keys. For more information, please see Match parenthesis pairs in Excel formulas.\n\n When building logical tests of your nested IF formulas, remember that text and numbers should be treated differently - always enclose text values in double quotes, but never put quotes around numbers: The logical test of the second formula will return FALSE even if the value in B2 is greater than 249. Why? Because 249 is a number and \"249\" is a numeric string, which are two different things.\n\n Add spaces or line breaks to make nested IFs easier to read When building a formula with multiple nested IF levels, you can make the formula's logic clearer by separating different IF functions with spaces or line breaks. Excel doesn't care about extra spacing in a formula, so you may not worry about mangling it. To move a certain part of the formula to the next line, just click where you want to insert a line break, and press Alt + Enter. Then, expand the formula bar as much as needed and you will see that your nested IF formula has become much easier to understand.\n\n \n\n\n\nThis is how you use an If formula in Excel with multiple conditions. I thank you for reading and hope to see you on our blog next week."
    },
    {
        "link": "https://support.microsoft.com/en-us/office/if-function-nested-formulas-and-avoiding-pitfalls-0b22ff44-f149-44ba-aeb5-4ef99da241c8",
        "document": "The IF function allows you to make a logical comparison between a value and what you expect by testing for a condition and returning a result if True or False.\n• =IF(Something is True, then do something, otherwise do something else) So an IF statement can have two results. The first result is if your comparison is True, the second if your comparison is False. IF statements are incredibly robust, and form the basis of many spreadsheet models, but they are also the root cause of many spreadsheet issues. Ideally, an IF statement should apply to minimal conditions, such as Male/Female, Yes/No/Maybe, to name a few, but sometimes you might need to evaluate more complex scenarios that require nesting* more than 3 IF functions together. * \"Nesting\" refers to the practice of joining multiple functions together in one formula.\n\nWhile Excel will allow you to nest up to 64 different IF functions, it's not at all advisable to do so. Why?\n• Multiple IF statements require a great deal of thought to build correctly and make sure that their logic can calculate correctly through each condition all the way to the end. If you don't nest your formula 100% accurately, then it might work 75% of the time, but return unexpected results 25% of the time. Unfortunately, the odds of you catching the 25% are slim.\n• Multiple IF statements can become incredibly difficult to maintain, especially when you come back some time later and try to figure out what you, or worse someone else, was trying to do. If you find yourself with an IF statement that just seems to keep growing with no end in sight, it's time to put down the mouse and rethink your strategy. Let's look at how to properly create a complex nested IF statement using multiple IFs, and when to recognize that it's time to use another tool in your Excel arsenal.\n\nFollowing is an example of a relatively standard nested IF statement to convert student test scores to their letter grade equivalent.\n• This complex nested IF statement follows a straightforward logic:\n• If the Test Score (in cell D2) is greater than 89, then the student gets an A\n• If the Test Score is greater than 79, then the student gets a B\n• If the Test Score is greater than 69, then the student gets a C\n• If the Test Score is greater than 59, then the student gets a D\n• Otherwise the student gets an F This particular example is relatively safe because it's not likely that the correlation between test scores and letter grades will change, so it won't require much maintenance. But here's a thought – what if you need to segment the grades between A+, A and A- (and so on)? Now your four condition IF statement needs to be rewritten to have 12 conditions! Here's what your formula would look like now: It's still functionally accurate and will work as expected, but it takes a long time to write and longer to test to make sure it does what you want. Another glaring issue is that you've had to enter the scores and equivalent letter grades by hand. What are the odds that you'll accidentally have a typo? Now imagine trying to do this 64 times with more complex conditions! Sure, it's possible, but do you really want to subject yourself to this kind of effort and probable errors that will be really hard to spot? Tip: Every function in Excel requires an opening and closing parenthesis (). Excel will try to help you figure out what goes where by coloring different parts of your formula when you're editing it. For instance, if you were to edit the above formula, as you move the cursor past each of the ending parentheses \")\", its corresponding opening parenthesis will turn the same color. This can be especially useful in complex nested formulas when you're trying to figure out if you have enough matching parentheses.\n\nFollowing is a very common example of calculating Sales Commission based on levels of Revenue achievement. This formula says IF(C9 is Greater Than 15,000 then return 20%, IF(C9 is Greater Than 12,500 then return 17.5%, and so on... While it's remarkably similar to the earlier Grades example, this formula is a great example of how difficult it can be to maintain large IF statements – what would you need to do if your organization decided to add new compensation levels and possibly even change the existing dollar or percentage values? You'd have a lot of work on your hands! Tip: You can insert line breaks in the formula bar to make long formulas easier to read. Just press ALT+ENTER before the text you want to wrap to a new line. Here is an example of the commission scenario with the logic out of order: Can you see what's wrong? Compare the order of the Revenue comparisons to the previous example. Which way is this one going? That's right, it's going from bottom up ($5,000 to $15,000), not the other way around. But why should that be such a big deal? It's a big deal because the formula can't pass the first evaluation for any value over $5,000. Let's say you've got $12,500 in revenue – the IF statement will return 10% because it is greater than $5,000, and it will stop there. This can be incredibly problematic because in a lot of situations these types of errors go unnoticed until they've had a negative impact. So knowing that there are some serious pitfalls with complex nested IF statements, what can you do? In most cases, you can use the VLOOKUP function instead of building a complex formula with the IF function. Using VLOOKUP, you first need to create a reference table: This formula says to look for the value in C2 in the range C5:C17. If the value is found, then return the corresponding value from the same row in column D. Similarly, this formula looks for the value in cell B9 in the range B2:B22. If the value is found, then return the corresponding value from the same row in column C. Note: Both of these VLOOKUPs use the TRUE argument at the end of the formulas, meaning we want them to look for an approxiate match. In other words, it will match the exact values in the lookup table, as well as any values that fall between them. In this case the lookup tables need to be sorted in Ascending order, from smallest to largest. VLOOKUP is covered in much more detail here, but this is sure a lot simpler than a 12-level, complex nested IF statement! There are other less obvious benefits as well:\n• VLOOKUP reference tables are right out in the open and easy to see.\n• Table values can be easily updated and you never have to touch the formula if your conditions change.\n• If you don't want people to see or interfere with your reference table, just put it on another worksheet."
    },
    {
        "link": "https://ablebits.com/office-addins-blog/excel-nested-if-statement",
        "document": "The tutorial explains how to use the nested IF function in Excel to check multiple conditions. You will also learn a few other functions that could be good alternatives to using a nested formula in Excel.\n\nHow do you usually implement a decision-making logic in your Excel worksheets? In most cases, you'd use an IF formula to test your condition and return one value if the condition is met, another value if the condition is not met. To evaluate more than one condition and return different values depending on the results, you nest multiple IFs inside each other.\n\nThough very popular, the nested IF statement is not the only way to check multiple conditions in Excel. In this tutorial, you will find a handful of alternatives that are definitely worth exploring.\n\nHere's the classic Excel nested IF formula in a generic form: You can see that each subsequent IF function is embedded into the value_if_false argument of the previous function. Each IF function is enclosed in its own set of parentheses, but all the closing parentheses are at the end of the formula. Our generic nested IF formula evaluates 3 conditions, and returns 4 different results (result 4 is returned if none of the conditions is TRUE). Translated into a human language, this nested IF statement tells Excel to do the following: Test condition1, if TRUE - return result1, if FALSE -\n\ntest condition2, if TRUE - return result2, if FALSE -\n\n test condition3, if TRUE - return result3, if FALSE -\n\nreturn result4 As an example, let's find out commissions for a number of sellers based on the amount of sales they've made: In math, changing the order of addends does not change the sum. In Excel, changing the order of IF functions changes the result. Why? Because a nested IF formula returns a value corresponding to the first TRUE condition. Therefore, in your nested IF statements, it's very important to arrange the conditions in the right direction - high to low or low to high, depending on your formula's logic. In our case, we check the \"highest\" condition first, then the \"second highest\", and so on: If we placed the conditions in the reverse order, from the bottom up, the results would be all wrong because our formula would stop after the first logical test (B2>=1) for any value greater than 1. Let's say, we have $100 in sales - it is greater than 1, so the formula would not check other conditions and return 3% as the result. If you'd rather arrange the conditions from low to high, then use the \"less than\" operator and evaluate the \"lowest\" condition first, then the \"second lowest\", and so on: As you see, it takes quite a lot of thought to build the logic of a nested IF statement correctly all the way to the end. And although Microsoft Excel allows nesting up to 64 IF functions in one formula, it is not something you'd really want to do in your worksheets. So, if you (or someone else) are gazing at your Excel nested IF formula trying to figure out what it actually does, it's time to reconsider your strategy and probably choose another tool in your arsenal. For more information, please see Excel nested IF statement.\n\n\n\nIn case you need to evaluate a few sets of different conditions, you can express those conditions using OR as well as AND function, nest the functions inside IF statements, and then nest the IF statements into each other. Nested IF in Excel with OR statements By using the OR function you can check two or more different conditions in the logical test of each IF function and return TRUE if any (at least one) of the OR arguments evaluates to TRUE. To see how it actually works, please consider the following example. Supposing, you have two columns of sales, say January sales in column B and February sales in column C. You wish to check the numbers in both columns and calculate the commission based on a higher number. In other words, you build a formula with the following logic: if either Jan or Feb sales are greater than $150, the seller gets 10% commission, if Jan or Feb sales are greater than or equal to $101, the seller gets 7% commission, and so on. To have it done, write a few OF statements like OR(B2>150, C2>150) and nest them into the logical tests of the IF functions discussed above. As the result, you get this formula: And have the commission assigned based on the higher sales amount:\n\n For more formula examples, please see Excel IF OR statement.\n\n Nested IF in Excel with AND statements If your logical tests include multiple conditions, and all of those conditions should evaluate to TRUE, express them by using the AND function. For example, to assign the commissions based on a lower number of sales, take the above formula and replace OR with AND statements. To put it differently, you tell Excel to return 10% only if Jan and Feb sales are greater than $150, 7% if Jan and Feb sales are greater than or equal to $101, and so on. As the result, our nested IF formula calculates the commission based on the lower number in columns B and C. If either column is empty, there is no commission at all because none of the AND conditions is met:\n\n If you'd like to return 0% instead of blank cells, replace an empty string (''\") in the last argument with 0%: More information can be found here: Excel IF with multiple AND/OR conditions.\n\n\n\nVLOOKUP instead of nested IF in Excel When you are dealing with \"scales\", i.e. continuous ranges of numerical values that together cover the entire range, in most cases you can use the VLOOKUP function instead of nested IFs. For starters, make a reference table like shown in the screenshot below. And then, build a Vlookup formula with approximate match, i.e. with the range_lookup argument set to TRUE. Assuming the lookup value is in B2 and the reference table is F2:G5, the formula goes as follows: Please notice that we fix the table_array with absolute references ($F$2:$G$5) for the formula to copy correctly to other cells:\n\n By setting the last argument of your Vlookup formula to TRUE, you tell Excel to search for the closest match - if an exact match is not found, return the next largest value that is smaller than the lookup value. As the result, your formula will match not only the exact values in the lookup table, but also any values that fall in between. For example, the lookup value in B3 is $95. This number does not exist in the lookup table, and Vlookup with exact match would return an #N/A error in this case. But Vlookup with approximate match continues searching until it finds the nearest value that is less than the lookup value (which is $50 in our example) and returns a value from the second column in the same row (which is 5%). But what if the lookup value is less than the smallest number in the lookup table or the lookup cell is empty? In this case, a Vlookup formula will return the #N/A error. If it's not what you actually want, nest VLOOKUP inside IFERROR and supply the value to output when the lookup value is not found. For example: Important note! For a Vlookup formula with approximate match to work correctly, the first column in the lookup table must be sorted in ascending order, from smallest to largest. For more information, please see Exact match VLOOKUP vs. approximate match VLOOKUP.\n\n\n\nIFS statement as alternative to nested IF function In Excel 2016 and later versions, Microsoft introduced a special function to evaluate multiple conditions - the IFS function. An IFS formula can handle up to 127 logical_test/value_if_true pairs, and the first logical test that evaluates to TRUE \"wins\": In accordance with the above syntax, our nested IF formula can be reconstructed in this way: Please pay attention that the IFS function returns the #N/A error if none of the specified conditions is met. To avoid this, you can add one more logical_test/value_if_true to the end of your formula that will return 0 or empty string (\"\") or whatever value you want if none of the previous logical tests is TRUE: As the result, our formula will return an empty string (blank cell) instead of the #N/A error if a corresponding cell in column B is empty or contains text or negative number.\n\n Note. Like nested IF, Excel's IFS function returns a value corresponding to the first condition that evaluates to TRUE, which is why the order of logical tests in an IFS formula matters. For more information, please see Excel IFS function instead of nested IF.\n\n\n\nCHOOSE instead of nested IF formula in Excel Another way to test multiple conditions within a single formula in Excel is using the CHOOSE function, which is designed to return a value from the list based on a position of that value. Applied to our sample dataset, the formula takes the following shape: In the first argument (index_num), you evaluate all the conditions and add up the results. Given that TRUE equates to 1 and FALSE to 0, this way you calculate the position of the value to return. For example, the value in B2 is $150. For this value, the first 3 conditions are TRUE and the last one (B2 > 150) is FALSE. So, index_num equals to 3, meaning the 3rd value is returned, which is 7%.\n\n Tip. If none of the logical tests is TRUE, index_num is equal to 0, and the formula returns the #VALUE! error. An easy fix is wrapping CHOOSE in the IFERROR function like this: For more information, please see Excel CHOOSE function with formula examples.\n\nSWITCH function as a concise form of nested IF in Excel In situations when you are dealing with a fixed set of predefined values, not scales, the SWITCH function can be a compact alternative to complex nested IF statements: The SWITCH function evaluates expression against a list of values and returns the result corresponding to the first found match. In case, you'd like to calculate the commission based on the following grades, rather than sales amounts, you could use this compact version of nested IF formula in Excel: Or, you can make a reference table like shown in the screenshot below and use cell references instead of hardcoded values: Please notice that we lock all references except the first one with the $ sign to prevent them from changing when copying the formula to other cells:\n\n Note. The SWITCH function is only available in Excel 2016 and higher. For more information, please see SWITCH function - the compact form of nested IF statement.\n\n\n\nYou can see that Microsoft Excel provides a handful of good alternatives to nested IF formulas, and hopefully this tutorial has given you some clues on how to leverage them in your worksheets. To have a closer look at the examples discussed in this tutorial, you are welcome to download our sample workbook below. I thank you for reading and hope to see you on our blog next week!"
    },
    {
        "link": "https://superuser.com/questions/553962/suggestions-for-building-and-managing-complex-functions-in-excel",
        "document": "Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers."
    },
    {
        "link": "https://dev.innovation.schoolofmusic.ucla.edu/20-tips-for-mastering-multiple-if-conditions-in-excel-uncover-efficient-formulas",
        "document": "Excel is a powerful tool for data analysis and management, and being able to handle complex conditions is a valuable skill. Multiple IF functions, when used effectively, can greatly enhance your data manipulation capabilities. In this blog post, we will explore over 20 tips and techniques to help you master multiple IF conditions in Excel, ensuring your formulas are efficient and your data analysis is streamlined.\n\nMultiple IF conditions, also known as nested IF statements, allow you to evaluate multiple conditions and return different results based on the outcomes. This is particularly useful when you need to make decisions or perform calculations based on various criteria. By nesting IF functions, you can create sophisticated logic within your Excel formulas.\n\nWhen working with multiple IF conditions, it’s best to start with simple formulas and gradually build complexity. Begin with a single IF function and understand its behavior before adding more conditions. This approach will help you grasp the fundamentals and avoid confusion.\n\nConsistency is key when writing complex formulas. Ensure that you use consistent formatting for your IF conditions. This includes proper indentation, clear spacing, and consistent use of parentheses. Well-formatted formulas are easier to read, understand, and troubleshoot.\n\nComplex conditions can be daunting, but breaking them down into smaller, manageable parts can make them more approachable. Identify the individual criteria and create separate IF functions for each. This modular approach improves readability and makes it easier to debug and maintain your formulas.\n\nExcel provides a range of logical operators that can enhance your multiple IF conditions. Operators like AND, OR, and NOT allow you to combine conditions and create more flexible logic. For example, you can use AND to require multiple conditions to be true, or OR to return a result if any of the conditions are met.\n\nWhile nesting IF functions is powerful, excessive nesting can lead to complex and hard-to-maintain formulas. Aim to keep your formulas as flat as possible by using alternative functions like VLOOKUP, INDEX-MATCH, or SUMIFS when applicable. These functions can often simplify your calculations and improve performance.\n\nExcel evaluates conditions in a specific order, known as operator precedence. Understanding this order is crucial when working with multiple IF conditions. Parentheses can be used to override the default precedence and ensure your formula evaluates as intended. Review the Excel documentation or online resources to familiarize yourself with operator precedence.\n\nThe IFERROR function is a valuable tool when working with multiple IF conditions. It allows you to handle errors gracefully and provide alternative results. By wrapping your IF functions within IFERROR, you can avoid error messages and improve the user experience.\n\nNamed ranges can greatly enhance the readability and maintainability of your formulas. Instead of referring to cell references directly, assign meaningful names to your ranges. This makes your formulas more intuitive and reduces the risk of errors caused by changing cell references.\n\nTesting is an essential step in mastering multiple IF conditions. Create a test dataset with various scenarios and expected outcomes. Run your formulas against this dataset to ensure they produce the correct results. This process helps you catch errors early and improves the reliability of your calculations.\n\nLarge datasets or complex formulas can impact Excel’s performance. Optimize your formulas by avoiding unnecessary calculations and using efficient functions. Consider using array formulas or Excel’s built-in optimization tools to improve performance.\n\nStudying real-world examples is an excellent way to improve your skills with multiple IF conditions. Search for Excel formula examples online or explore Excel communities where users share their solutions. By analyzing and understanding how others approach similar problems, you can expand your formula writing capabilities.\n\nExcel’s built-in help and documentation are invaluable resources for mastering multiple IF conditions. The Excel support website provides detailed explanations, examples, and troubleshooting guides for various functions and features. Make use of these resources to deepen your understanding and find solutions to specific challenges.\n\nLike any skill, mastering multiple IF conditions requires regular practice. Dedicate time to work on Excel exercises or tackle real-world data analysis tasks. The more you practice, the more comfortable you’ll become with creating efficient and effective formulas.\n\nExcel offers a wide range of functions that can simplify your multiple IF conditions. Functions like VLOOKUP, HLOOKUP, and SUMIF can often replace complex nested IF statements. Explore these functions and learn how to use them effectively to streamline your formulas.\n\nAs you master multiple IF conditions, consider creating a personal formula library. Document the formulas you’ve created, along with their purpose and any relevant notes. This library will serve as a valuable resource for future projects and help you avoid reinventing the wheel.\n\nIn addition to IFERROR, Excel provides other error handling functions like ISERROR and ISNA. These functions can be used to detect and handle errors within your formulas. By incorporating error handling into your multiple IF conditions, you can ensure your calculations remain robust and reliable.\n\nExcel’s function library is a comprehensive collection of built-in functions. Explore this library to discover functions that can simplify your multiple IF conditions. Functions like COUNTIF, SUMIF, and AVERAGEIF can perform complex calculations with ease.\n\nHardcoding values directly into your formulas can make them less flexible and harder to maintain. Instead, use cell references or named ranges to input values. This approach allows you to easily update your formulas without manually changing hardcoded values.\n\nExcel’s error messages can provide valuable insights into issues with your formulas. When you encounter an error, carefully review the message and try to understand the underlying cause. This will help you identify and correct mistakes in your multiple IF conditions.\n\nExcel is a powerful tool, and sharing your knowledge with others can lead to growth and improvement. Engage with Excel communities, attend webinars, or participate in online forums to learn from experienced users. Sharing your own formulas and seeking feedback can also enhance your skills and provide new perspectives.\n\nConditional formatting is a powerful feature in Excel that allows you to visually highlight cells based on specific conditions. It can be a useful tool when working with multiple IF conditions, as it provides a visual representation of your data. Explore conditional formatting to enhance the presentation and analysis of your data.\n\nExcel’s data validation tools can help ensure that your data meets certain criteria. By setting up data validation rules, you can restrict user input to specific values or ranges. This can be particularly useful when working with multiple IF conditions, as it helps maintain data integrity.\n\nComplex formulas can become hard to read and understand over time. Optimize your formulas for readability by using clear and descriptive names for ranges and variables. This improves maintainability and makes it easier for others (and yourself) to understand your work.\n\nWorking with complex formulas can sometimes lead to errors or unintended changes. Implement a backup and version control system for your Excel files. This ensures that you can easily revert to previous versions and protects your work from accidental modifications.\n\nIf you’re serious about mastering multiple IF conditions and Excel in general, consider investing in professional development. Attend Excel training courses, workshops, or online tutorials to deepen your understanding and learn advanced techniques.\n\nExcel is constantly evolving, and new features and improvements are regularly introduced. Stay updated with Excel’s latest versions and explore new functions and tools. This ensures that you’re utilizing the most efficient and effective methods for your data analysis tasks.\n\nMastering multiple IF conditions in Excel is a valuable skill that empowers you to handle complex data analysis tasks with ease. By following the tips and techniques outlined in this blog post, you can create efficient and reliable formulas. Remember to start simple, utilize Excel’s built-in functions and resources, and practice regularly. With dedication and a solid understanding of Excel’s capabilities, you’ll become a master of multiple IF conditions and unlock the full potential of this powerful spreadsheet tool."
    },
    {
        "link": "https://datacamp.com/tutorial/nested-if-excel",
        "document": "Learn how to analyze data with PivotTables and intermediate logical functions before moving on to tools such as what-if analysis and forecasting."
    }
]