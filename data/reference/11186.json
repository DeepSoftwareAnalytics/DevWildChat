[
    {
        "link": "https://rimworldwiki.com/wiki/Modding_Tutorials/Xml_Adding_Weapons_Traits_Research",
        "document": "This page is a tutorial on how to create a rimworld mod it will step you through the process of creating a mod from scratch. from basic files structure to writing code for your mod. This tutorial is aimed at people who have never created a mod before and are looking to get started. and is meant to be a updated guide to the old tutorials on the wiki.\n\nThis is a follow up to my previous tutorial on how to make a mod. if you have not:\n• Added a new item to the game\n• Tested the mod in game using the Debug menu\n\nThen you should go back a read the previous tutorial.\n\nBy the end of this tutorial you will have:\n• Learned how to add sounds to your mod\n• Learned how to add a new trait to the game\n• Learned how to create a new research project\n• Learned how to create a new recipe\n\nRimworld dotnet template is a mod template that can be used to quickly set up a mod. as by now you should have a basic understanding of how mods work it is recommended to use the template to save time. If you want to do things manually thats fine (Your life).\n\nIn order to make modding easier I have created a set of code snippets for Visual Studio Code. These snippets will help you create the Xml structure for your mod. To use these snippets open VsCode then:\n\nthis will open a file called xml.json. copy this code and paste it into the xml.json file. save the file and you are ready to go.\n\nThis will allow you to type \"rwweapon\" to generate the skeleton for a new weapon. you can then fill in the details for your weapon.\n\nThe first thing we are going to do is create a new weapon.\n\nStart by creating a new file in the Defs folder called \"ThingDefs_Weapons.xml\". this is where we will put the xml for our new weapon. \n\n Start by adding the Xml header to the file.\n\nIf using VsCode simply type \"rwxml\" and press tab to generate the header. \n\n\n\nBefore we can make a weapon there needs to be a bullet that the weapon can fire.\n\n\n\n If you added the code snippets you can save time by typing \"rwbullet\" and pressing tab. this will generate the skeleton for the bullet, you can then fill in the details (pushing tab will move you to the next field). \n\n\n\nNote: The weapon def is long and extremely picky with spelling, formatting and capitalization. if you have not added the code snippets I recommend you add them now. \n\n\n\nAwesome we now have a bullet but we need a weapon to fire it. for now lets uses sounds and textures that are already in the game. \n\n\n\n\n\n If using the code snippets use \"rwweapon\" to generate the skeleton for the weapon. \n\n\n\nThats a lot of code so lets break it down. \n\n\n\nWe start by defining the weapon as a makeable gun. Then we give it a gameId (defName), a user friendly name (label) and a description. \n\n\n\nnow we define the texture (in this case we have specified the vanilla revolver texture) and the sound the weapon makes when a pawn picks it up. \n\n\n\nThe stats are the weapons weight and its accuracy at different ranges. \n\n\n\nAs we are using BaseHumanMakeableGun the weapon will be at a machining table. We define the resources and skill required to make the weapon. \n\n\n\nThe verbs define (in this case) the how the weapon shoots. We define the projectile we made earlier, the warmup time and the burst shot count. Verbs is also where you define the range and shooting sound. \n\n\n\nIn this case the tools are used to define the melee attacks of the weapon. Making sure to enclose each attack in a \"li\" tag give your attack a label, define the damage type, how much damage it does and lastly give it a cooldown time. \n\n\n\nBefore we forget we need to close the \"ThingDef\"\n\nAnd with that we have a working weapon with a custom bullet and recipe. to improve the weapon you could add a custom sound and texture or change the stats to your liking. The best way to learn is to experiment or look at other mods (I recommend looking at Vanilla Weapons Expanded as their mods keep the code clean and tidy). \n\n\n\nCurrently the weapon is unlocked by default. Lets add a research project to unlock it. \n\n\n\nWhile we could add the research project to the same file as the weapon it is good practice to keep things tidy. So let's make a new file in the \"Defs\" folder called \"ResearchProjectDef.xml\" \n\n Remember to add the Xml header and \"Defs\" tag. (Remember this can be done with \"rwxxml\")\n\nThe Xml for the research project is shorter than the weapon however it still requires correct spelling and syntax. \n\n\n\n\n\n If using the code snippets use \"rwresearch\" \n\n\n\nOk lets break down the code. \n\n\n\nJust like the weapon we give the project a gameId, and a user friendly name and a description. \n\n\n\nThe tech level will scale the cost of the research project based on the colony's tech level (Tribal starts will be more expensive than crashlanded). the baseCost is the cost of the project before scaling for tech level. prerequisites are the research projects that must be completed before this project can be researched. (In this case we are requiring Gunsmithing) \n\n\n\nThis is the position of the project in the research tree. This may take some trial and error to get right (Or you could use a mod like \"ResearchPowl\" that makes the tree easier to navigate) \n\n\n\nRight we have a research project but we need to tell the game to use it. to do this we need to edit our weapons recipeMaker. \n\n\n\nBy simply adding the researchPrerequisite tag and giving it the gameId of the research project we have locked the weapon behind the research project. \n\n\n\nTraits are a great way to add new gameplay mechanics to your mod. For now we will be adding a trait that makes the colonist have a higher Crafting skill and lower carrying capacity. \n\n\n\nTo keep things tidy we will make a new file in the \"Defs\" folder called \"TraitDef.xml\" (Remember to add the Xml header and \"Defs\" tag. [Remember this can be done with \"rwxxml\"])\n\nThe Xml for the trait is quite straight forward once you know what each tag does (for code snippets use \"rwtrait\") \n\n\n\nRight, let's break down the code. \n\n\n\nLike the other defs we give the trait a gameId however this time we also give it a commonality. This is the chance that the trait will be given to a colonist. also note that the Label and Description are inside the degreeDatas tag and not the main tag. \n\n\n\nDisabling work tags is a great way to make traits more unique. In this case we are disabling the animals work type. Remember to put all the work tags you want to disable inside their own <li> tag. \n\n\n\nThe degree data is where we define the effects of the trait. This also includes the label (player friendly name) and description. Stat offsets are changes to the colonists stats. In this case we are increasing the colonists carrying capacity by 25 and increasing work speed by 20%. Skill gains are static increases to the colonists skills. In this case we are increasing the colonists crafting skill by 4. \n\n\n\nCongratulations you have made your first trait. for now it only changes stats and skills however traits can do a lot more. The best way to learn about the more advanced possibilities is to look at other mods that add traits. \n\n\n\nAs with the other tutorials I have made I have the example mods on github for you to download and look at. \n\n\n\nNow that you have made a mod with content you can start to look at more advanced topics such as adding new buildings, and starting to use frameworks like Vanilla Expanded Framework."
    },
    {
        "link": "https://ludeon.com/forums/index.php?topic=33219.0",
        "document": ""
    },
    {
        "link": "https://rimworldwiki.com/wiki/Modding_Tutorials/Weapons_Guns",
        "document": "This page was originally created by Alistaire.\n\n\n\nIn this tutorial we will take a look at a specific item and break down its components, link this knowledge with other items and ultimately learn how to create your own items.\n• XML File Structure for knowledge on XML file structures and basic inheritance;\n• (Optional) Mod Folder Structure in case you want to set up a weapons mod;\n• (Optional) An XML code editor (recommended software) in case you want to set up a weapons mod.\n\n\n\n\n\nTo further understand the BaseGun and BaseBullet parents, we will now do the following:\n• Firstly we'll break down the simple parts of their code;\n• Next up we're breaking down the more complicated part;\n• Lastly I'll post the source code for both of them - they shouldn't be or have to be edited.\n\n\n\n\n\nNow that we know about inheritance, we can take another look at the BaseGun Parent. All the code inside this parent is inherited by BaseHumanGun, which is in turn inherited by almost all weapons in Weapons_Guns.xml.\n\n Let's break down the rest of the code in BaseGun.\n\n\n\nThe following tags are relatively straightforward:\n\n\n\nAnd the last part is somewhat more complicated:\n\n\n\nIt's not recommended to edit these parents. A recent copy of them can be taken from ../Mods/Core/Defs/ThingDefs/Weapons_Guns.xml, and the RimWorld834Win (Version 0.11.834) version is shown below:\n\n\n\nGuns inherit from BaseHumanGun or sometimes from BaseGun. Each gun requires a bunch of tags and additionally accepts some other tags.\n\n\n\n\n\nEach gun requires the following tags:\n\n\n\n\n\nBullets hold information regarding damage, bullet speed and whether the bullet will explode, burst into flames, etc.\n\n Each bullet requires the following tags:\n\n\n\n\n\nThere's a few cases where guns don't entirely follow the previously described structure.\n\n\n\n\n\nSome guns, including the Assault rifle use the following code to add burstfire:\n\n\n\nThe weapon will fire burstShotCount times with a ticksBetweenBurstShots tick delay between each shot.\n\n\n\n\n\nThe Sniper rifle is only used by specific Raiders, and won't be used by the rest. This is because of the following code:\n\n\n\nAdding a weaponTag to both your weapon and a custom pawn makes it so the pawn will spawn in with that weapon.\n\nThings with a Bomb damageDef need an explosionRadius and will explode upon impact.\n\n\n\n\n\nThis bullet will explode into flames in a radius of 1.1 tiles, and it will spawn a Puddle_Fuel 70% of all impacts.\n\n\n\n\n\nMost weapons have a scale of 9, while some of the bigger weapons have a scale of 14.\n\n\n\n\n\nGuns like the Charge rifle only spawn on pawns with Spacer technology:\n\n\n\nTurrets use a gun from Weapons_Guns.xml which uses the following code:\n\n\n\nThis gun can't be seen in the colony inventory screen, can't be spawned in with a newly spawned pawn, isn't tradable (so it won't show up on traders) and its weaponTag is TurretGun to prevent it from being spawned in by accident.\n\n\n\n\n\nCentipedes will spawn with MechanoidGunHeavy weaponry. Heavy raiders will spawn with GunHeavy. The equippedStatOffsets of MoveSpeed of -0.25 slows its wearer down by 0.25 c/s\n\n\n\n\n\nThe Doomsday rocket uses a different shaderType which isn't effected by light levels to simulate it giving off light itself. It also has a different thingClass.\n\n\n\nThe gun is only traded by Exotic traders due to its tradeTags, is a single use (Verb_ShootOneUse) weapon which can only be shot by the player itself. It can target floor tiles, not only wall tiles.\n\n\n\n\n\nEven after applying the accuracy checks, this gun is still going to miss its target by 2.0 tiles."
    },
    {
        "link": "https://reddit.com/r/RimWorld/comments/13e9wzd/firsttime_modder_need_help_with_the_modding_guide",
        "document": "LETTER FROM LU: After the orbital brothel owner, bodyguards, and all of their families died of a Yayo overdose on the same day, Lu and her colleagues became defacto owners of the establishment.\n\nShe's doing much better these days."
    },
    {
        "link": "https://reddit.com/r/RimWorld/comments/olayyw/hi_op_here_im_delivering_you_my_beginners_guide",
        "document": "Took me a while, but here it is\n\n30 pages long, gosh darn. Most of that is pictures though, I promise. I also haven't shown it to anyone yet, so think of yourselves as beta testers. Okay let's do some FAQs:\n\nQ) Do I need to know anything to begin?\n\nA) Hopefully not. I go pretty slowly. If you have any coding skill or know XML you'll be able to skip a bunch of the tutorial.\n\nA) I don't have permission to create pages on the wiki (yeah, that's the actual reason). If someone wants to put it there they are more than welcome to. Also, if anyone wants to take it out of docs and use a more readable website, go for it.\n\nA) Most people seemed okay with text, and I'm not a great speaker/editor. If someone wants to make a video they can do that too, keep the video free and open to everyone though.\n\nQ) Will you make more tutorials?\n\nA) Hmmm.. Can't say at this point.\n\nSo that's it. I am (very) anxiously awaiting your feedback. Have fun :)"
    },
    {
        "link": "https://rimworldwiki.com/wiki/Modding_Tutorials/Xml_Adding_Weapons_Traits_Research",
        "document": "This page is a tutorial on how to create a rimworld mod it will step you through the process of creating a mod from scratch. from basic files structure to writing code for your mod. This tutorial is aimed at people who have never created a mod before and are looking to get started. and is meant to be a updated guide to the old tutorials on the wiki.\n\nThis is a follow up to my previous tutorial on how to make a mod. if you have not:\n• Added a new item to the game\n• Tested the mod in game using the Debug menu\n\nThen you should go back a read the previous tutorial.\n\nBy the end of this tutorial you will have:\n• Learned how to add sounds to your mod\n• Learned how to add a new trait to the game\n• Learned how to create a new research project\n• Learned how to create a new recipe\n\nRimworld dotnet template is a mod template that can be used to quickly set up a mod. as by now you should have a basic understanding of how mods work it is recommended to use the template to save time. If you want to do things manually thats fine (Your life).\n\nIn order to make modding easier I have created a set of code snippets for Visual Studio Code. These snippets will help you create the Xml structure for your mod. To use these snippets open VsCode then:\n\nthis will open a file called xml.json. copy this code and paste it into the xml.json file. save the file and you are ready to go.\n\nThis will allow you to type \"rwweapon\" to generate the skeleton for a new weapon. you can then fill in the details for your weapon.\n\nThe first thing we are going to do is create a new weapon.\n\nStart by creating a new file in the Defs folder called \"ThingDefs_Weapons.xml\". this is where we will put the xml for our new weapon. \n\n Start by adding the Xml header to the file.\n\nIf using VsCode simply type \"rwxml\" and press tab to generate the header. \n\n\n\nBefore we can make a weapon there needs to be a bullet that the weapon can fire.\n\n\n\n If you added the code snippets you can save time by typing \"rwbullet\" and pressing tab. this will generate the skeleton for the bullet, you can then fill in the details (pushing tab will move you to the next field). \n\n\n\nNote: The weapon def is long and extremely picky with spelling, formatting and capitalization. if you have not added the code snippets I recommend you add them now. \n\n\n\nAwesome we now have a bullet but we need a weapon to fire it. for now lets uses sounds and textures that are already in the game. \n\n\n\n\n\n If using the code snippets use \"rwweapon\" to generate the skeleton for the weapon. \n\n\n\nThats a lot of code so lets break it down. \n\n\n\nWe start by defining the weapon as a makeable gun. Then we give it a gameId (defName), a user friendly name (label) and a description. \n\n\n\nnow we define the texture (in this case we have specified the vanilla revolver texture) and the sound the weapon makes when a pawn picks it up. \n\n\n\nThe stats are the weapons weight and its accuracy at different ranges. \n\n\n\nAs we are using BaseHumanMakeableGun the weapon will be at a machining table. We define the resources and skill required to make the weapon. \n\n\n\nThe verbs define (in this case) the how the weapon shoots. We define the projectile we made earlier, the warmup time and the burst shot count. Verbs is also where you define the range and shooting sound. \n\n\n\nIn this case the tools are used to define the melee attacks of the weapon. Making sure to enclose each attack in a \"li\" tag give your attack a label, define the damage type, how much damage it does and lastly give it a cooldown time. \n\n\n\nBefore we forget we need to close the \"ThingDef\"\n\nAnd with that we have a working weapon with a custom bullet and recipe. to improve the weapon you could add a custom sound and texture or change the stats to your liking. The best way to learn is to experiment or look at other mods (I recommend looking at Vanilla Weapons Expanded as their mods keep the code clean and tidy). \n\n\n\nCurrently the weapon is unlocked by default. Lets add a research project to unlock it. \n\n\n\nWhile we could add the research project to the same file as the weapon it is good practice to keep things tidy. So let's make a new file in the \"Defs\" folder called \"ResearchProjectDef.xml\" \n\n Remember to add the Xml header and \"Defs\" tag. (Remember this can be done with \"rwxxml\")\n\nThe Xml for the research project is shorter than the weapon however it still requires correct spelling and syntax. \n\n\n\n\n\n If using the code snippets use \"rwresearch\" \n\n\n\nOk lets break down the code. \n\n\n\nJust like the weapon we give the project a gameId, and a user friendly name and a description. \n\n\n\nThe tech level will scale the cost of the research project based on the colony's tech level (Tribal starts will be more expensive than crashlanded). the baseCost is the cost of the project before scaling for tech level. prerequisites are the research projects that must be completed before this project can be researched. (In this case we are requiring Gunsmithing) \n\n\n\nThis is the position of the project in the research tree. This may take some trial and error to get right (Or you could use a mod like \"ResearchPowl\" that makes the tree easier to navigate) \n\n\n\nRight we have a research project but we need to tell the game to use it. to do this we need to edit our weapons recipeMaker. \n\n\n\nBy simply adding the researchPrerequisite tag and giving it the gameId of the research project we have locked the weapon behind the research project. \n\n\n\nTraits are a great way to add new gameplay mechanics to your mod. For now we will be adding a trait that makes the colonist have a higher Crafting skill and lower carrying capacity. \n\n\n\nTo keep things tidy we will make a new file in the \"Defs\" folder called \"TraitDef.xml\" (Remember to add the Xml header and \"Defs\" tag. [Remember this can be done with \"rwxxml\"])\n\nThe Xml for the trait is quite straight forward once you know what each tag does (for code snippets use \"rwtrait\") \n\n\n\nRight, let's break down the code. \n\n\n\nLike the other defs we give the trait a gameId however this time we also give it a commonality. This is the chance that the trait will be given to a colonist. also note that the Label and Description are inside the degreeDatas tag and not the main tag. \n\n\n\nDisabling work tags is a great way to make traits more unique. In this case we are disabling the animals work type. Remember to put all the work tags you want to disable inside their own <li> tag. \n\n\n\nThe degree data is where we define the effects of the trait. This also includes the label (player friendly name) and description. Stat offsets are changes to the colonists stats. In this case we are increasing the colonists carrying capacity by 25 and increasing work speed by 20%. Skill gains are static increases to the colonists skills. In this case we are increasing the colonists crafting skill by 4. \n\n\n\nCongratulations you have made your first trait. for now it only changes stats and skills however traits can do a lot more. The best way to learn about the more advanced possibilities is to look at other mods that add traits. \n\n\n\nAs with the other tutorials I have made I have the example mods on github for you to download and look at. \n\n\n\nNow that you have made a mod with content you can start to look at more advanced topics such as adding new buildings, and starting to use frameworks like Vanilla Expanded Framework."
    },
    {
        "link": "https://ludeon.com/forums/index.php?topic=33219.0",
        "document": ""
    },
    {
        "link": "https://ludeon.com/forums/index.php?topic=33219.75",
        "document": ""
    },
    {
        "link": "https://rimworldwiki.com/wiki/Modding_Tutorials/Xml_Patches",
        "document": "This page is a tutorial on how to create a RimWorld mod, it will step you through the process of creating a mod from scratch. From basic file structure to writing code for your mod. This tutorial is aimed at people who have never created a mod before and are looking to get started. And is meant to be an updated guide to the old tutorials on the wiki.\n\nThis is a follow-up to my previous tutorial on how to make a mod. If you have not:\n\nThen you should go back and read the previous tutorial.\n\nBy the end of this tutorial, you will have:\n• Making the assault rifle even more powerful\n\nThere are a few tools that will make your life easier when modding RimWorld.\n• Rimworld dotnet template is a mod template that can be used to quickly set up a mod.\n• RimWorld code snippets is a collection of code snippets that can be used to quickly add code to your mod.\n• On any game map with dev mode, click the Magnifying glass at the top of the screen will open the Debug inspector. Next to the visibility button is a toggle for “Deep inspection mode” This allows you to see the XML of any object in the game. This can be used to find the XPath for any value in the game.\n\nPatching is the process of adding or changing existing values in the game. For simple mods, this can be done with XML.\n\nFor this tutorial, we will be making the vanilla revolver do 100 damage instead of 12. To do this, we will need to patch the revolver's stats.\n\nIf using the code snippets, use \"rwpatch\" to generate the basic XML.\n\nTo start, we add the XML header and the patch tag.\n\nThe operation tag is used to tell the game what we want to do with the patch. In this case, we want to use the PatchOperationReplace class. This class will replace the value of the XPath with the value tag.\n\nWhat is happening is that the game is looking for the XPath and replacing the value with the value tag.\n\nThe XPath tag needs to point to the value you want to change and must be the exact path including all tags the value is in. Because of this, it is best to find the value you want to change in its XML file before you start on the patch. This will make it easier to find the XPath (Remember, the Defs of the base game and its DLCs are found in the Data folder in the game folder). This method can also change the values of any mod that uses XML to add content to the game.\n\nNow you have pointed to the value you want to change, it's time to change it. The value tag is where you put the new value. As we are using \"PatchOperationReplace\" anything in the value tag will replace the value of the XPath.\n\nNow that we have a basic understanding of how to patch the game with XML, let's look at a more complex example. For this example, we will make the assault rifle fire explosive bullets. To do this, we will need to patch the assault rifle's stats and add a new projectile.\n\nFirst, we need to make a new projectile that will be used by the assault rifle.\n\nJust like the previous tutorial but with a few changes.\n• In \"DamageDef\" instead of using “Bullet” we are using “Bomb” This will make the bullet do explosive damage.\n• The bullet has \"explosionRadius\", \"arcHeightFactor\" and \"shadowSize\" these are the values that control the explosion.\n\nNow that we have a new projectile, we need to patch the assault rifle to use it.\n\nBy using the \"PatchOperationSequence\" class we can make a patch that does multiple things. The first thing we do, is replacing the default projectile of the assault rifle with our new explosive bullet. However, now that the assault rifle is using an explosive bullet, we need to add a few more values to the XML file of the assault rifle. “This is done by using the \"PatchOperationAdd\" class. By entering the XPath of the assault rifle's verbs, we can add a forced miss radius and allow the assault rifle to target locations. Enjoy your new explosive assault rifle.\n\nThere are a few other patching operations that can be used to change the values of the game. While you can get away with using Add, Remove, and Replace for most basic patches, there are a few other operations that can be used to make more complex patches. It can be useful to familiarize yourself with these operations.\n\nAs with the previous tutorial, example code with comments can be found on github.\n\nNext, we will look at a couple of frameworks that allow you to make advanced mods easier."
    },
    {
        "link": "https://reddit.com/r/RimWorld/comments/olayyw/hi_op_here_im_delivering_you_my_beginners_guide",
        "document": "Took me a while, but here it is\n\n30 pages long, gosh darn. Most of that is pictures though, I promise. I also haven't shown it to anyone yet, so think of yourselves as beta testers. Okay let's do some FAQs:\n\nQ) Do I need to know anything to begin?\n\nA) Hopefully not. I go pretty slowly. If you have any coding skill or know XML you'll be able to skip a bunch of the tutorial.\n\nA) I don't have permission to create pages on the wiki (yeah, that's the actual reason). If someone wants to put it there they are more than welcome to. Also, if anyone wants to take it out of docs and use a more readable website, go for it.\n\nA) Most people seemed okay with text, and I'm not a great speaker/editor. If someone wants to make a video they can do that too, keep the video free and open to everyone though.\n\nQ) Will you make more tutorials?\n\nA) Hmmm.. Can't say at this point.\n\nSo that's it. I am (very) anxiously awaiting your feedback. Have fun :)"
    }
]