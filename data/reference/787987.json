[
    {
        "link": "https://wowwiki-archive.fandom.com/wiki/API_Region_ClearAllPoints",
        "document": "This wiki contains inaccurate and out-of-date information. Please head over to https://wowpedia.fandom.com for more accurate and up-to-date game information."
    },
    {
        "link": "https://wowwiki-archive.fandom.com/wiki/API_Region_SetPoint",
        "document": "Sets an attachment point of an UI component.\n\nThere are nine valid point values:\n• \"TOP\", \"RIGHT\" \"BOTTOM\" \"LEFT\": the center-points of the respective sides.\n• \"CENTER\": the center point of the frame rectangle.\n\nThe following are all equivalent.\n\nThe following is equivalent to the above, given that the parent frame of MainMenuBar is UIParent.\n• Behavior of this function with multiple anchors is complex. Generally, you can override points by setting them again (so repeated assignment to the \"TOPLEFT\" point of a frame would move the frame, unless other anchor points interfere). If you're repositioning a frame, call to eliminate unwanted interactions.\n• Offset units are relative to the screen's effective scale. WoW's screen always has a height of 768 units, while screen width varies with aspect ratio.\n• and must both be passed as arguments for either to take effect; they default to 0 only when neither is given. That is, will ignore the 40 rather than treat it as (+40,+0).\n• Secure frames will silently ignore calls to this function if the relative frame is a FontString.\n\nThe edge \"points\" (TOP, RIGHT, BOTTOM, LEFT) are not actual points, but... edges. To fully define a region position using edges alone, you will need to define all four (as opposed to using corners, where you only need two) edges.\n\nTherefore, defining an edge does not necessarily place a region relative to the center of that edge (For example, if you define TOP and RIGHT, the region will be placed at the TOPRIGHT corner). However, by default a region is \"pulled\" to the center if the number of points defined is insufficient.\n\nwill place Region to the top center of the relativeframe while adding a\n\nwill place Region in the top right corner and now Region is fully defined."
    },
    {
        "link": "https://addonstudio.org/mw/index.php?title=WoW:API_Region_ClearAllPoints&mobileaction=toggle_view_desktop",
        "document": "Removes all anchor points associated with this Region."
    },
    {
        "link": "https://wowinterface.com/forums/showthread.php?t=46733",
        "document": "I have a strange feeling that this is a good way to taint the UI or some such. Is it considered acceptable practice to destroy an object's SetPoint() function, similar to:I have a strange feeling that this is a good way to taint the UI or some such. It does cause taint. How bad the results of said taint will depend on the frame you used it on. Someone with more taint knowledge may be able to weigh in on this better.\n\n \n\n \n\n I have also tried to safely manipulate SetPoint as such:\n\n \n\n As mentioned below, this is a circular doohicky. Can be prevented like so:\n\n \n\n It does cause taint. How bad the results of said taint will depend on the frame you used it on. Someone with more taint knowledge may be able to weigh in on this better.As mentioned below, this is a circular doohicky. Can be prevented like so:\n\nYou will also need to clear its previous points or you could run into unexpected behavior. You will also need to clear its previous points or you could run into unexpected behavior. Ideally, this should be done before the call that runs the hook. Otherwise, you break the ability to have a frame dynamically resize via 2 or more points.\n\n \n\n Additionally, you're not necessarily destroying the original function. All methods of a frame reside in a metatable shared amongst all other frames of the same type. If for whatever reason, you want to restore the frame to its original functionality, you can just set the entry in the table back to nil. Understanding metatables can get tricky, but they are powerful if you know how they work. Ideally, this should be done before the call that runs the hook. Otherwise, you break the ability to have a frame dynamically resize via 2 or more points.Additionally, you're not necessarily destroying the original function. All methods of a frame reside in a metatable shared amongst all other frames of the same type. If for whatever reason, you want to restore the frame to its original functionality, you can just set the entry in the table back to. Understanding metatables can get tricky, but they are powerful if you know how they work. \n\n \n\n \"All I want is a pretty girl, a decent meal, and the right to shoot lightning at fools.\"\n\n\n\nframe:SetPoint(), which should be enough by itself, but to clear and redefine the frame's points. What I would suggest is setting the frame's points before disabling the frame:SetPoint() metamethod on said frame.\n\n \n\n frame:SetPoint( ); frame.SetPoint=function() end;-- Usually a nil value in the frame's table itself Remember, when you try to access a table field that has a nil value, Lua falls back to the __index field of its metatable if one exists. It just seems like a waste of CPU power to not only block normal calls to, which should be enough by itself, but to clear and redefine the frame's points. What I would suggest is setting the frame's points before disabling themetamethod on said frame.Remember, when you try to access a table field that has a nil value, Lua falls back to thefield of its metatable if one exists. \n\n \n\n \"All I want is a pretty girl, a decent meal, and the right to shoot lightning at fools.\"\n\n\n\nReplacing the SetPoint function of a frame will taint it, so if that matters for what you're doing, don't do it.\n\n \n\n I don't know if the taint log has been fixed, but previously it would cause actual lua errors (or even crashed the game) if it detected certain execution paths had been tainted and logging had been enabled.\n\n \n\n If this is not for a blizzard frame, then there's no downside to replacing the function, otherwise it's generally best practice to avoid tainting the execution path because it can easily cause unforeseen consequences.\n\n \n\n Depending on what you're trying to accomplish it's sometimes possible to avoid calling the function in the first place (and still avoiding taint) by unregistering the events that trigger it and reproducing some of the code yourself. Last edited by semlar : 07-01-13 at .\n\nWell, that is what I was doing, SDPhantom. My inquiry was to how detrimental it is to void a frame's SetPoint function; and if there was a healthier alternative.\n\n \n\n If there is no downside to the practice, then that is what I would continue to use. As far as taint, sure, the dummy function will taint the execution path for any code that runs it. There is no other problem with diverting the calls to your dummy function. As I've explained before, you're not necessarily wiping out the original function entirely. You're just adding a function into the frame's table in such a way it'll use that function rather than indexing its metatable. Anyone can still access the original function by going through the metatable. For example, getmetatable(frame).__index.SetPoint() will access the original function regardless of what you did to the frame's table. Note you'll have to add in the frame itself as the first argument since it's a different way of calling the function than most are used to, but it'll still work. As far as taint, sure, the dummy function will taint the execution path for any code that runs it. There is no other problem with diverting the calls to your dummy function. As I've explained before, you're not necessarily wiping out the original function entirely. You're just adding a function into the frame's table in such a way it'll use that function rather than indexing its metatable. Anyone can still access the original function by going through the metatable. For example,will access the original function regardless of what you did to the frame's table. Note you'll have to add in the frame itself as the first argument since it's a different way of calling the function than most are used to, but it'll still work. \n\n \n\n \"All I want is a pretty girl, a decent meal, and the right to shoot lightning at fools.\"\n\n\n\nReplacing the SetPoint function of a frame will taint it, so if that matters for what you're doing, don't do it. Well, I guess it will take some time to see how large of an impact my meddling will have.\n\n \n\n If this is not for a blizzard frame, then there's no downside to replacing the function, otherwise it's generally best practice to avoid tainting the execution path because it can easily cause unforeseen consequences. Well, it is for a LOT of Blizzard frames, specifically the ContainerFrame#Slot# frames.\n\n \n\n As far as taint, sure, the dummy function will taint the execution path for any code that runs it. There is no other problem with diverting the calls to your dummy function. As I've explained before, you're not necessarily wiping out the original function entirely. You're just adding a function into the frame's table in such a way it'll use that function rather than indexing its metatable. Anyone can still access the original function by going through the metatable. For example, getmetatable(frame).__index.SetPoint() will access the original function regardless of what you did to the frame's table. Note you'll have to add in the frame itself as the first argument since it's a different way of calling the function than most are used to, but it'll still work. Well, in light of such a comprehensive post, I think that I will stick to the dummy function method for now, and see what sort of impact is has down the line. I have been playing while using this method for a while now, and it hasn't produced any headache.\n\n \n\n Thanks for all of the insight and explanations, especially regarding meta....stuff Well, I guess it will take some time to see how large of an impact my meddling will have.Well, it is for a LOT of Blizzard frames, specifically the ContainerFrame#Slot# frames.Well, in light of such a comprehensive post, I think that I will stick to the dummy function method for now, and see what sort of impact is has down the line. I have been playing while using this method for a while now, and it hasn't produced any headache.Thanks for all of the insight and explanations, especially regarding meta....stuff"
    },
    {
        "link": "https://addonstudio.org/wiki/WoW:World_of_Warcraft_API",
        "document": "This is the main reference page for the Lua based WoW UI API, and is available to user Macros and AddOns. This API is available during normal game play. See also WoW Glue API.\n\nThe World of Warcraft API, or WoW API, is a set of Lua functions and facilities provided by the Blizzard WoW Client, to allow interaction with the World of Warcraft and its user interface. The list below is incomplete, and kept up to date through user contributions. See also the an automatically-generated exhaustive list of all API functions present in the latest live client.\n\nFor beginners, AddOn contains a number of very informative sources to help get you started. You can also examine the existing UI code to find examples of how the various functions are used by the default UI.\n• API types - variable value types, used here as parameters and return values.\n\nIf you're contributing documentation, please read How to edit API pages.\n\nFunction names can be prefixed with the following tags, see API notation and conventions:\n• PROTECTED - can only be called from secure code. See Protected Functions.\n• NOCOMBAT - can only be called from secure code while out of combat.\n• HW - may only be called in response to a hardware event, like from OnClick handlers.\n• UI - is implemented in Lua in FrameXML, but was important enough to appear here.\n• DEPRECATED - is planned to no longer be used, and more than likely removed in future version.\n• REMOVED - was removed from the API. should be moved from here to Removed Functions.\n\nThese functions only return meaningful values on Asian realms; all three relate to the play time limitation system.\n\nThese functions are only available in Patch 3.0.\n\nThese functions are those which operate with the action buttons. See #Activity section for general player actions.\n\nThese functions make the player do something, and which aren't covered elsewhere and aren't simply confirmation steps.\n\nFunctions for the Archaeology Profession. Added in 4.0.1 Cataclysm.\n\nThese functions were introduced in 3.0.2.\n\n'Mouse Look' refers to holding down the right mouse button and controlling the movement direction. Shifting the view by holding down the 'left' mouse button is not covered by these APIs.\n\nThese are chat functions which are specific to channels. Also see the #Chat Window and #Communication sections.\n\nThese are functions which are specific to chat 'window' management. See also the #Channel and #Communication sections. See Mikk's spiel on chat windows, which may be out of date.\n\nThese functions get applied after reload ui (index 1 is General and index 2 is Combat Log):\n\nThese are functions communicate with other players. Also see the #Channel and #Chat Window sections.\n\nThese functions relate to companions, mounts and non-combat pets. All functions were introduced in 3.0.\n\nThese functions manage containers, bags, backpacks. See also #Inventory and #Bank sections.\n\nMost of these functions were added in 3.0.2.\n\nFunctions supporting the Dungeon Finder UI, added in 3.3. See also the #Raid Browser and #Looking for Group sections.\n\nSee also the #Raid section.\n\nAll functions were added in 2.3.\n\nThese functions manage your inventory, that is 'equipped items'. See also the #Container / Bag and #Bank sections.\n\nThese functions operate on item links or item information directly. See also the #Container / Bag and #Inventory sections.\n\nThe following were introduced along with socketed items and gems in 2.0. The 'id' refers to a 1-based index of the sockets in the item being considered for socketing.\n\nThese functions relate to item text: books, etc...\n\nThese functions relate to the current location of the player and how it's displayed.\n\nFunctions for use in the 'Looking for Group' tool. See also the #Dungeon Finder and #Raid Browser sections.\n\nSee also Events associated with Mail.\n\nThese functions are related to display of the world map.\n\nMost of these functions may only called on a hardware event from 'secure' code.\n\nThese functions were exclusive to the Mac client, added in 1.12. The functions are protected and are only called through key bindings, thus they only serve to enable you to bind specific keys to control iTunes while using the WoW client.\n\nPetitions are signup documents for guilds and arena teams. Some functions below only apply to a particular petition type.\n\nSee also the #Gossip section.\n\nSee also the #Group section.\n\nFunctions hidden supporting the Raid Browser UI, added in 3.3. See also the #Dungeon Finder and #Looking for Group sections. This is a very preliminary list of functions by perusing FrameXML\\LFRFrame.lua/xml files. Please edit and contribute if you know more about these =)\n\n\n\n These also appear to be used by the Raid Browser, as well as the Dungeon Finder:\n\nThese functions are only available in Patch 3.3.5.\n\nNote: Only usable by people that have been referred or have referred someone.\n\nNote: CPU profiling is disabled by default since it has some overhead. CPU profiling is controlled by the scriptProfile CVar, which persists across sessions, and takes effect after a UI reload. Memory profiling is always available. These functions were added in Patch 2.1.\n\nThe 'spellID' is the index of a spell in a spellbook. The indices increase from top to bottom, then left to right, then between categories, e.g.: General -> Discipline. spellIDs will change as players learn new spells and 'professions'.\n\nTalent points preview, assignment before spending, was added in 3.1.0:\n\nThese are functions which act on one or more units. Units are identified by UnitIds.\n\nThese functions were added in Patch 3.0.2.\n\nThese functions were added in Patch 2.2.\n\nThe following functions are used for population-limited world PvP zones, primarily Lake Wintergrasp.\n• API change summaries document changes made in WoW patches, as summarized on the US official UI forum.\n• Battle.net API previously known as the Community Web Platform API or Web API, for web API access. Info on functions to interact with Blizzard web sites, not in-game.\n• Widget API documents other general Lua methods that can be called on widget objects.\n• XML UI documents the Ui XML interface, and includes other documentation relating to FrameXML and GlueXML.\n• WoW Lua describe the Lua language and library functions available in the WoW client.\n• AddOn is the main reference for WoW AddOn development.\n• User Defined Functions lists various useful user-contributed functions.\n• Category:AddOns Libraries contains some AddOns that do nothing but provide you with utility functions."
    },
    {
        "link": "https://stackoverflow.com/questions/58019968/wow-setting-and-resetting-frame-anchors",
        "document": "I have a very simple add-on that displays four pieces of information textually instead of with a visual representation—each on their own frame. Each one can be turned on an off at the discretion of the user.\n\nI would like these frames to all be anchored to each other horizontally. Easy enough right? Anchor left edge of Frame2 to the right edge of Frame 1, Frame3 to Frame2 in the same manner, etc. If Frame2 is disabled then Frame3 needs to be anchored to Frame1.\n\nI tried to run on an anchor frame to count the children and anchor them to the anchor frame itself instead of to each other, but returns a table of tables, and the operator doesn't count tables.\n\nAs a bonus, I would like the user to be able to change the order of the frames.\n\nThe question of how to do this has consumed me all day today. Perhaps it's the lack of sleep, or perhaps the lack of Lua experience. Either way, any help would be much appreciated."
    },
    {
        "link": "https://reddit.com/r/WowUI/comments/1clrone/help_anchoring_a_frame_from_a_different_addon_to",
        "document": "editeditFinalForRealVersion2.2.3FINAL This one works: It didn't work before I think because I have no idea. I just added the script at frame creation to the frame. Previous problems were that the HekiliDisplayPrimary wasn't created, as that one only gets created at the \"PLAYER_ENTERING_WORLD\" event. Thaks for all your help though! <3\n\nI got the loading and dependency part working by adding ## loadwith: to the .toc file. That should load the addon only when the dependent other addons are loaded. That seems to do the trick the problem I am facing now is that I get a nil exception thrown for HekiliDisplayPrimary.\n\nI also tried to anchor the frame via the\n\ncommand which did do the trick. So this is maybe a problem with rights?\n\nSorry for the strange title. What I try to accomplish is this: I want Hekili in relation to my Personal Resource Display (PRD) (The HP bar directly under the character) As working with the PRD is a pain in the behind I use a middle man in form of WeakAuras.\n\nI checked the frame names via /framestack and wrote those few lines of code. I don't get any error, but it doesn't hook the frames together."
    },
    {
        "link": "https://wowinterface.com/forums/showthread.php?t=46256",
        "document": "Help Creating Textures, Frames, etc in Lua. And some questions! \n\n \n\n Okay, so i'm trying to create a complete working AddOn using lua only! I know how to create a few using .XML to make the graphics and add event handlers. But i'm not sure in lua. As an example i'm going to use BagBuddy.\n\n \n\n Allright, first i would like to ask if this is considered readable or if it can be written in an better way:\n• None -- The parent frame to add textures and fontstrings to\n• None -- The button that allows BagBuddy to be hidden \n\n the function BagBuddy_OnLoad(self) is empty because i'm not sure on how i would add 28 x buttons to the frame without using an XML template.\n\n \n\n The template for the original BagBuddy looks like this:\n\n \n\n \n\n Using the above template i would add each button to the frame like this:\n\n \n\n \n\n but this is easy because i can inherit the item's from BagBuddyItemTemplate in my XML document. How can i create something similar using lua only?\n\n \n\n Also how do i set alphaMode=\"ADD\" in lua?\n\n \n\n Hope you guys understand what i'm trying to accomplish, if not, please ask me and i'll try to explain Greetings,Okay, so i'm trying to create a complete working AddOn using lua only! I know how to create a few using .XML to make the graphics and add event handlers. But i'm not sure in lua. As an example i'm going to use BagBuddy.Allright, first i would like to ask if this is considered readable or if it can be written in an better way:the function BagBuddy_OnLoad(self) is empty because i'm not sure on how i would add 28 x buttons to the frame without using an XML template.The template for the original BagBuddy looks like this:Using the above template i would add each button to the frame like this:but this is easy because i can inherit the item's from BagBuddyItemTemplate in my XML document. How can i create something similar using lua only?Also how do i set alphaMode=\"ADD\" in lua?Hope you guys understand what i'm trying to accomplish, if not, please ask me and i'll try to explain\n\nWe already discussed \"templates\" in Lua here: http://www.wowinterface.com/forums/s...ad.php?t=46184 I'm sorry for the double post, but i had more questions for my lua code than in that topic - i should have edited the post.\n\n \n\n \n\n \n\n Your BagBuddy_MakeMovable function is not needed, since you're only calling it once (at least so far). Just use the function's body, replacing 'self' with 'frame', your local variable.\n\n \n\n OnLoad functions don't actually work in lua, because after calling CreateFrame(), the frame's (non-existing) OnLoad handler will have run already. Just put the code directly in the source file.\n\n \n\n As for the alpha mode, that would be First of all, your code looks good, but you're making your functions global. They should either be local or part of the frame's table, like you do with the frame's regions/children.Your BagBuddy_MakeMovable function is not needed, since you're only calling it once (at least so far). Just use the function's body, replacing 'self' with 'frame', your local variable.OnLoad functions don't actually work in lua, because after calling CreateFrame(), the frame's (non-existing) OnLoad handler will have run already. Just put the code directly in the source file.As for the alpha mode, that would be SetBlendMode Thank you for the answer! I'll make my functions local instead. I decided to use the BagBuddy_MakeMovable function as i was not sure to wether i was going to develop the bagbuddy abit and maybe add some new feutures which would maybe require a new frame - if this is not the case i will ofc add the movable scripts directly to the frame created.\n\n \n\n \n\n \n\n \n\n If there aren't any errors I missed, that should create the exact frame your template is making. Just replace the line where you create the item button with this and as Haleth suggested, move the contents of the OnLoad function to the main chunk and replace all references of self with frame. You pretty much have the framework down for transferring your template into Lua, All you really need to do is put in the code for Lua to create the objects within the loop that the template would've done.If there aren't any errors I missed, that should create the exact frame your template is making. Just replace the line where you create the item button with this and as Haleth suggested, move the contents of the OnLoad function to the main chunk and replace all references ofwith Thank you so much! Imma look this code through and see what youve done! Also thank you for showing how to give the ADD alphaMode in lua, i tried: SetHighlightTexture(\"Source\", SetAlpha=\"ADD\") haha now i get why that didn't work \n\n \n\n imma update the full script soon, and tell you guys if i got any errors.\n\n \n\n $parent works for lua aswell? or is that XML only? I'm sorry for the double post, but i had more questions for my lua code than in that topic - i should have edited the post.Thank you for the answer! I'll make my functions local instead. I decided to use the BagBuddy_MakeMovable function as i was not sure to wether i was going to develop the bagbuddy abit and maybe add some new feutures which would maybe require a new frame - if this is not the case i will ofc add the movable scripts directly to the frame created.Thank you so much! Imma look this code through and see what youve done! Also thank you for showing how to give the ADD alphaMode in lua, i tried: SetHighlightTexture(\"Source\", SetAlpha=\"ADD\") haha now i get why that didn't workimma update the full script soon, and tell you guys if i got any errors.$parent works for lua aswell? or is that XML only? Last edited by fRodzet : 04-12-13 at .\n\n\n\n \n\n I added some suggestions.\n• None -- I suggest you create a drag frame and redirect the drag event on the that frame to the parent frame\n• None -- The Body frame of BagBuddy (the border itself)\n• None frame.body:SetAllPoints --take the size of the parent element \n\n Not sure how your panel should look.\n\n \n\n But do a quick test. Is this your panel?\n\n \n\n \n\n If yes you can use the \"ButtonFrameTemplate\" to create your panel. It will have all the buttons already included. There are ton of other templates.\n\n \n\n Hmm I just checked. BankFrame.xml is using \"PortraitFrameTemplate\". So you can probably use that instead.\n\n \n\n https://github.com/tekkub/wow-ui-sou...kFrame.xml#L94\n\n \n\n . Your problem was \"self\" on icon setpoint.I added some suggestions.Not sure how your panel should look.But do a quick test. Is this your panel?If yes you can use the \"ButtonFrameTemplate\" to create your panel. It will have all the buttons already included. There are ton of other templates.Hmm I just checked. BankFrame.xml is using \"PortraitFrameTemplate\". So you can probably use that instead. \n\n \n\n \"I wonder what the non-pathetic people are doing tonight?\" Last edited by zork : 04-12-13 at .\n\n\n\n \n\n I added some suggestions.\n• None -- I suggest you create a drag frame and redirect the drag event on the that frame to the parent frame\n• None -- The Body frame of BagBuddy (the border itself)\n• None frame.body:SetAllPoints --take the size of the parent element \n\n Not sure how your panel should look.\n\n \n\n But do a quick test. Is this your panel?\n\n \n\n \n\n If yes you can use the \"ButtonFrameTemplate\" to create your panel. It will have all the buttons already included. Your problem was \"self\" on icon setpoint.I added some suggestions.Not sure how your panel should look.But do a quick test. Is this your panel?If yes you can use the \"ButtonFrameTemplate\" to create your panel. It will have all the buttons already included. Yeah i saw that, and i did change that myself as you see in my edited post, however thanks for the drag thing - thats nice. \n\n \n\n But still the buttons ain't created. hmm Yeah i saw that, and i did change that myself as you see in my edited post, however thanks for the drag thing - thats nice.But still the buttons ain't created. hmm\n\n\n\n \n\n You have \"lua errors\" enabled right?\n\n Have you seen my texture change? You used \"OVERLAY\". It may \"overlay\" all your buttons .\n\n Addtionally check my panel template edit.\n\n \n\n It is good practice to use already given Blizzard templates. Especially if you want to copy-cat the BankUI. Normally you don't have to create your panel manually. There are basic templates that wil do this for you.\n\n \n\n Btw there is a button template for bank icons aswell. That is: \"BankItemButtonGenericTemplate\"\n\n \n\n So you could change your button to:\n\n \n\n \n\n First use templates for stuff. If sth is missing or you need changes you can still do that afterwards. You don't have to reprogram templates. Please don't quote full posts.You have \"lua errors\" enabled right?Have you seen my texture change? You used \"OVERLAY\". It may \"overlay\" all your buttonsAddtionally check my panel template edit.It is good practice to use already given Blizzard templates. Especially if you want to copy-cat the BankUI. Normally you don't have to create your panel manually. There are basic templates that wil do this for you.Btw there is a button template for bank icons aswell. That is: \"BankItemButtonGenericTemplate\"So you could change your button to:First use templates for stuff. If sth is missing or you need changes you can still do that afterwards. You don't have to reprogram templates. \n\n \n\n \"I wonder what the non-pathetic people are doing tonight?\" Last edited by zork : 04-12-13 at .\n• None -- The Body frame of BagBuddy (the border itself) Line 60:\n\n \n\n \n\n $parent works for lua aswell? or is that XML only? $parent works for any function in the Widget API and CreateFrame() that can reference a frame by its name. Just think of Lua as a backend for the XML. Using the right functions, you can just plug in the values directly.\n\n \n\n \n\n \n\n More information on these functions is available in the CreateFrame() is in the Line 60:works for any function in the Widget API andthat can reference a frame by its name. Just think of Lua as a backend for the XML. Using the right functions, you can just plug in the values directly.More information on these functions is available in the Widget API page on WoWPedia. Noteis in the WoW API section. \n\n \n\n \"All I want is a pretty girl, a decent meal, and the right to shoot lightning at fools.\""
    },
    {
        "link": "https://us.forums.blizzard.com/en/wow/t/moving-an-addon-frame-with-a-script-solved/390743",
        "document": "I don’t know the addon but a couple of things come to mind.\n\n Your code refers to two frames and .\n\nAre you sure the bar you want to move is anchored to ? ie. the bar has one or more points using barContainerFrame as the reference (attach to) point.\n\nIf the first is correct, does have multiple (or other (not “CENTER”)) attach points (SetPoints). If so, then not using first means that any additional anchor points remain fixed in place.\n\ndo you know what this contains (did you create the table/keys) or is it a grab from the addon in which case the settings` you are looking at are possibly a global leak from some other addon.\n\nNot specifying an reference (attach point) in you SetPoint call means the frame will still use it’s original anchor parent as the “starting point” for it anchor:\n\nchanges the “starting point” to UIParent which covers the entire screen so (“CENTER” is center of screen rather than center of the frame used as the original anchor).\n\nOne thing you could try to see if it moves to the center of the screen (no offsets) is:"
    },
    {
        "link": "https://cdn.wowinterface.com/forums/showthread.php?t=3732",
        "document": "Paraphrase: what I want to do is use Frame:SetPoint() entirely and never set the anchor and position in the XML. And I want SetHeight() to continue to work, which right now it breaks as soon as I do a SetPoint() on the frame.\n\n \n\n I'm writing party frames who's HP and mana bars are 100% graphical, so right now I've got them as textures. When I define the anchor and position in the XML setting the height and texture coordinates it works flawlessly and the result is predictable (in my case I chop the top off the graphic so it shrinks without just scaling down the image). If I change the anchor from bottom to top in the XML then the SetHeight() method will trim from the bottom instead, which is exactly what I want.\n\n \n\n But then I wanted each party member to inherit from a template and that's where my problems begin. In the template definition of course I don't know if the frame is going to be right-side-up or upside-down, so I removed all anchors from the frame (I initially left the anchors there and tried overriding them later in the OnLoad()).\n\n \n\n No mater what I change the anchor point to use SetPoint() it pretty much makes SetHeight() stop working. In my case the textures are always 50 pixels (before scaling) high. In addition to this I have to SetPoint() both the top and bottom anchors or the height just is never correct (it looks roughly 256 pixels before scaling though I've not verified it). I even went and stopped using SetHeight() and instead SetPoint() both the top and bottom to get an effective height and they don't move.\n\n \n\n I'm beginning to think that once you anchor a window that anchor is never removed and never overridden. Is this true? Is there a way to flush all anchors? I assume flushing the anchors is the solution but I cannot figure out if it's even possible.\n\n \n\n Has anyone else run into this? Am I doomed to just have a template for the top and another for the bottom or perhaps just go back to not using templates at all?\n\n \n\n Thanks for any help you can provide.\n\n \n\n -saxon"
    }
]