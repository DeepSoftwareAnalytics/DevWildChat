[
    {
        "link": "https://zulko.github.io/moviepy/reference/reference/moviepy.video.fx.html",
        "document": "Effect to crop a clip to get a new clip in which just a rectangular subregion of the original clip is conserved.\n\nMakes the clip progressively appear from some color (black by default), over seconds at the beginning of the clip.\n\nMakes the clip progressively fade to some color (black by default), over seconds at the end of the clip.\n\nMakes the clip fade in progressively at its own end, this way it can be looped indefinitely.\n\nReturns a new clip with a mask for transparency where the original clip is of the given color.\n\nEffect returning a video clip that is a resized version of the clip.\n\nRotates the specified clip by degrees (or radians) anticlockwise If the angle is not a multiple of 90 (degrees) or , , and are not , there will be black borders.\n\nMakes the clip arrive from one side of the screen.\n\nMakes the clip goes away by one side of the screen.\n\nReplaces each frame at time t by the mean of equally spaced frames taken in the interval [t-d, t+d].\n\nReturns a clip that plays the current clip once forwards and then once backwards."
    },
    {
        "link": "https://zulko.github.io/moviepy",
        "document": "MoviePy is the Python reference tool for video editing automation!\n\nItâ€™s an open source, MIT-licensed library offering user-friendly video editing and manipulation tools for the Python programming language.\n\nNew to MoviePy? Check out the getting started guides. They contain instructions to install MoviePy as well as introduction concepts and tutorials. The user guide provides in-depth information on the key concepts of MoviePy with useful background information and explanation. The reference guide contains a detailed description of the MoviePy API. The reference describes how the methods work and which parameters can be used. It assumes that you have an understanding of the key concepts. Saw a typo in the documentation? Want to improve existing functionalities? The contributing guidelines will guide you through the process of improving MoviePy.\n\nMoviePy is an open source software originally written by Zulko and released under the MIT licence. It works on Windows, Mac, and Linux. Tweet"
    },
    {
        "link": "https://reddit.com/r/moviepy",
        "document": "Hi, i was coding a script for Moviepy, the result of the tests was OK, i like it, no trembling, but, the speed when I was making the video is very slow, I would like to know your comments about the code"
    },
    {
        "link": "https://cs10.org/bjc-r/cur/programming/libraries/Moviepy/MoviePy-joining-functions.html?topic=berkeley_bjc%2Flibraries%2Flibraries.topic&course&novideo&noreading&noassignment",
        "document": "Now that we have introduced a few basics of how to create and alter basic audio and video, we can dive into some more complicated aspects and functions to help us implement what we've learned so far.\n\nWith the basics of clip creation and how it can be used, one slightly more complicated topic we can explore is adding effects of various kinds to the clips we've created. One such example, is altering the speed or linearity of the clip. This includes changing the clip speed to 0.5x, 2x, or any chosen speed. These effects can also change the clip to run backwards, giving you more options on how to edit your chosen video. For adding effects to the speed of the video, the functions and are to be used. Example:\n\nAnother feature of clip effect is the ability to increase or decrease the video's brightness. The function takes the form where is the input you can give to the function to change the video's brightness. Try experimenting with different values to see their results! What values darken or brightens the video?\n\nNext, we'll introduce a very cool feature of the clip effect series, the black and white function. As its name suggests, this function turns the video into black and white.\n\nIt's always important to have a way to resize your video. So here we introduce the function. This funciton resizes the clip, but keep the length-to-width ratio. There are multiple ways to use this function with more details given in the example below.\n\nNow that we've explored how to change and edit individual clips, lets see how we can put it all together in one video file in order to create a single completed project. There are various different ways to join video clips together, and the following sections will go through a few of the most utilised ones.\n\nThe first function used to join video clips is the function. This function takes in an array of video clips, (E.g.[clip1, clip2, clip3, etc.]) and outputs a single video clip with each of the inputted clips one after another. An example is shown below:"
    },
    {
        "link": "https://github.com/Zulko/moviepy/blob/master/moviepy/Clip.py",
        "document": ""
    },
    {
        "link": "https://github.com/Zulko/moviepy/issues/1993",
        "document": "Problem : Reading video in local and docker-compose file works fine but in minikube below issue occured"
    },
    {
        "link": "https://stackoverflow.com/questions/42227047/error-importing-videofileclip-from-moviepy-attributeerror-permissionerror-o",
        "document": "I just had to figure this out myself tonight. There are two parts to this error:\n\n1> the attribute doesn't exist on an exception object anymore in Python 3, and\n\n2> as you guessed, you need to tell MoviePy where FFMpeg is\n\nTo work around the attribute error, you can replace it with :\n\nBut the real solution is to make sure MoviePy knows where FFMpeg is. Look in your file and see what it says for . The default is which means it will look at the first value as an environment variable containing the path of the FFMpeg executable, and if not found will use the second value. That one means it should use the FFMpeg that was installed by the module.\n\nSince you have FFMpeg already installed somewhere on your computer you can just set the FFMPEG_BINARY variable in config_defaults.py to point to it:\n\nOr you could create an environment variable with that value.\n\nIf you hadn't installed FFMpeg, you can install it via ImageIO which is a module used and installed by MoviePy. In the MoviePy install instructions, they mention that FFMpeg should be installed automatically by ImageIO, but that didn't happen for me. When it causes an error, it gives you instructions to install it manually:\n\nThis is what I did, and didn't have to edit for that. I haven't used Anaconda, but am doing this in WinPython which is another type of Python all-in-one distribution.\n\nThe reason I came across this error is that I mis-entered the path for ImageMagick in , causing the \"raise\" branch to be run, exposing the Python 2 code to set err.message.\n\nHope this circuitous story helps you or anyone else."
    },
    {
        "link": "https://stackoverflow.com/questions/78500421/getting-import-moviepy-editor-could-not-be-resolved-error-when-trying-to-imp",
        "document": "I am trying to import moviepy. I installed it with pip in my VSCode Terminal:\n\nIt seems like everything installed correctly, but with the following code:\n\nI don't know, what to do now. I am new to programming and stackoverflow, and I am not a native English speaker, so please have leniency.\n\nI already tried installing moviepy manually on GitHub, currently I have it in my program files folder, but I don't know what to do, because I couldn't figure out how to install it in CMD."
    },
    {
        "link": "https://github.com/lengstrom/fast-style-transfer/issues/129",
        "document": "Followed instructions step by step found here: https://classroom.udacity.com/courses/nd101-preview/lessons/7cb11162-03a5-4ac7-a205-3b72a6bb33b4/concepts/b0c0431d-f4c6-4628-8f39-8e87e350c294 but when attempting to run the demo command ( ) I get the above error. Perhaps I've missed something obvious?"
    },
    {
        "link": "https://reddit.com/r/learnpython/comments/1hb36du/trouble_installing_moviepyeditor",
        "document": "Hi :)\n\nSorry in advance if this is a stupid question...\n\nI am trying to write my first ever python script, in visual studio (though I have written c++ before), to extract frames from a video and save them as images. To do so, I am trying to use moviepy.editor. I installed it via the command line, using \"py -m pip install moviepy\". It seemed to work, if I try to run this again I just get a message saying \"requirement already satisfied\", and if I check in the \"Python Environments\" tab of the visual studio project, moviepy is listed.\n\nAnd yet, if I try to run \"from moviepy.editor import VideoFileClip\" or \"from moviepy.editor import *\", it doesn't work... Also, when hovering over \"moviepy.editor\", I get a pop-up about an \"unresolved import\".\n\nBut - why? I tried re-installing, but it just keeps telling me that it is already installed... I am a bit stumped at this point. Any advice?"
    }
]