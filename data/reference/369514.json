[
    {
        "link": "https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/6/html/deployment_guide/ch-yum",
        "document": "is the Red Hat package manager that is able to query for information about available packages, fetch packages from repositories, install and uninstall them, and update an entire system to the latest available version. Yum performs automatic dependency resolution on packages you are updating, installing, or removing, and thus is able to automatically determine, fetch, and install all available dependent packages.\n\nYum can be configured with new, additional repositories, or package sources, and also provides many plug-ins which enhance and extend its capabilities. Yum is able to perform many of the same tasks that can; additionally, many of the command-line options are similar. Yum enables easy and simple package management on a single machine or on groups of them.\n\nYum also enables you to easily set up your own repositories of packages for download and installation on other machines.\n\nYou can choose to update a single package, multiple packages, or all packages at once. If any dependencies of the package (or packages) you update have updates available themselves, then they are updated too. To update a single package, run the following command as : For example, to update the package, type: ~]# Loaded plugins: product-id, refresh-packagekit, subscription-manager Updating Red Hat repositories. INFO:rhsm-app.repolib:repos updated: 0 Setting up Update Process Resolving Dependencies --> Running transaction check ---> Package udev.x86_64 0:147-2.15.el6 set to be updated --> Finished Dependency Resolution Dependencies Resolved =========================================================================== Package Arch Version Repository Size =========================================================================== Updating: udev x86_64 147-2.15.el6 rhel 337 k Transaction Summary =========================================================================== Install 0 Package(s) Upgrade 1 Package(s) Total download size: 337 k Is this ok [y/N]: This output contains several items of interest:\n• None — always informs you which Yum plug-ins are installed and enabled. See always informs you which Yum plug-ins are installed and enabled. See Section 8.5, “Yum Plug-ins” for general information on Yum plug-ins, or to Section 8.5.3, “Plug-in Descriptions” for descriptions of specific plug-ins.\n• None — you can download and install new package.\n• None presents the update information and then prompts you as to whether you want it to perform the update; runs interactively by default. If you already know which transactions the command plans to perform, you can use the option to automatically answer to any questions that asks (in which case it runs non-interactively). However, you should always examine which changes plans to make to the system so that you can easily troubleshoot any problems that might arise. command as described in If a transaction does go awry, you can view Yum's transaction history by using thecommand as described in Section 8.3, “Working with Transaction History” always a new kernel in the same sense that installs a new kernel when you use the command . Therefore, you do not need to worry about the distinction between and a kernel package when you use : it will do the right thing, regardless of whether you are using the or command. , on the other hand, it is important to use the command (which installs a new kernel) instead of (which the current kernel). See . When using, on the other hand, it is important to use thecommand (which installs a new kernel) instead of(whichthe current kernel). See Section B.2.2, “Installing and Upgrading” for more information on installing/upgrading kernels with Updating All Packages and Their Dependencies To update all packages and their dependencies, enter (without any arguments): plug-in extends the command with a set of highly-useful security-centric commands, subcommands and options. See Discovering which packages have security updates available and then updating those packages quickly and easily is important. Yum provides the plug-in for this purpose. Theplug-in extends thecommand with a set of highly-useful security-centric commands, subcommands and options. See Section 8.5.3, “Plug-in Descriptions” for specific information. It is also possible to set up periodical automatic updates for your packages. For this purpose, Red Hat Enterprise Linux 6 uses the package. It provides a Yum interface for the daemon and downloads metadata from your package repositories. With the service enabled, the user can schedule an automated daily Yum update as a cron job. package is provided by the Optional subscription channel. See Thepackage is provided by the Optional subscription channel. See Section 8.4.8, “Adding the Optional and Supplementary Repositories” for more information on Red Hat additional channels. To install issue the following command: By default, the service is disabled and needs to be activated and started manually: To verify the status of the service, run the following command: The script included in the package can be configured to change the extent and frequency of the updates, as well as to send notifications to e-mail. To customize , edit the file. Additional details and instructions for can be found in the comments within and at the (8) manual page. , which Yum uses to perform changes to the system, provides a mechanism for ensuring their integrity. See You will inevitably make changes to the configuration files installed by packages as you use your Red Hat Enterprise Linux system., which Yum uses to perform changes to the system, provides a mechanism for ensuring their integrity. See Section B.2.2, “Installing and Upgrading” for details on how to manage changes to configuration files across package upgrades. 8.1.4. Upgrading the System Off-line with ISO and Yum For systems that are disconnected from the Internet or Red Hat Network, using the command with the Red Hat Enterprise Linux installation ISO image is an easy and quick way to upgrade systems to the latest minor version. The following steps illustrate the upgrading process:\n• None Create a target directory to mount your ISO image. This directory is not automatically created when mounting, so create it before proceeding to the next step. As , type: Replace mount_dir with a path to the mount directory. Typically, users create it as a subdirectory in the directory.\n• None Mount the Red Hat Enterprise Linux 6 installation ISO image to the previously created target directory. As , type: Replace iso_name with a path to your ISO image and mount_dir with a path to the target directory. Here, the option is required to mount the file as a block device.\n• None Copy the file from the mount directory to the directory. Note that configuration files in this directory must have the extension to function properly. This creates a configuration file for the yum repository. Replace new.repo with the filename, for example .\n• None Edit the new configuration file so that it points to the Red Hat Enterprise Linux installation ISO. Add the following line into the file: Replace mount_dir with a path to the mount point.\n• None Update all yum repositories including created in previous steps. As , type: This upgrades your system to the version provided by the mounted ISO image.\n• None After successful upgrade, you can unmount the ISO image. As , type: where mount_dir is a path to your mount directory. Also, you can remove the mount directory created in the first step. As , type:\n• None If you will not use the previously created configuration file for another installation or update, you can remove it. As , type: Example 8.1. Upgrading from Red Hat Enterprise Linux 6.3 to 6.4 Imagine you need to upgrade your system without access to the Internet. To do so, you want to use an ISO image with the newer version of the system, called for instance . A target directory created for mounting is . As , change into the directory with your ISO image and type: Then set up a yum repository for your image by copying the file from the mount directory: To make yum recognize the mount point as a repository, add the following line into the copied in the previous step: Now, updating the yum repository will upgrade your system to a version provided by . As , execute: When your system is successfully upgraded, you can unmount the image, remove the target directory and the configuration file:"
    },
    {
        "link": "https://redhat.com/en/blog/how-manage-packages",
        "document": "Installing, patching, and removing software packages on Linux machines is one of the common tasks every sysadmin has to do. Here is how to get started with Linux package management in Linux Red Hat-based distributions (distros).\n\nPackage management is a method of installing, updating, removing, and keeping track of software updates from specific repositories (repos) in the Linux system. Linux distros often use different package management tools. Red Hat-based distros use (RPM Package Manager) and (Yellow Dog Updater, Modified/Dandified YUM).\n\n[ Editor's Note: DNF or Dandified YUM is the updated default since Red Hat Enterprise Linux 8, CentOS 8, Fedora 22, and any distros based on these. Generally, the options are the same. Read more about DNF here. ]\n\nis the primary package management tool for installing, updating, removing, and managing software packages in Red Hat Enterprise Linux. performs dependency resolution when installing, updating, and removing software packages. can manage packages from installed repositories in the system or from packages. The main configuration file for is at , and all the repos are at .\n\nYou can learn more about adding repositories to your system from this article on how to add a YUM repo from Amy Marrich.\n\nIt's easy to manage packages in Linux with . At the command line, enter:\n\nThere are many options and commands available to use with . I've listed some commonly-used commands for below:\n\nThe following are commonly-used options with :\n\nThe option gives you an overview of what happened in past transactions. This provides some useful information, like the date when the transaction happened and what command was run.\n\nYou can undo or redo certain transactions using the command. Here is an example of undoing a transaction:\n\nprovides many options for package management. For detailed option information, look at and . Also, here is a link to YUM documentation.\n\nis a popular package management tool in Red Hat Enterprise Linux-based distros. Using , you can install, uninstall, and query individual software packages. Still, it cannot manage dependency resolution like . does provide you useful output, including a list of required packages. An package consists of an archive of files and metadata. Metadata includes helper scripts, file attributes, and information about packages.\n\nmaintains a database of installed packages, which enables powerful and fast queries. The database is inside , and the file is named .\n\nhas some basic modes: query, verify, install, upgrade, erase, show querytags, show configuration. At least one of these modes needs to be selected to perform package management tasks. Every mode has its own set of options. For example, install mode has its own set of installation options. Options for the modes are found on the man pages at .\n\nSome commonly-used modes are listed below:\n\nHere are some commonly-used general options:\n\nTo install or upgrade an package using issue this command:\n\nThe flag is for install, is for upgrade, for verbose, for hash (this option displays the as a progress bar for the operation). In this example, and are optional flags.\n\nTo query for a package using issue following command:\n\nOption queries all installed packages on the system.\n\nTo erase a package, use the following command:\n\nPackage management is a common task for every system. and provide efficient ways to install, upgrade, remove, and track software packages on Red Hat Enterprise Linux systems.\n\n[ Want to try out Red Hat Enterprise Linux? Download it now for free. ]"
    },
    {
        "link": "https://man7.org/linux/man-pages/man8/yum.8.html",
        "document": "Another version of this page is provided by the yum project\n\nPages that refer to this page: yum-filter-data(1), yum-groups-manager(1), yum-list-data(1), yum-ovl(1), yum-verify(1), yum.conf(5@@yum), yum-cron(8), yumdb(8), yum-shell(8@@yum), yum-updatesd(8)"
    },
    {
        "link": "https://learn.microsoft.com/en-us/troubleshoot/azure/virtual-machines/linux/yum-dnf-common-issues",
        "document": "This article discusses and resolves common issues that you might experience when you use and package management tools to install or update applications on Microsoft Azure virtual machines (VMs).\n\nThe yum command-line package management tool is used in Linux distributions that employ the RPM Package Manager. The tool name is an acronym for \"Yellowdog Updater Modified\" and was originally developed for Yellow Dog Linux. The tool has gained widespread usage, particularly in RPM-based distributions such as Red Hat Enterprise Linux (RHEL), CentOS, Oracle Linux, Mariner, and Fedora.\n\nThe dnf command-line package management tool, or \"Dandified Yum,\" is a modernized and enhanced package manager tool for RPM-based Linux distributions.\n\nYou experience errors that apply to certificates or network connectivity.\n\nAzure provides the Red Hat Update Infrastructure (RHUI) repository check script on GitHub. This Python script includes the following features:\n• Checks consistency between Extended Update Support (EUS) and non-EUS repository configurations and their requirements.\n• Reports successful repository connectivity if no errors are detected.\n• Verifies a found error by using the defined conditions and provides recommendations for a fix.\n\nThis version of the check script currently supports only the following Red Hat VMs that are deployed from the Azure Marketplace image:\n\nHow to run the RHUI check script\n\nTo run the check script, enter the following shell commands on a Red Hat VM:\n\nFor an RHEL system, see Troubleshoot Red Hat RHUI certificate issues in Azure or Troubleshoot Red Hat RHUI connectivity issues in Azure.\n\nFor other Linux distributions, make sure that communication to the corresponding repository is allowed through port 443. Additionally, make sure that the operating system uses a valid certificate if a valid certificate is required.\n\nYou might experience any of several errors when you encounter a dependency conflict during an update. The following subsections display the output symptoms of typical dependency errors.\n\nWhen you encounter a dependency issue, start by identifying the specific combination of package and version that's missing or incompatible. The error message typically indicates which package-version combination is required but isn't available.\n\nFor Symptom 2a, rejects a transaction and returns an error message. The error is caused by nn incompatibility between the package from an older release and the latest release.\n\nTo fix this error, you must remove the older package that causes the conflict (in this case, python2-leapp-0.16.0-1.el7_9.noarch) by running the following command:\n\nThen, you can continue the update or installation of the required package.\n\nSolution for symptom 2b: Remove the package exclusion from the configuration file\n\nFor symptom 2b, rejects a transaction and returns an error message. An exclusion filter causes the error.\n\nTo fix this error so that you can resume updating or installing the required package, make sure that the package isn't excluded in either the /etc/yum.conf or /etc/dnf.conf configuration file. To check whether the package exclusion is occurring, run a command such as the following / combination:\n\nIf the package is excluded, the following output appears:\n\nTo end this package exclusion, use a text editor (such as , , or ) to remove or comment out the entry for the \"exclude\" line in the /etc/yum.conf or /etc/dnf.conf file.\n\nThe , , and tools are written in Python and depend on the Python interpreter to operate correctly. Specifically, they rely on certain features and libraries that the Python interpreter provides to run their code and interact with the system. Changing the default version of Python that's installed on the system can cause issues within or because of a dependency on specific Python versions and configurations.\n\nFor example, you might experience one of the following errors if you don't have the correct version of Python installed:\n• yum repolist There was a problem importing one of the Python modules required to run yum. The error leading to this problem was: No module named yum\n• None \"Bad interpreter: No such file or directory\" bash: /usr/bin/yum: /usr/bin/pythonX.X: bad interpreter: No such file or directory\n\nBy consulting the official documentation for your Linux distribution, you can confidently verify the default Python version and compare it against the version that's installed on your system. This process helps to ensure consistency and compatibility between software dependencies and system configurations.\n\nAfter you identify the default version of Python for your Linux distribution, you can determine the currently installed version by running one of the following commands:\n\nIf you verify that an unsupported version of Python is in use, you have several options to fix this issue.\n\nRemove the symlink to the unsupported version of Python and create a symlink to the supported version of Python by running the following commands:\n\nReinstall the Python package by running the following command:\n\nReinstall the Python package from a rescue VM. For instructions, see Missing important system core libraries and packages.\n\nIf an interruption occurs while is updating, might retain the old package versions alongside the new packages that it's installing. Duplicate packages can cause confusion in system operations during subsequent use of the tool and eventually cause \"protected multilib\" errors or misleading dependency issues.\n\nThe following scenarios are typical:\n• None Running over Secure Shell (SSH) and experiencing connectivity disruptions during the update process\n• None Sending a and a signal to the process, or selecting + to terminate the process while it's actively running\n\nThere are two possible solutions: Try to complete the transaction, or manually remove the duplicate packages. The steps to complete these approaches differ depending on the distribution and version of your Linux installation.\n\nSolution 4a: Try to complete the transaction\n\nA \"404 Not Found\" error message in the output indicates that couldn't find the package or resource on the server. This issue typically occurs if tries to download or access a package from a repository, but the package file or metadata that's associated with it is missing or unavailable on the server. This scenario has various causes, including the following:\n• None The package or resource was removed from the repository.\n• None The repository URL or configuration is incorrect.\n• None There was temporary server downtime or maintenance.\n\nExamples of this error are shown in sample output for various Linux distributions.\n\nThe following possible solutions apply to various Linux distributions.\n\nThe following errors appear if you run the , , , , or command:\n\nThese errors might occur for any of the following reasons:\n• Another application using the database\n\nRebuild the RPM database by following these steps:\n• None Create a backup of the /var/lib/rpm directory by running the command:\n• None To avoid stale locks, remove the __db* files and verify the integrity of the Packages file:\n• None Rebuild the RPM database by running the command:\n\nThe following errors appear if you run the command on a Red Hat 7.x VM that's connected to RHUI.\n• None Check whether a third-party curl package is installed on your VM: If any third-party package is installed, go to step 2. The curl packages from third-party sources are provided together with their own binaries and certificates that are not recognized by Red Hat. This incompatibility causes yum to experience issues.\n• None Use either of the following methods to dowload the latest version of the , , and packages that are provided for RHEL 7.9:\n• None Download the packages manually by logging on to Red Hat Download, and then upload the rpms files to the affected VM.\n• None Log on to a working RHEL 7.9 VM , download the required packages by using the command, and then copy the rpms files to the affected VM:\n• None Downgrade the curl packages by using the rpms files from step 2:\n\nThe third-party products that this article discusses are manufactured by companies that are independent of Microsoft. Microsoft makes no warranty, implied or otherwise, about the performance or reliability of these products.\n\nMicrosoft provides third-party contact information to help you find additional information about this topic. This contact information may change without notice. Microsoft does not guarantee the accuracy of third-party contact information.\n\nIf you have questions or need help, create a support request, or ask Azure community support. You can also submit product feedback to Azure feedback community."
    },
    {
        "link": "https://blog.packagecloud.io/yum-cheat-sheet",
        "document": "Yum is a command-line package manager for RPM-based Linux systems, such as Red Hat Enterprise Linux, CentOS, Fedora, and Oracle Linux. It stands for \"Yellowdog Updater, Modified\" and was originally developed by Yellowdog Linux as a way to easily manage packages on their distribution.\n\nYum makes it easy to search for, install, remove, and update packages and dependencies, as well as handle any conflicts that may arise. It uses repositories, which are online collections of packages that can be installed on your system. These repositories contain metadata about the packages, such as version numbers and dependencies, which yum uses to resolve dependencies and ensure that the correct versions of packages are installed. Unlike it’s Debian cousin, which uses various commands for package management, yum can perform all package operations by itself.\n\nYum can also be used to manage system updates, including security updates and bug fixes. By regularly running yum update, you can ensure that your system is up-to-date and secure.\n\nAssuming yes for all prompts\n\nAssuming no for all prompts\n\nSkips packages that whose dependencies can’t be resolved.\n\nYou can dynamically enable or disable a repository for a single execution.\n\nSuppresses output except for errors and warnings.\n\nRemoves a package and any package it depends on (provided nothing else depends on it).\n\nNote: this will only remove the binaries and libraries, any configuration files will stay intact.\n\nThis will install the package’s previous version.\n\nThe command can take different arguments:\n\nListing all available packages from repositories\n\nListing all packages (installed or available) that match a given [package-name], can be a glob\n\nThis searches for [package-name] across all repositories, also looking inside package descriptions.\n\nThis command installs all of the latest versions of each package installed on the system and is, generally, not recommended to be run on production systems.\n\nSometimes, it’s necessary to force reinstallation of a package.\n\nThis command is very handy when it’s not obvious which package needs to be installed to use it.\n\ncan also take a glob:\n\nListing all dependencies for a given package\n\nyum-groups-manager is a command-line tool used to manage package groups in yum, a package manager for RPM-based Linux systems. yum-groups-manager allows you to create, edit, and delete package groups, as well as modify the packages and dependencies included in each group. You can also use it to generate a new yum repository configuration file containing only the package groups you specify, which can be useful for creating custom repositories.\n\nPackage groups are collections of packages that can be installed together, typically for a specific purpose, such as a desktop environment or web server.\n\nListing all packages for a given [repository]\n\nInstalling all packages from given [repository]\n\nRemoving all packages from a given [repository]\n\nThis is run automatically by yum as needed, but can be refreshed manually with\n\nWhen this command is run, all available packages are fetched and re-indexed from the repositories yum knows about.\n\nyum-utils is a collection of utilities and plugins for yum, a package manager for RPM-based Linux systems. These utilities and plugins are designed to extend the functionality of yum and provide additional tools for managing packages and repositories.\n\nyumdownloader is a command-line utility that comes with the yum-utils package in RPM-based Linux systems. It allows you to download packages from yum repositories without installing them, which can be useful for creating local repositories or installing packages on systems without internet access.\n\nDownloading all dependencies for an RPM\n\nyum-utils adds other useful commands to that are too specific to cover here but are still worth looking over at the YumUtils website.\n\nYou can find a complete list of yum commands here.\n\nDNF is the next generation of package management for redhat based operating systems.\n\nDNF, or Dandified Yum, is a modern package management tool that has been developed as a successor to the popular Yum package manager for RPM-based Linux distributions. DNF is designed to provide better performance, improved dependency resolution, and a more user-friendly command-line interface compared to Yum.\n\nSome of the key features and benefits of DNF include:\n• Faster and more efficient package management: DNF is faster than Yum and uses less memory, making it more efficient for large-scale package management tasks.\n• Improved dependency resolution: DNF uses a more advanced algorithm for dependency resolution, which can help prevent conflicts and ensure that packages are installed and updated correctly.\n• User-friendly command-line interface: DNF has a more intuitive and user-friendly command-line interface, with features such as tab completion and easy-to-read output.\n• Built-in plugins: DNF comes with a number of built-in plugins for tasks such as managing repositories, cleaning up old packages, and downloading packages without installing them.\n• Support for modular content: DNF supports modular content, which allows packages to be grouped together in modules with different lifecycles and update policies.\n\n\n\nGetting more familiar with your package manager’s tools can help you be more productive when finding, installing, and querying packages. There is no need to memorize or learn the commands, just use this cheat sheet!"
    },
    {
        "link": "https://stackoverflow.com/questions/77054425/why-installing-docker-on-rhel-8-make-conflicts-with-runc",
        "document": "we want to install docker packages on our RHEL 8.4 server (this is off line installation since machine not connected to network)\n\nso we download the following rpm's from the site - https://download.docker.com/linux/centos/8/x86_64/stable/Packages/\n\nthen we tried to install the rpm's with but we get the following exception\n\none of exception above is complain about -\n\nbut when we check the runc rpm version we get:\n\nso I not understand why yum complained about version runc-1.0.0-70 and other exceptions\n\nany suggestion to solve this problem? and what is the right approach to install the rpm on rhel 8?"
    },
    {
        "link": "https://github.com/docker/for-linux/issues/20",
        "document": ""
    },
    {
        "link": "https://github.com/docker/for-linux/issues/1073",
        "document": "I am trying to install docker on amazon workspace using yum, I am getting this error:\n\nI ran it with skip broken, now I got this output\n\nCan somebody please help me to resolve this."
    },
    {
        "link": "https://unix.stackexchange.com/questions/670538/how-do-i-resolve-this-yum-update-conflict",
        "document": "Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers."
    },
    {
        "link": "https://serverfault.com/questions/1046472/package-docker-ce-requires-containerd-io-1-4-1-but-none-of-the-providers-can",
        "document": "Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers."
    }
]