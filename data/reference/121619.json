[
    {
        "link": "https://support.microsoft.com/en-us/office/if-function-69aed7c9-4e8a-4755-a9bc-aa8bbff73be2",
        "document": "The IF function is one of the most popular functions in Excel, and it allows you to make logical comparisons between a value and what you expect. So an IF statement can have two results. The first result is if your comparison is True, the second if your comparison is False. For example, =IF(C2=”Yes”,1,2) says IF(C2 = Yes, then return a 1, otherwise return a 2).\n\nIn the above example, cell D2 says: IF(C2 = Yes, then return a 1, otherwise return a 2) In this example, the formula in cell D2 says: IF(C2 = 1, then return Yes, otherwise return No)As you see, the IF function can be used to evaluate both text and values. It can also be used to evaluate errors. You are not limited to only checking if one thing is equal to another and returning a single result, you can also use mathematical operators and perform additional calculations depending on your criteria. You can also nest multiple IF functions together in order to perform multiple comparisons. In the above example, the IF function in D2 is saying IF(C2 Is Greater Than B2, then return “Over Budget”, otherwise return “Within Budget”) In the above illustration, instead of returning a text result, we are going to return a mathematical calculation. So the formula in E2 is saying IF(Actual is Greater than Budgeted, then Subtract the Budgeted amount from the Actual amount, otherwise return nothing). In this example, the formula in F7 is saying IF(E7 = “Yes”, then calculate the Total Amount in F5 * 8.25%, otherwise no Sales Tax is due so return 0) Note: If you are going to use text in formulas, you need to wrap the text in quotes (e.g. “Text”). The only exception to that is using TRUE or FALSE, which Excel automatically understands."
    },
    {
        "link": "https://support.microsoft.com/en-us/office/using-if-with-and-or-and-not-functions-in-excel-d895f58c-b36c-419e-b1f2-5c193a236d97",
        "document": "In Excel, the IF function allows you to make a logical comparison between a value and what you expect by testing for a condition and returning a result if that condition is True or False.\n• =IF(Something is True, then do something, otherwise do something else) But what if you need to test multiple conditions, where let’s say all conditions need to be True or False (AND), or only one condition needs to be True or False (OR), or if you want to check if a condition does NOT meet your criteria? All 3 functions can be used on their own, but it’s much more common to see them paired with IF functions.\n\nHere are overviews of how to structure AND, OR and NOT functions individually. When you combine each one of them with an IF statement, they read like this:\n• AND – =IF(AND(Something is True, Something else is True), Value if True, Value if False)\n• OR – =IF(OR(Something is True, Something else is True), Value if True, Value if False)\n• NOT – =IF(NOT(Something is True), Value if True, Value if False)\n\nFollowing are examples of some common nested IF(AND()), IF(OR()) and IF(NOT()) statements in Excel. The AND and OR functions can support up to 255 individual conditions, but it’s not good practice to use more than a few because complex, nested formulas can get very difficult to build, test and maintain. The NOT function only takes one condition. Here are the formulas spelled out according to their logic: IF A2 (25) is greater than 0, AND B2 (75) is less than 100, then return TRUE, otherwise return FALSE. In this case both conditions are true, so TRUE is returned. If A3 (“Blue”) = “Red”, AND B3 (“Green”) equals “Green” then return TRUE, otherwise return FALSE. In this case only the first condition is true, so FALSE is returned. IF A4 (25) is greater than 0, OR B4 (75) is less than 50, then return TRUE, otherwise return FALSE. In this case, only the first condition is TRUE, but since OR only requires one argument to be true the formula returns TRUE. IF A5 (“Blue”) equals “Red”, OR B5 (“Green”) equals “Green” then return TRUE, otherwise return FALSE. In this case, the second argument is True, so the formula returns TRUE. IF A6 (25) is NOT greater than 50, then return TRUE, otherwise return FALSE. In this case 25 is not greater than 50, so the formula returns TRUE. IF A7 (“Blue”) is NOT equal to “Red”, then return TRUE, otherwise return FALSE. Note that all of the examples have a closing parenthesis after their respective conditions are entered. The remaining True/False arguments are then left as part of the outer IF statement. You can also substitute Text or Numeric values for the TRUE/FALSE values to be returned in the examples. Here are some examples of using AND, OR and NOT to evaluate dates. Here are the formulas spelled out according to their logic: IF A2 is greater than B2, return TRUE, otherwise return FALSE. 03/12/14 is greater than 01/01/14, so the formula returns TRUE. IF A3 is greater than B2 AND A3 is less than C2, return TRUE, otherwise return FALSE. In this case both arguments are true, so the formula returns TRUE. IF A4 is greater than B2 OR A4 is less than B2 + 60, return TRUE, otherwise return FALSE. In this case the first argument is true, but the second is false. Since OR only needs one of the arguments to be true, the formula returns TRUE. If you use the Evaluate Formula Wizard from the Formula tab you'll see how Excel evaluates the formula. IF A5 is not greater than B2, then return TRUE, otherwise return FALSE. In this case, A5 is greater than B2, so the formula returns FALSE.\n\nUsing AND, OR and NOT with Conditional Formatting in Excel In Excel, you can also use AND, OR and NOT to set Conditional Formatting criteria with the formula option. When you do this you can omit the IF function and use AND, OR and NOT on their own. In Excel, from the Home tab, click Conditional Formatting > New Rule. Next, select the “Use a formula to determine which cells to format” option, enter your formula and apply the format of your choice. Using the earlier Dates example, here is what the formulas would be. If A2 is greater than B2, format the cell, otherwise do nothing. If A3 is greater than B2 AND A3 is less than C2, format the cell, otherwise do nothing. If A4 is greater than B2 OR A4 is less than B2 plus 60 (days), then format the cell, otherwise do nothing. If A5 is NOT greater than B2, format the cell, otherwise do nothing. In this case A5 is greater than B2, so the result will return FALSE. If you were to change the formula to =NOT(B2>A5) it would return TRUE and the cell would be formatted."
    },
    {
        "link": "https://w3schools.com/excel/excel_if.php",
        "document": "The IF function is a premade function in Excel, which returns values based on a true or false condition.\n\nIt is typed and has 3 parts:\n\nThe condition is referred to as , which can check things like:\n• If a number is greater than another number\n• If a number is smaller than another number\n• If a number or text is equal to something\n\nNote: The different parts of the function are separated by a symbol, like comma or semicolon The symbol depends on your Language Settings.\n\nExample IF function (equal to)\n\nCheck if the Pokemon type is grass:\n\nThe condition is if the \"Type 1\" value for the Pokemon is \"Grass\".\n\nThe function returns \"Yes\" or \"No\".\n\nExample IF function, step by step:\n• Specify the value for when the condition is TRUE\n• Specify the value for when the condition is FALSE\n\nSince the value in cell is \"Grass\", the condition is true and the function will return \"Yes\".\n\nThe function can be repeated with the filling function for each row to perform the same check for each Pokemon:\n\nNow, each row has a check for Grass Type:\n\nExample IF Function (greater than)\n\nCheck if the Pokemon's total stats is greater than 500:\n\nThe function returns \"Yes\" or \"No\".\n\nExample IF function, step by step:\n• Specify the value for when the condition is TRUE\n• Specify the value for when the condition is FALSE\n\nSince the value in cell is 318, the condition is false and the function will return \"No\".\n\nThe function can be repeated with the filling function for each row to perform the same check for each Pokemon:\n\nNow, each row has a check for having more than 500 total stats:"
    },
    {
        "link": "https://rowzero.io/blog/how-to-use-if-function",
        "document": "The IF function is used to perform conditional evaluations in spreadsheets based on specific criteria. The function is a powerful tool in Excel and Google Sheets that allows you to perform logical tests and make decisions based on the results. Whether you want to categorize data, calculate values, or handle errors, the IF function can help you achieve your desired outcomes. In this article, we will explore the various aspects of the IF function, from understanding its purpose to advanced uses and troubleshooting tips. Read on to learn more about the IF function or skip to specific sections in the table of contents.\n• What is the IF function?\n• Setting up the IF function\n• Practical applications of the IF function\n• Common erros and troubleshooting the IF function\n• Advanced uses of the IF function\n• When to use the IF function\n\nWhat is the IF Function?\n\nThe function uses the following syntax:\n• logical_test represents the condition being evaluated in the spreadsheet. It can be a comparison, logical expression, or formula resulting in either TRUE or FALSE.\n• value_if_true is the value or action that the spreadsheet should return if the logical test evaluates to TRUE.\n• value_if_false is the value or action that the spreadsheet should return if the logical test evaluates to FALSE.\n\nIn a spreadsheet, if cell A1 contains a numeric value, one can use an 'IF' function to check if it is greater than 10. If it is, the spreadsheet would display \"Yes\"; otherwise, it would display \"No\". The 'IF' function would look like this:\n\nConsider a scenario where a status indicator is present in cell C1. If the spreadsheet checks that it equals \"Complete\", it can display \"Done\"; otherwise, it can display \"Pending\". The 'IF' function would be:\n\nSuppose there's a student's grade in cell B1. By using a nested 'IF' statement, the spreadsheet can assign a \"Pass\" if the grade is greater than or equal to 60, a \"Fail\" if it's less than 60 but greater than or equal to 50, and an \"Incomplete\" otherwise. The 'IF' function would be:\n\nBefore diving into the practical applications of the IF function, let's start by understanding its definition and purpose. The IF function is a powerful tool in Excel and Google Sheets that allows you to make decisions based on certain conditions. It is used to perform a logical test and return different values based on whether the test is true or false. This function evaluates a specified condition and then provides a result based on the outcome of the evaluation.\n\nNow, let's take a closer look at the key components of the IF function. The first component is the logical test. This is the condition that needs to be evaluated. It can be a comparison between two values, a mathematical expression, or any other logical statement. The logical test determines whether the condition is true or false.\n\nThe second component is the value_if_true. This is the value that will be returned if the logical test is true. It can be a number, text, date, or any other type of value. The value_if_true is the result that you want to get when the condition is met.\n\nThe third component is the value_if_false. This is the value that will be returned if the logical test is false. It can also be a number, text, date, or any other type of value. The value_if_false is the result that you want to get when the condition is not met.\n\nBy combining these three components, you can create powerful formulas that automate decision-making processes in Excel and Google Sheets. For example, you can use the IF function to calculate bonuses for employees based on their performance, determine whether a student passed or failed an exam, or even create dynamic pricing models based on customer demographics.\n\nIt's important to note that the IF function can be nested within other functions to create more complex logical tests. This allows you to build sophisticated formulas that can handle multiple conditions and return different results based on various scenarios.\n\nIn conclusion, the IF function is a versatile tool that allows you to make decisions based on specific conditions. It evaluates a logical test and returns different values depending on whether the test is true or false. By understanding its key components and exploring its practical applications, you can unlock the full potential of the IF function in Excel and Google Sheets.\n\nSetting Up the IF Function\n\nNow that you have a good understanding of the IF function, let's take a look at how to set it up properly. Before writing your first IF function, it's essential to prepare your data. Make sure that the data you are working with is organized and contains the necessary information for your logical tests.\n\nWhen preparing your data, it's helpful to ensure that all relevant variables are clearly defined. For example, if you are using the IF function to determine whether a student has passed a test, you would need to have the student's test score and the passing threshold clearly identified in your data. This level of organization will make it easier for you to write accurate and efficient IF functions.\n\nWriting your first IF function involves specifying the logical test and providing the values that will be returned based on the outcome. To create a basic IF function, start with the equals sign (=) followed by \"IF\". Then add the logical test, which can be a comparison between two values using operators like greater than (>), less than (<), equal to (=), or not equal to (<>). The logical test will determine whether the value is true or false.\n\nOnce you have defined the logical test, you need to provide the value that will be returned if the logical test is true. This is known as the value_if_true. For example, if the logical test is whether a student's test score is greater than or equal to the passing threshold, the value_if_true could be \"Pass\".\n\nOn the other hand, if the logical test is false, you need to specify the value that will be returned. This is known as the value_if_false. Continuing with the previous example, if the student's test score is below the passing threshold, the value_if_false could be \"Fail\".\n\nIt's crucial to keep the syntax and order of the arguments consistent to avoid errors. Misplacing a comma or using the wrong argument order can lead to incorrect results or formula errors. Taking the time to double-check your syntax and argument order will save you time and frustration in the long run.\n\nOnce you have set up your IF function, you can copy and paste it to other cells in your spreadsheet to apply the same logical test to different data points. This allows you to quickly analyze and categorize large sets of data based on specific criteria.\n\nRemember, the IF function is a powerful tool that can be used in various scenarios to automate decision-making processes. By understanding how to properly set up the IF function, you can unlock its full potential and make your data analysis more efficient and accurate.\n\nPractical Applications of the IF Function\n\nThe IF function, a powerful tool in data analysis and decision-making processes, offers a wide range of practical applications that can greatly enhance your workflow. By incorporating the IF function into your data analysis, you can automate actions based on specific conditions, leading to more efficient and accurate results.\n\nOne common application of the IF function is decision making. With its ability to evaluate conditions and perform different actions accordingly, the IF function allows you to streamline your decision-making process. For instance, you can use the IF function to categorize sales data into different regions, making it easier to analyze and compare performance across various geographical areas. Additionally, the IF function can be employed to identify products that meet certain criteria, enabling you to quickly filter and focus on specific subsets of data.\n\nMoreover, the IF function serves as an effective tool for error handling. In data analysis, errors can occur due to various reasons, such as incorrect input or formula mistakes. By utilizing the IF function, you can check for errors in your data and implement specific messages or actions to address them. This proactive approach to error handling helps you identify and rectify mistakes in your calculations, ensuring the accuracy and reliability of your results.\n\nFurthermore, the IF function can be utilized to perform complex calculations and generate customized outputs. With its ability to evaluate multiple conditions, the IF function allows you to create intricate logical statements that cater to your specific needs. This flexibility empowers you to tackle complex data analysis tasks, such as calculating weighted averages or determining eligibility criteria for a particular program.\n\nIn summary, the IF function offers a multitude of practical applications that can significantly enhance your data analysis and decision-making processes. Whether it's automating actions based on conditions, handling errors, performing complex calculations, or generating customized outputs, the IF function proves to be an invaluable tool in optimizing your workflow and achieving accurate results.\n\nCommon Errors and Troubleshooting the IF Function\n\nWhile the IF function is relatively straightforward, it's not uncommon to encounter errors when implementing it. Identifying common errors is crucial for troubleshooting and resolving issues. Some common errors include mismatched parentheses, incorrect syntax, and conflicting logical tests. By studying these errors and understanding their causes, you can improve your troubleshooting skills and avoid similar mistakes in the future.\n\nWhen dealing with errors in the IF function, there are several tips you can follow to simplify the troubleshooting process. These include double-checking your syntax, using cell references instead of hardcoding values, and simplifying complex formulas into smaller parts. Taking these steps can help you quickly isolate and resolve errors, enabling you to use the IF function seamlessly.\n\nAdvanced Uses of the IF Function\n\nIn addition to its basic functionality, the IF function offers advanced features that allow for more complex calculations. One such feature is nesting IF functions. Nesting involves using multiple IF functions within each other, allowing for multiple logical tests and outcomes. This can be useful when dealing with more extensive datasets or when there are multiple conditions to evaluate.\n\nAnother advanced use of the IF function involves combining it with other functions. By combining the IF function with functions such as SUM, AVERAGE, or CONCATENATE, you can create more powerful formulas that cater to your specific needs. This allows for greater flexibility and customization, making the IF function even more valuable in your data analysis efforts.\n\nIn conclusion, the IF function is a versatile tool that provides endless possibilities for data analysis, decision making, and error handling. By understanding its purpose, setting it up correctly, and utilizing its advanced features, you can leverage the full potential of the IF function and enhance your Excel skills. So, the next time you find yourself needing to perform logical tests and make decisions in Excel and Google Sheets, remember to harness the power of the IF function.\n\nThe IF statement itself is not a problem for spreadsheets. The performance limitation with IF statements arises with nested IF statements applied to tens of thousands or hundreds of thousands of rows. Because Excel and Google Sheets run locally on your computer large data sets with nested IF statements may cause your spreadsheet to slow or crash. As the data set grows, there are more pieces of data to look through, thus increasing the memory requirement on the computer. If IF statements are crashing your Excel file or Google Sheets workbook, try using Row Zero, a powerful spreadsheet designed for big data sets.\n• The 'IF' function allows for nested statements to handle multiple conditions and outcomes.\n• The logical test can include comparison operators like >, <, >=, <=, =, as well as logical operators like AND, OR, NOT to create complex conditions.\n• The 'value_if_true' and 'value_if_false' arguments can be values, formulas, or references to other cells in the spreadsheet.\n• Ensure the order of nested 'IF' statements is accurate to achieve correct evaluations.\n• For COUNT, AVERAGE, or SUM functions combined with conditional IF statements, use COUNTIF, COUNTIFS, AVERAGEIF, AVERAGEIFS, SUMIF, and SUMIFS.\n• Running IF statements across thousands of rows in a spreadsheet can be slow. Row Zero is a spreadsheet designed for performance and big data sets that won't freeze or slow down.\n\nWhen to use the IF function\n\nThe 'IF' function is commonly used in spreadsheets for various purposes, including:\n• Data validation: Checking if data meets certain criteria before accepting or rejecting it.\n• Dynamic reporting: Displaying different values or text based on changing conditions.\n\nIn summary, the 'IF' function stands as a cornerstone in spreadsheet management, enabling users to automate and refine their data analysis and decision-making processes. Through a combination of logical tests, conditional formatting, and integration with other functions, it offers a versatile and powerful means of managing complex data sets. By mastering the 'IF' function, users can significantly enhance their ability to analyze data, handle errors, and create dynamic and responsive spreadsheet environments, making it an indispensable tool in any data-driven context. The 'IF' function is a fundamental tool in spreadsheets, empowering users to create flexible and intelligent sheets that respond dynamically to data changes and conditions. Open a Row Zero workbook and give it a try.\n• How to Use COUNTIF\n• How to Use XLOOKUP\n• Excel vs Google Sheets vs Row Zero"
    },
    {
        "link": "https://ablebits.com/office-addins-blog/if-function-excel",
        "document": "In this article, you will learn how to build an Excel IF statement for different types of values as well as how to create multiple IF statements.\n\nIF is one of the most popular and useful functions in Excel. Generally, you use an IF statement to test a condition and to return one value if the condition is met, and another value if the condition is not met.\n\nIn this tutorial, we are going to learn the syntax and common usages of the Excel IF function, and then take a closer look at formula examples that will hopefully prove helpful to both beginners and experienced users.\n\nIF is one of logical functions that evaluates a certain condition and returns one value if the condition is TRUE, and another value if the condition is FALSE. The syntax of the IF function is as follows: As you see, IF takes a total of 3 arguments, but only the first one is obligatory, the other two are optional. Logical_test (required) - the condition to test. Can be evaluated as either TRUE or FALSE. Value_if_true (optional) - the value to return when the logical test evaluates to TRUE, i.e. the condition is met. If omitted, the value_if_false argument must be defined. Value_if_false (optional) - the value to return when the logical test evaluates to FALSE, i.e. the condition is not met. If omitted, the value_if_true argument must be set.\n\n\n\nTo create a simple If then statement in Excel, this is what you need to do:\n• For logical_test, write an expression that returns either TRUE or FALSE. For this, you'd normally use one of the logical operators.\n• For value_if_true, specify what to return when the logical test evaluates to TRUE.\n• For value_if_false, specify what to return when the logical test evaluates to FALSE. Though this argument is optional, we recommend always configuring it to avoid unexpected results. For the detailed explanation, please see Excel IF: things to know. As an example, let's write a very simple IF formula that checks a value in cell A2 and returns \"Good\" if the value is greater than 80, \"Bad\" otherwise: This formula goes to C2, and then is copied down through C7: In case you wish to return a value only when the condition is met (or not met), otherwise - nothing, then use an empty string (\"\") for the \"undefined\" argument. For example: This formula will return \"Good\" if the value in A2 is greater than 80, a blank cell otherwise:\n\nExcel If then formula: things to know Though the last two parameters of the IF function are optional, your formula may produce unexpected results if you don't know the underlying logic. If the 2nd argument of your Excel IF formula is omitted (i.e. there are two consecutive commas after the logical test), you'll get zero (0) when the condition is met, which makes no sense in most cases. Here is an example of such a formula: To return a blank cell instead, supply an empty string (\"\") for the second parameter, like this: The screenshot below demonstrates the difference: Omitting the 3rd parameter of IF will produce the following results when the logical test evaluates to FALSE. If there is just a closing bracket after value_if_true, the IF function will return the logical value FALSE. Quite unexpected, isn't it? Here is an example of such a formula: Typing a comma after the value_if_true argument will force Excel to return 0, which doesn't make much sense either: The most reasonable approach is using a zero-length string (\"\") to get a blank cell when the condition is not met: Tip. To return a logical value when the specified condition is met or not met, supply TRUE for value_if_true and FALSE for value_if_false. For the results to be Boolean values that other Excel functions can recognize, don't enclose TRUE and FALSE in double quotes as this will turn them into normal text values.\n\nUsing IF function in Excel - formula examples Now that you are familiar with the IF function's syntax, let's look at some formula examples and learn how to use If then statements in real-life scenarios. To build an IF statement for numbers, use logical operators such as:\n• Greater than or equal to (>=)\n• Less than or equal to (<=) Above, you have already seen an example of such a formula that checks if a number is greater than a given number. And here's a formula that checks if a cell contains a negative number: For negative numbers (which are less than 0), the formula returns \"Invalid\"; for zeros and positive numbers - a blank cell. Commonly, you write an IF statement for text values using either \"equal to\" or \"not equal to\" operator. For example, the following formula checks the Delivery Status in B2 to determine whether an action is required or not: Translated into plain English, the formula says: return \"No\" if B2 is equal to \"delivered\", \"Yes\" otherwise. Another way to achieve the same result is to use the \"not equal to\" operator and swap the value_if_true and value_if_false values:\n• When using text values for IF's parameters, remember to always enclose them in double quotes.\n• Like most other Excel functions, IF is case-insensitive by default. In the above example, it does not differentiate between \"delivered\", \"Delivered\", and \"DELIVERED\". To treat uppercase and lowercase letters as different characters, use IF in combination with the case-sensitive EXACT function. For example, to return \"No\" only when B2 contains \"DELIVERED\" (the uppercase), you'd use this formula: In situation when you want to base the condition on partial match rather than exact match, an immediate solution that comes to mind is using wildcards in the logical test. However, this simple and obvious approach won't work. Many functions accept wildcards, but regrettably IF is not one of them. A working solution is to use IF in combination with ISNUMBER and SEARCH (case-insensitive) or FIND (case-sensitive). For example, in case \"No\" action is required both for \"Delivered\" and \"Out for delivery\" items, the following formula will work a treat: For more information, please see:\n• If cell contains then At first sight, it may seem that IF formulas for dates are akin to IF statements for numeric and text values. Regrettably, it is not so. Unlike many other functions, IF does recognize dates in logical tests and interprets them as mere text strings. In other words, you cannot supply a date in the form of \"1/1/2020\" or \">1/1/2020\". To make the IF function recognize a date, you need to wrap it in the DATEVALUE function. For example, here's how you can check if a given date is greater than another date: This formula evaluates the dates in column B and returns \"Coming soon\" if a game is scheduled for 18-Jul-2022 or later, \"Completed\" for a prior date. Of course, there is nothing that would prevent you from entering the target date in a predefined cell (say E2) and referring to that cell. Just remember to lock the cell address with the $ sign to make it an absolute reference. For instance: To compare a date with the current date, use the TODAY() function. For example: Excel IF statement for blanks and non-blanks If you are looking to somehow mark your data based on a certain cell(s) being empty or not empty, you can either:\n• Use the IF function together with ISBLANK, or\n• Use the logical expressions =\"\" (equal to blank) or <>\"\" (not equal to blank). The table below explains the difference between these two approaches with formula examples. Evaluates to TRUE if a cell is visually empty, even if it contains a zero-length string. =IF(A1=\"\", 0, 1) Returns 0 if A1 is visually blank. Otherwise returns 1. If A1 contains an empty string (\"\"), the formula returns 0. Evaluates to TRUE is a cell contains absolutely nothing - no formula, no spaces, no empty strings. =IF( Returns 0 if A1 is absolutely empty, 1 otherwise. If A1 contains an empty string (\"\"), the formula returns 1. Evaluates to TRUE if a cell contains some data. Otherwise, evaluates to FALSE. =IF( Returns 1 if A1 is non-blank; 0 otherwise. If A1 contains an empty string, the formula returns 0. Evaluates to TRUE if a cell is not empty. Otherwise, evaluates to FALSE. =IF( Works the same as the above formula, but returns 1 if A1 contains an empty string. And now, let's see blank and non-blank IF statements in action. Suppose you have a date in column B only if a game has already been played. To label the completed games, use one of these formulas: In case the tested cells have no zero-length strings, all the formulas will return exactly the same results: Check if two cells are the same To create a formula that checks if two cells match, compare the cells by using the equals sign (=) in the logical test of IF. For example: To check if the two cells contain same text including the letter case, make your IF formula case-sensitive with the help of the EXACT function. For instance, to compare the passwords in A2 and B2, and returns \"Match\" if the two strings are exactly the same, \"Do not match\" otherwise, the formula is: IF then formula to run another formula In all of the previous examples, an Excel IF statement returned values. But it can also perform a certain calculation or execute another formula when a specific condition is met or not met. For this, embed another function or arithmetic expression in the value_if_true and/or value_if_false arguments. For example, if B2 is greater than 80, we'll have it multiplied by 7%, otherwise by 3%:\n\nStarting from Excel 2007, we have a special function, named IFERROR, to check formulas for errors. In Excel 2013 and higher, there is also the IFNA function to handle #N/A errors. And still, there may be some circumstances when using the IF function together with ISERROR or ISNA is a better solution. Basically, IF ISERROR is the formula to use when you want to return something if error and something else if no error. The IFERROR function is unable to do that as it always returns the result of the main formula if it isn't an error. For example, to compare each score in column B against the top 3 scores in E2:E4, and return \"Yes\" if a match is found, \"No\" otherwise, you enter this formula in C2, and then copy it down through C7: For more information, please see IF ISERROR formula in Excel.\n\n\n\nHopefully, our examples have helped you get a grasp of the Excel IF basics. I thank you for reading and hope to see you on our blog next week!"
    },
    {
        "link": "https://support.microsoft.com/en-us/office/if-function-nested-formulas-and-avoiding-pitfalls-0b22ff44-f149-44ba-aeb5-4ef99da241c8",
        "document": "The IF function allows you to make a logical comparison between a value and what you expect by testing for a condition and returning a result if True or False.\n• =IF(Something is True, then do something, otherwise do something else) So an IF statement can have two results. The first result is if your comparison is True, the second if your comparison is False. IF statements are incredibly robust, and form the basis of many spreadsheet models, but they are also the root cause of many spreadsheet issues. Ideally, an IF statement should apply to minimal conditions, such as Male/Female, Yes/No/Maybe, to name a few, but sometimes you might need to evaluate more complex scenarios that require nesting* more than 3 IF functions together. * \"Nesting\" refers to the practice of joining multiple functions together in one formula.\n\nWhile Excel will allow you to nest up to 64 different IF functions, it's not at all advisable to do so. Why?\n• Multiple IF statements require a great deal of thought to build correctly and make sure that their logic can calculate correctly through each condition all the way to the end. If you don't nest your formula 100% accurately, then it might work 75% of the time, but return unexpected results 25% of the time. Unfortunately, the odds of you catching the 25% are slim.\n• Multiple IF statements can become incredibly difficult to maintain, especially when you come back some time later and try to figure out what you, or worse someone else, was trying to do. If you find yourself with an IF statement that just seems to keep growing with no end in sight, it's time to put down the mouse and rethink your strategy. Let's look at how to properly create a complex nested IF statement using multiple IFs, and when to recognize that it's time to use another tool in your Excel arsenal.\n\nFollowing is an example of a relatively standard nested IF statement to convert student test scores to their letter grade equivalent.\n• This complex nested IF statement follows a straightforward logic:\n• If the Test Score (in cell D2) is greater than 89, then the student gets an A\n• If the Test Score is greater than 79, then the student gets a B\n• If the Test Score is greater than 69, then the student gets a C\n• If the Test Score is greater than 59, then the student gets a D\n• Otherwise the student gets an F This particular example is relatively safe because it's not likely that the correlation between test scores and letter grades will change, so it won't require much maintenance. But here's a thought – what if you need to segment the grades between A+, A and A- (and so on)? Now your four condition IF statement needs to be rewritten to have 12 conditions! Here's what your formula would look like now: It's still functionally accurate and will work as expected, but it takes a long time to write and longer to test to make sure it does what you want. Another glaring issue is that you've had to enter the scores and equivalent letter grades by hand. What are the odds that you'll accidentally have a typo? Now imagine trying to do this 64 times with more complex conditions! Sure, it's possible, but do you really want to subject yourself to this kind of effort and probable errors that will be really hard to spot? Tip: Every function in Excel requires an opening and closing parenthesis (). Excel will try to help you figure out what goes where by coloring different parts of your formula when you're editing it. For instance, if you were to edit the above formula, as you move the cursor past each of the ending parentheses \")\", its corresponding opening parenthesis will turn the same color. This can be especially useful in complex nested formulas when you're trying to figure out if you have enough matching parentheses.\n\nFollowing is a very common example of calculating Sales Commission based on levels of Revenue achievement. This formula says IF(C9 is Greater Than 15,000 then return 20%, IF(C9 is Greater Than 12,500 then return 17.5%, and so on... While it's remarkably similar to the earlier Grades example, this formula is a great example of how difficult it can be to maintain large IF statements – what would you need to do if your organization decided to add new compensation levels and possibly even change the existing dollar or percentage values? You'd have a lot of work on your hands! Tip: You can insert line breaks in the formula bar to make long formulas easier to read. Just press ALT+ENTER before the text you want to wrap to a new line. Here is an example of the commission scenario with the logic out of order: Can you see what's wrong? Compare the order of the Revenue comparisons to the previous example. Which way is this one going? That's right, it's going from bottom up ($5,000 to $15,000), not the other way around. But why should that be such a big deal? It's a big deal because the formula can't pass the first evaluation for any value over $5,000. Let's say you've got $12,500 in revenue – the IF statement will return 10% because it is greater than $5,000, and it will stop there. This can be incredibly problematic because in a lot of situations these types of errors go unnoticed until they've had a negative impact. So knowing that there are some serious pitfalls with complex nested IF statements, what can you do? In most cases, you can use the VLOOKUP function instead of building a complex formula with the IF function. Using VLOOKUP, you first need to create a reference table: This formula says to look for the value in C2 in the range C5:C17. If the value is found, then return the corresponding value from the same row in column D. Similarly, this formula looks for the value in cell B9 in the range B2:B22. If the value is found, then return the corresponding value from the same row in column C. Note: Both of these VLOOKUPs use the TRUE argument at the end of the formulas, meaning we want them to look for an approxiate match. In other words, it will match the exact values in the lookup table, as well as any values that fall between them. In this case the lookup tables need to be sorted in Ascending order, from smallest to largest. VLOOKUP is covered in much more detail here, but this is sure a lot simpler than a 12-level, complex nested IF statement! There are other less obvious benefits as well:\n• VLOOKUP reference tables are right out in the open and easy to see.\n• Table values can be easily updated and you never have to touch the formula if your conditions change.\n• If you don't want people to see or interfere with your reference table, just put it on another worksheet."
    },
    {
        "link": "https://ablebits.com/office-addins-blog/nested-if-excel-multiple-conditions",
        "document": "The tutorial explains how to use multiple IF in Excel and provides a couple of nested If formula examples for most common tasks.\n\nIf someone asks you what Excel function you use most often, what would your answer be? In most cases, it's the Excel IF function. A regular If formula that tests a single condition is very straightforward and easy to write. But what if your data requires more elaborate logical tests with multiple conditions? In this case, you can include several IF functions in one formula, and these multiple If statements are called Excel Nested IF. The biggest advantage of the nested If statement is that it allows you to check more than one condition and return different values depending on the results of those checks, all in a single formula.\n\nMicrosoft Excel has limits to the levels of nested IFs. In Excel 2003 and lower, up to 7 levels were allowed. In Excel 2007 and higher, you can nest up to 64 IF functions in one formula.\n\nFurther on in this tutorial, you will find a couple of Excel nested If examples along with a detailed explanation of their syntax and logic.\n\nHere's a typical example of Excel If with multiple conditions. Supposing you have a list of students in column A and their exam scores in column B, and you want to classify the scores with the following conditions: And now, let's write a nested IF function based on the above criteria. It's considered a good practice to begin with the most important condition and keep your functions as simple as possible. Our Excel nested IF formula goes as follows: And works exactly as it should:\n\n I've heard some people say that Excel multiple If is driving them crazy :) Try looking at it at a different angle:\n\n What the formula actually tells Excel to do is to evaluate the logical_test of the first IF function and, if the condition is met, return the value supplied in the value_if_true argument. If the condition of the 1st If function is not met, then test the 2nd If statement, and so on. IF(check if B2>=249, if true - return \"Excellent\", or else \n\n IF(check if B2>=200, if true - return \"Good\", or else\n\n IF(check if B2>150, if true - return \"Satisfactory\", if false -\n\n return \"Poor\"))) If you need a nested IF formula with wildcard characters (partial match), check out this example: If cell contains, then return different values.\n\n\n\nExample 2. Multiple If with arithmetic calculations Here's another typical task: the unit price varies depending on the specified quantity, and your goal is to write a formula that calculates the total price for any amount of items input in a specific cell. In other words, your formula needs to check multiple conditions and perform different calculations depending on what amount range the specified quantity falls in: This task can also be accomplished by using multiple IF functions. The logic is the same as in the above example, the only difference is that you multiply the specified quantity by the value returned by nested IFs (i.e. the corresponding price per unit). Assuming the user enters the quantity in cell B8, the formula is as follows: And the result will look something similar to this:\n\n As you understand, this example demonstrates only the general approach, and you can easily customize this nested If function depending on your particular task. For example, instead of \"hard-coding\" the prices in the formula, you can reference the cells containing those values (cells B2 to B6). This will enable your users to edit the source data without having to update the formula: Or, you may want to include an additional IF function(s) that fixes an upper, lower or both bounds of the amount range. When the quantity is outside the range, the formula will display an \"out of the range\" message. For example: =IF(OR(B8>200,B8<1), \"Qty. out of range\", B8*IF(B8>=101,12, IF(B8>=50, 13, IF(B8>=20, 16, IF( B8>=11, 18, IF(B8>=1, 20, \"\")))))) \n\n The nested IF formulas described above work in all versions of Excel. In Excel 365 and Excel 2021, you can also use the IFS function for the same purpose. Advanced Excel users that are familiar with array formulas, can use this formula that basically does the same thing as the nested IF function discussed above. Though the array formula is far more difficult to comprehend, let along to write, it has one indisputable advantage - you specify the range of cells containing your conditions rather than referencing each condition individually. This makes the formula more flexible, and if your users happen to change any of the existing conditions or add a new one, you will only have to update a single range reference in the formula.\n\n\n\nAs you have just seen, there is no rocket science in using multiple IF in Excel. The following tips will help you improve your nested IF formulas and prevent common mistakes. In Excel 2007 - Excel 365, you can nest up to 64 IF functions. In older versions of Excel 2003 and lower, up to 7 nested IF functions can be used. However, the fact that you can nest a lot of IFs in one formula doesn't mean you should. Please keep in mind that each additional level makes your formula more difficult to understand and troubleshoot. If your formula has too many nested levels, you may want to optimize it by using one of these alternatives.\n\n The order of nested IF functions matters The Excel nested IF function evaluates the logical tests in the order they appear in the formula, and as soon as one of the conditions evaluates to TRUE, the subsequent conditions are not tested. In other words, the formula stops after the first TRUE result. Let's see how it works in practice. With B2 equal to 274, the nested IF formula below evaluates the first logical test (B2>249), and returns \"Excellent\" because this logical test is TRUE: Now, let's reverse the order of IF functions: The formula tests the first condition, and because 274 is greater than 150, the result of this logical test is also TRUE. Consequently, the formula returns \"Satisfactory\" without testing other conditions. You see, changing the order of IF functions changes the result:\n\n \n\n To watch the logical flow of your nested IF formula step-by-step, use the Evaluate Formula feature located on the Formula tab, in the Formula Auditing group. The underlined expression is the part currently under evaluation, and clicking the Evaluate button will show you all the steps in the evaluation process. For example, the evaluation of the first logical test of the nested IF formula shown in the screenshot below will go as follows: B2>249; 274>249; TRUE; Excellent.\n\n \n\n Balance the parenthesis of nested IF functions One of the main challenges with nested IFs in Excel is matching parenthesis pairs. If the parentheses do not match, your formula won't work. Luckily, Microsoft Excel provides a couple of features that can help you to balance the parentheses when editing a formula:\n• If you have more than one set of parentheses, the parenthesis pairs are shaded in different colors so that the opening parenthesis matches the closing one.\n• When you close a parenthesis, Excel briefly highlights the matching pair. The same bolding, or \"flickering\", effect is produced when you move through the formula by using the arrow keys. For more information, please see Match parenthesis pairs in Excel formulas.\n\n When building logical tests of your nested IF formulas, remember that text and numbers should be treated differently - always enclose text values in double quotes, but never put quotes around numbers: The logical test of the second formula will return FALSE even if the value in B2 is greater than 249. Why? Because 249 is a number and \"249\" is a numeric string, which are two different things.\n\n Add spaces or line breaks to make nested IFs easier to read When building a formula with multiple nested IF levels, you can make the formula's logic clearer by separating different IF functions with spaces or line breaks. Excel doesn't care about extra spacing in a formula, so you may not worry about mangling it. To move a certain part of the formula to the next line, just click where you want to insert a line break, and press Alt + Enter. Then, expand the formula bar as much as needed and you will see that your nested IF formula has become much easier to understand.\n\n \n\n\n\nThis is how you use an If formula in Excel with multiple conditions. I thank you for reading and hope to see you on our blog next week."
    },
    {
        "link": "https://datacamp.com/tutorial/nested-if-excel",
        "document": "Learn how to analyze data with PivotTables and intermediate logical functions before moving on to tools such as what-if analysis and forecasting."
    },
    {
        "link": "https://ablebits.com/office-addins-blog/excel-nested-if-statement",
        "document": "The tutorial explains how to use the nested IF function in Excel to check multiple conditions. You will also learn a few other functions that could be good alternatives to using a nested formula in Excel.\n\nHow do you usually implement a decision-making logic in your Excel worksheets? In most cases, you'd use an IF formula to test your condition and return one value if the condition is met, another value if the condition is not met. To evaluate more than one condition and return different values depending on the results, you nest multiple IFs inside each other.\n\nThough very popular, the nested IF statement is not the only way to check multiple conditions in Excel. In this tutorial, you will find a handful of alternatives that are definitely worth exploring.\n\nHere's the classic Excel nested IF formula in a generic form: You can see that each subsequent IF function is embedded into the value_if_false argument of the previous function. Each IF function is enclosed in its own set of parentheses, but all the closing parentheses are at the end of the formula. Our generic nested IF formula evaluates 3 conditions, and returns 4 different results (result 4 is returned if none of the conditions is TRUE). Translated into a human language, this nested IF statement tells Excel to do the following: Test condition1, if TRUE - return result1, if FALSE -\n\ntest condition2, if TRUE - return result2, if FALSE -\n\n test condition3, if TRUE - return result3, if FALSE -\n\nreturn result4 As an example, let's find out commissions for a number of sellers based on the amount of sales they've made: In math, changing the order of addends does not change the sum. In Excel, changing the order of IF functions changes the result. Why? Because a nested IF formula returns a value corresponding to the first TRUE condition. Therefore, in your nested IF statements, it's very important to arrange the conditions in the right direction - high to low or low to high, depending on your formula's logic. In our case, we check the \"highest\" condition first, then the \"second highest\", and so on: If we placed the conditions in the reverse order, from the bottom up, the results would be all wrong because our formula would stop after the first logical test (B2>=1) for any value greater than 1. Let's say, we have $100 in sales - it is greater than 1, so the formula would not check other conditions and return 3% as the result. If you'd rather arrange the conditions from low to high, then use the \"less than\" operator and evaluate the \"lowest\" condition first, then the \"second lowest\", and so on: As you see, it takes quite a lot of thought to build the logic of a nested IF statement correctly all the way to the end. And although Microsoft Excel allows nesting up to 64 IF functions in one formula, it is not something you'd really want to do in your worksheets. So, if you (or someone else) are gazing at your Excel nested IF formula trying to figure out what it actually does, it's time to reconsider your strategy and probably choose another tool in your arsenal. For more information, please see Excel nested IF statement.\n\n\n\nIn case you need to evaluate a few sets of different conditions, you can express those conditions using OR as well as AND function, nest the functions inside IF statements, and then nest the IF statements into each other. Nested IF in Excel with OR statements By using the OR function you can check two or more different conditions in the logical test of each IF function and return TRUE if any (at least one) of the OR arguments evaluates to TRUE. To see how it actually works, please consider the following example. Supposing, you have two columns of sales, say January sales in column B and February sales in column C. You wish to check the numbers in both columns and calculate the commission based on a higher number. In other words, you build a formula with the following logic: if either Jan or Feb sales are greater than $150, the seller gets 10% commission, if Jan or Feb sales are greater than or equal to $101, the seller gets 7% commission, and so on. To have it done, write a few OF statements like OR(B2>150, C2>150) and nest them into the logical tests of the IF functions discussed above. As the result, you get this formula: And have the commission assigned based on the higher sales amount:\n\n For more formula examples, please see Excel IF OR statement.\n\n Nested IF in Excel with AND statements If your logical tests include multiple conditions, and all of those conditions should evaluate to TRUE, express them by using the AND function. For example, to assign the commissions based on a lower number of sales, take the above formula and replace OR with AND statements. To put it differently, you tell Excel to return 10% only if Jan and Feb sales are greater than $150, 7% if Jan and Feb sales are greater than or equal to $101, and so on. As the result, our nested IF formula calculates the commission based on the lower number in columns B and C. If either column is empty, there is no commission at all because none of the AND conditions is met:\n\n If you'd like to return 0% instead of blank cells, replace an empty string (''\") in the last argument with 0%: More information can be found here: Excel IF with multiple AND/OR conditions.\n\n\n\nVLOOKUP instead of nested IF in Excel When you are dealing with \"scales\", i.e. continuous ranges of numerical values that together cover the entire range, in most cases you can use the VLOOKUP function instead of nested IFs. For starters, make a reference table like shown in the screenshot below. And then, build a Vlookup formula with approximate match, i.e. with the range_lookup argument set to TRUE. Assuming the lookup value is in B2 and the reference table is F2:G5, the formula goes as follows: Please notice that we fix the table_array with absolute references ($F$2:$G$5) for the formula to copy correctly to other cells:\n\n By setting the last argument of your Vlookup formula to TRUE, you tell Excel to search for the closest match - if an exact match is not found, return the next largest value that is smaller than the lookup value. As the result, your formula will match not only the exact values in the lookup table, but also any values that fall in between. For example, the lookup value in B3 is $95. This number does not exist in the lookup table, and Vlookup with exact match would return an #N/A error in this case. But Vlookup with approximate match continues searching until it finds the nearest value that is less than the lookup value (which is $50 in our example) and returns a value from the second column in the same row (which is 5%). But what if the lookup value is less than the smallest number in the lookup table or the lookup cell is empty? In this case, a Vlookup formula will return the #N/A error. If it's not what you actually want, nest VLOOKUP inside IFERROR and supply the value to output when the lookup value is not found. For example: Important note! For a Vlookup formula with approximate match to work correctly, the first column in the lookup table must be sorted in ascending order, from smallest to largest. For more information, please see Exact match VLOOKUP vs. approximate match VLOOKUP.\n\n\n\nIFS statement as alternative to nested IF function In Excel 2016 and later versions, Microsoft introduced a special function to evaluate multiple conditions - the IFS function. An IFS formula can handle up to 127 logical_test/value_if_true pairs, and the first logical test that evaluates to TRUE \"wins\": In accordance with the above syntax, our nested IF formula can be reconstructed in this way: Please pay attention that the IFS function returns the #N/A error if none of the specified conditions is met. To avoid this, you can add one more logical_test/value_if_true to the end of your formula that will return 0 or empty string (\"\") or whatever value you want if none of the previous logical tests is TRUE: As the result, our formula will return an empty string (blank cell) instead of the #N/A error if a corresponding cell in column B is empty or contains text or negative number.\n\n Note. Like nested IF, Excel's IFS function returns a value corresponding to the first condition that evaluates to TRUE, which is why the order of logical tests in an IFS formula matters. For more information, please see Excel IFS function instead of nested IF.\n\n\n\nCHOOSE instead of nested IF formula in Excel Another way to test multiple conditions within a single formula in Excel is using the CHOOSE function, which is designed to return a value from the list based on a position of that value. Applied to our sample dataset, the formula takes the following shape: In the first argument (index_num), you evaluate all the conditions and add up the results. Given that TRUE equates to 1 and FALSE to 0, this way you calculate the position of the value to return. For example, the value in B2 is $150. For this value, the first 3 conditions are TRUE and the last one (B2 > 150) is FALSE. So, index_num equals to 3, meaning the 3rd value is returned, which is 7%.\n\n Tip. If none of the logical tests is TRUE, index_num is equal to 0, and the formula returns the #VALUE! error. An easy fix is wrapping CHOOSE in the IFERROR function like this: For more information, please see Excel CHOOSE function with formula examples.\n\nSWITCH function as a concise form of nested IF in Excel In situations when you are dealing with a fixed set of predefined values, not scales, the SWITCH function can be a compact alternative to complex nested IF statements: The SWITCH function evaluates expression against a list of values and returns the result corresponding to the first found match. In case, you'd like to calculate the commission based on the following grades, rather than sales amounts, you could use this compact version of nested IF formula in Excel: Or, you can make a reference table like shown in the screenshot below and use cell references instead of hardcoded values: Please notice that we lock all references except the first one with the $ sign to prevent them from changing when copying the formula to other cells:\n\n Note. The SWITCH function is only available in Excel 2016 and higher. For more information, please see SWITCH function - the compact form of nested IF statement.\n\n\n\nYou can see that Microsoft Excel provides a handful of good alternatives to nested IF formulas, and hopefully this tutorial has given you some clues on how to leverage them in your worksheets. To have a closer look at the examples discussed in this tutorial, you are welcome to download our sample workbook below. I thank you for reading and hope to see you on our blog next week!"
    },
    {
        "link": "https://stackoverflow.com/questions/47766931/how-to-create-complex-nested-if-statement-in-excel",
        "document": "I have an If formula in Excel as seen below:\n\nBasically, if cells Q2 to U2 is O the cell with formula will have O written in it. Otherwise it will have X. Now I want to change it into a nested If statement due to new conditions.\n\nThese conditions, in order are:\n• None If any one of cells Q2 to U2 = X, cell = X\n• None If any one of cells Q2 to U2 = date format, cell = ∆\n• None If none of the conditions are met, the cell will have value \"FALSE\". (Default appears)\n\nEach of the cells have this condition to follow,\n• If any one of cells Q2 to U2 = -, ignore that cell and count the other cells to get final result.\n\nI tried switching to Or in my original formula to test out conditions 1 and 3.\n\nBut it doesn't work. Plus I'm not sure how to do condition 5 as well. Any help?\n\nIs it possible to do something so complex just by using Excel formula? Or do I need to go into VBA?"
    }
]