[
    {
        "link": "https://aseprite.org/docs/sprite-sheet",
        "document": "A sprite sheet is one big image with several frames of the same sprite on it. For example, you can save this animation:\n\nIn the following section you will know how to export and import this kind of images into Aseprite.\n\nTo import a sprite sheet use File > Import Sprite Sheet option. Then you can select the file to import with an assigned offset , and sprite , .\n\nPadding is available if there are gaps between sprites, and the sheet type will affect the order of the sprites taken in.\n\nTo export a sprite sheet use File > Export Sprite Sheet option. You can select all visible layers or a certain layer, and select the frames based on tags.\n\nA texture atlas is an huge image with all the graphics, sprites and images that a game will use. It's called \"texture\" because the image can be loaded into the video memory, to render graphics on screen with hardware acceleration."
    },
    {
        "link": "https://aseprite.org/docs/exporting",
        "document": "Generally you will use File > Save to save your work with full information as an file. Then you can export your sprite for your own game, website, application, etc. using the File > Export > Export As menu option ( key or on macOS) to convert your sprite into a file or a sequence of files.\n\nFile > Export > Export As will remember the latest options you've used in case that you want to save the copy again.\n\nYou can save the whole animation as a sequence specifying a file name with a number and a file type for static images. E.g. where specifies the number of the first frame, and the static file type used to save each frame. See how to load a sequence of images.\n\nIf you specify other file name like file names will be like , , , etc.\n\nFrom File > Export you can export one frame (or one layer, or a set of selected frames, etc.) changing Frames field to Selected frames:\n\nThe File > Export dialog contains a special Resize field so you can save your copy with other scale. E.g. It's useful to upload your animation for social networks (like Twitter), that needs higher scales (e.g. 400% of your original sprite size):\n\nThere are other useful options in File > Export:\n• Animation Direction: You can export your animation in Forward, Backward, or Ping-Pong mode.\n• Apply pixel ratio: In case your sprite has a special pixel aspect ratio (like 2:1), checking this option will export the sprite applying the pixel aspect ratio to the final result.\n• Export for Twitter: Adjusts the animation to avoid some problems on Twitter reproducing the last frame with an invalid delay."
    },
    {
        "link": "https://aseprite.org/docs/save",
        "document": "You can save your sprite using the File > Save menu or pressing ( on macOS).\n\nWe highly recommend you to save your sprites in the .aseprite format, so you keep the full sprite information intact (layers, frames, etc.). But you can save your sprite as other file types if you don't need all this information. For example, you can open a file, editing it, and save it again as (without using the format).\n\nIf you want to export your sprite as a file or a animation, you can use the File > Export option. See the Exporting section for more information."
    },
    {
        "link": "https://reddit.com/r/aseprite/comments/v44jxn/exporting_sprite_sheet_without_losing_quality",
        "document": "Create your account and connect with a world of communities.\n\nBy continuing, you agree to our\n\nand acknowledge that you understand the"
    },
    {
        "link": "https://aseprite.org/docs",
        "document": "Aseprite lets you create 2D animations for videogames. From sprites, to pixel-art, retro style graphics, and whatever you like about the 8-bit and 16-bit era.\n\nHere you will find some help, tutorials, and little tips to use Aseprite and start getting the best from it from the very beginning. If you have some questions you can start looking at the Frequently Asked Questions.\n\nTo get started, you can print the Quick Reference. It contains several keyboard shortcuts, so it could be handy to have it at your side.\n\nBasics: General concepts, elements in the window, expected workflow, etc.\n• Create a new Sprite or Open an existing one\n\nLayers: How to handle several layers to compose images"
    },
    {
        "link": "https://timlahstexts.wordpress.com/2020/01/29/creating-a-spritesheet-in-gimp",
        "document": "GIMP, the GNU Image Manipulation Program, is a tool I’ve been using for a long time. Typically you could compare it to Photoshop, or other image manipulating programs. It had a bit of a rocky beginning, but nothing unimaginable. What makes it so great is the fact it’s FOSS, otherwise known as Free Open-Source Software. As such, you can go to their website (linked at the start of this paragraph), download it and use it for free with no questions asked. Anything you make on it can be used for commercial ventures too.\n\nSo why is this so important? Well, working on a game means I need assets.\n\nAs simple as it sounds, a spritesheet is effectively a large image which is made up of images spaced out. There’s one consistent background colour (or just a transparent background), which is ignored by whatever software you use. This then leaves just the images, which usually represents an animation. For instance, you may have a sprite which is of a person slashing at something, or you might have a table breaking or something like that. All of these images are effectively single frames in an animation.\n\nHow To Setup GIMP To Create Spritesheets\n\nBy default, GIMP isn’t setup to make spritesheets, meaning you’d have to define the sizes and everything beforehand. However if you’re like me, you may not necessarily immediately know how many frames you will make an animation and you might tweak it after you’ve created the spritesheet itself. I’m not saying this is the best or most correct method, but sometimes, it’s effective.\n\nTo set GIMP up to make Spritesheets, I followed this really useful guide. The gist of it is that you can copy the code that’s in there, paste it in a blank Notepad file and save it as something like “create_spritesheet.py”. You then put this new file in your GIMP plugin folder (Which may look something like: “C:\\Users\\YourUserName\\.gimp-2.8\\plug-ins”). Once you then open GIMP, you’ll find this under Filters > Animation > Create Spritesheet.\n\nThe above spritesheet was one I made in GIMP. It’s simple, it’s crude, but it’s a little character I made for demo purposes. Look at how spooky they are with their little blade. Aww, bless. The whole purpose was to see if I could make this animation work seemlessly in Unity and, to my satisfaction, it worked a treat.\n\nIf you’re looking to make a spritesheet like the above one, thankfully it’s pretty straightforward – albeit, I reckon you could do better than my attempt, as I made the initial character in 6 minutes 11 seconds – I timed myself! To do this, create your first “frame”, this is just how you want your animation to start. Then duplicate this frame in GIMP (right click on the Layer and click the Duplicate option). Next, using reference from the previous frame, create your second frame. You can hide the first frame/layer by clicking the eye icon to the left of the layer. Keep going until you’re done with your spritesheet animation, then click Filter > Animation > Create Spritesheet.\n\nHopefully this gives you an idea of how easy it is to make a spritesheet for yourself. If creating unique game assets is something you’ve only ever dreamed of before, then grab GIMP, get practicing and you can submit your works to the Unity Asset Store if you really work at it.\n\nThat’s it for another week. I’ll be back next week, hopefully with more substantive information on one of my projects."
    },
    {
        "link": "https://gamedev.stackexchange.com/questions/84663/how-do-i-make-an-8-bit-sprite-sheet-using-gimp-or-paint-net",
        "document": "Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers."
    },
    {
        "link": "https://reddit.com/r/gamedev/comments/202e8j/sprite_making_for_games_and_software",
        "document": "Im interested in working on a game with a few friends and I will be in charge of art (characters, items, levels) although I have no experience in this field and don't know where to start. Ive downloaded aseprite on mac but i wouldn't know how to save, export or use animated sprites. Can someone help or just give me somewhere to start so I can get a grip on the basics of sprite making."
    },
    {
        "link": "https://forums.rpgmakerweb.com/index.php?threads/how-can-i-make-my-own-sprites-and-titlesets.143454/",
        "document": "Search YouTube as well for tutorials.\n\n \n\n The first thing you need to know about scenery, for example, is that individual tiles are 48x48 pixels, so when you've looked up GIMP / Photoshop tutorials, that's the size you need to set your grid when creating tiles for your tilesets, which are the things used to build scenery.\n\n Also with tilesets, the individual pages used within them in RPGMaker, are 768x768 pixels (that's 16x16 tiles) but present in the editor as one long column (8x32 tiles).\n\n You can have 4 pages of these per tileset exactly how you want (pages B, C, D and E). The A column is a little different as it uses animated tiles. That's something you need to get to grips with in and of itself, as it's not as straightforward as the other four pages.\n\n \n\n The final page is the same for every set - R - and is used to \"mark\" tiles with numbers (blank, or 1-255) which you can see in the editor but not in play. These markers can be referenced by different events, plugins and scripts for different effects.\n\n \n\n It's also important to note that pages B, C, D and E aren't psychic to your needs - you need to tell the editor which tiles you can pass over, which you can pass behind, which you can pass through, which ones block you entirely, what direction you can travel on them, whether they should act as a ladder...\n\n \n\n This is all stuff you need to know and understand when creating your own tilesets, or even when importing the many brilliant ones from around this great community.\n\n \n\n So, to reiterate the best advice:\n\n \n\n There are no shortcuts. Take time, put in work and follow the tutorials you can find all over the place! You'll feel MUCH better off for having done so.\n\n \n\n You'll also need to find the size stats for sprites, icons, faces etc so you have all your guides set to go.\n\n \n\n Once you've followed the various tutorials, it should make a lot more sense. Good luck!"
    },
    {
        "link": "https://forum.gamemaker.io/index.php?threads/speeding-up-sprite-creation.424/",
        "document": "Yep, I already have a post in that thread about feel near the top.I think the deal here is to use your horsepower wisely. Without knowing all the details of yours or anyone's game development situation I am left assuming we are talking about smaller operations. If you or anyone feel that making left and right handed sprites are a huge deal then by all means go for it. It's only my opinion but if you are worrying about that as a detail in your game there is an implication you have drilled down pretty far in the polish and are looking for the icing on the cake type stuff.Really though it's like anything, there will always be a group who can debate either side of this subject quite successfully but if you look at the output of most companies (this includes tremendous successes and failures) pixel games tend not to have left or right hand people in situations where it is possible.-Tim"
    }
]