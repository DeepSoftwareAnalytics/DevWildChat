[
    {
        "link": "https://learn.microsoft.com/en-us/ssms/quickstarts/ssms-connect-query-sql-server",
        "document": "Get started using SQL Server Management Studio (SSMS) to connect to your SQL Server instance and run some Transact-SQL (T-SQL) commands.\n\nThe article demonstrates how to follow the below steps:\n\nThis article covers connecting and querying an instance of SQL Server. For Azure SQL, see Connect and query Azure SQL Database & SQL Managed Instance.\n\nTo use Azure Data Studio, see connect and query SQL Server, Azure SQL Database, and Azure Synapse Analytics.\n\nTo learn more about SQL Server Management Studio, see Tips and tricks for using SQL Server Management Studio (SSMS).\n\nTo complete this quickstart, you need the following prerequisites:\n• Install SQL Server from the Installation Wizard (Setup) and configure a SQL Server instance.\n\nTo connect to your SQL Server instance, follow these steps:\n• None Start SQL Server Management Studio. The first time you run SSMS, the Connect to Server window opens. If it doesn't open, you can open it manually by selecting Object Explorer > Connect > Database Engine.\n• None The Connect to Server dialog box appears. Enter the following information: For Server type, select Database Engine (usually the default option). For Server name, enter the name of your SQL Server (you can also use localhost as the server name if you're connecting locally). If you're NOT using the default instance - MSSQLSERVER - you must enter in the server name and the instance name.\n\n\n\nIf you're unsure how to determine your SQL Server instance name, see Additional tips and tricks for using SSMS. Windows Authentication is set as default.\n\nYou can also use SQL Server Authentication to connect. However, if you select SQL Server Authentication, a username and password are required.\n\nMicrosoft Entra authentication is available for SQL Server 2022 (16.x) and later versions. For step-by-step configuration instructions, see Tutorial: Set up Microsoft Entra authentication for SQL Server\n\nFor more information about authentication types, see Connect to the server (database engine). The user ID from the server account used to sign in to the server. A login is required when using SQL Server Authentication. The password from the server account used to sign in to the server. A password is required when using SQL Server Authentication. Select the encryption level for the connection. The default value is Mandatory. Check this option to bypass server certificate validation. The default value is False (unchecked), which promotes better security using trusted certificates. Host name of the server The value provided in this option is used to specify a different, but expected, CN or SAN in the server certificate. 1 The default value is Mandatory in SSMS 20. Strict (SQL Server 2022 and Azure SQL) encryption should be used for Azure SQL Database and Azure SQL Managed Instance. Strict (SQL Server 2022 and Azure SQL) encryption can be used for SQL Server when the instance has Force Strict Encryption enabled.\n• None After you complete all the fields, select Connect. You can also modify extra connection options by selecting Options. Examples of connection options are the database you're connecting to, the connection timeout value, and the network protocol. This article uses the default values for all the fields.\n• None To verify that your SQL Server connection succeeded, expand and explore the objects within Object Explorer where the server name, the SQL Server version, and the username are displayed. These objects are different depending on the server type.\n\nNow let's create a database named TutorialDB by following the below steps:\n• None Right-click your server instance in Object Explorer, and then select New Query:\n• None Paste the following T-SQL code snippet into the query window: USE master GO IF NOT EXISTS ( SELECT name FROM sys.databases WHERE name = N'TutorialDB' ) CREATE DATABASE [TutorialDB] GO\n• None Execute the query by selecting Execute or selecting F5 on your keyboard. After the query is complete, the new TutorialDB database appears in the list of databases in Object Explorer. If it isn't displayed, right-click the Databases node, and then select Refresh.\n\nIn this section, you create a table in the newly created TutorialDB database. Because the query editor is still in the context of the database, switch the connection context to the TutorialDB database by doing the following steps:\n• None In the database dropdown list, select the database that you want, as shown here:\n• None Paste the following T-SQL code snippet into the query window: USE [TutorialDB] -- Create a new table called 'Customers' in schema 'dbo' -- Drop the table if it already exists IF OBJECT_ID('dbo.Customers', 'U') IS NOT NULL DROP TABLE dbo.Customers GO -- Create the table in the specified schema CREATE TABLE dbo.Customers ( CustomerId INT NOT NULL PRIMARY KEY, -- primary key column Name NVARCHAR(50) NOT NULL, Location NVARCHAR(50) NOT NULL, Email NVARCHAR(50) NOT NULL ); GO\n• None Execute the query by selecting Execute or selecting F5 on your keyboard.\n\nAfter the query is complete, the new Customers table is displayed in the list of tables in Object Explorer. If the table isn't displayed, right-click the TutorialDB > Tables node in Object Explorer, and then select Refresh.\n\nNow let's insert some rows into the Customers table that you created. Paste the following T-SQL code snippet into the query window, and then select Execute:\n\nQuery the table and view the results\n\nThe results of a query are visible below the query text window. To query the Customers table and view the rows that were inserted, paste the following T-SQL code snippet into the query window, and then select Execute:\n\nThe query results are displayed under the area where the text was entered.\n\nYou can also modify the way results are presented by selecting one of the following options:\n• The first button displays the results in Text View, as shown in the image in the next section.\n• The middle button displays the results in Grid View, which is the default option.\n• The third button lets you save the results to a file whose extension is .rpt by default.\n\nTo review troubleshooting techniques to use when you can't connect to an instance of your SQL Server Database Engine on a single server, visit Troubleshoot connecting to the SQL Server Database Engine.\n• Tips and tricks for using SQL Server Management Studio (SSMS)"
    },
    {
        "link": "https://learn.microsoft.com/en-us/sql/sql-server/connect-to-database-engine?view=sql-server-ver16",
        "document": "This article provides a high level overview for connecting to the SQL Server Database Engine, used by the following products and services:\n\nYou connect to the Database Engine using a client tool or client library. Client tools run in a graphical user interface (GUI), or a command-line interface (CLI).\n\nThe following table describes some of the more common client tools.\n\nWhen you connect to the Database Engine, you must provide an instance name (that is, the server or instance where the Database Engine is installed), a network protocol, and a connection port, in the following format:\n\nThe protocol and port are optional because they have default values. Depending on the client tool and client library, they can be skipped.\n\nFor SQL Server on Windows, when you connect to an instance on the same machine as the client tool, and depending on which edition is installed, the default protocol can be configured with multiple protocols, including named pipes ( ), TCP/IP ( ), and shared memory ( ). Use the shared memory protocol for troubleshooting when you suspect the other protocols are configured incorrectly.\n\nIf you connect to SQL Server over a TCP/IP network, make sure that TCP/IP is enabled on the server as well. TCP/IP might be disabled by default on installations of SQL Server. For more information, see Default SQL Server Network Protocol Configuration.\n\nConnections to Azure SQL services, SQL Server on Linux, and SQL Server in containers, all use TCP/IP.\n\nFor both Azure SQL Database and Azure SQL Managed Instance, see Connect and query articles.\n\nThis section provides information on connecting to Azure SQL services.\n\nThis section provides information on connecting to SQL Server.\n\nConnect to SQL Server on the same machine as the client\n\nYou can connect to the local machine using named pipes ( ), shared memory ( ), or TCP/IP ( ). Shared memory is the fastest, because it doesn't use the network interface.\n\nA named instance has a dynamically assigned TCP port. If you want to connect to a named instance, the SQL Server Browser service must be running on the server.\n\nConnect to a default SQL Server instance on the same machine\n• None If you're connecting to a server configured with default settings, use one of the following options:\n• None If you're connecting to a custom TCP port, such as , use one of the following options:\n\nConnect to a SQL Server named instance on the same machine\n\nIn this example, the named instance is called . Make sure the SQL Server Browser service is running, and use one of the following options:\n\nConnect to SQL Server on the network\n\nYou can connect using a server name or an IP address. In this example, the server name resolves to .\n\nConnect to a default SQL Server instance on the network, using named pipes\n\nTo connect to a server on the local network with named pipes, use one of the following options:\n\nConnect to a default SQL Server instance on the network, using TCP/IP\n• None If you're connecting to a server configured with default TCP port , use one of the following options:\n• None If you're connecting to a server configured with a custom TCP port, such as , use one of the following options:\n\nConnect to a SQL Server named instance on the network, using TCP/IP\n\nIn this example, the named instance is called . Make sure the SQL Server Browser service is running on the server, and use one of the following options:\n\nOnce you connect successfully to the Database Engine using a client tool, you can execute a Transact-SQL (T-SQL) query or script.\n\nFor more information about running T-SQL queries in client tools, see:\n• Trace the network authentication process to the Database Engine\n• What is the MSSQL extension for Visual Studio Code?"
    },
    {
        "link": "https://community.dynamics.com/forums/thread/details?threadid=97a2f4aa-73f1-4d2f-bb5c-c618bf7cdd34",
        "document": "technically you can attach this database as its done in normal SSMS any DB attachment/de-attachment\n\nBut remember if you will think to proceed with this restored DB to Working AX, it can give you little hard time,\n\nI am not sure why you want to query AXDB directly on SSMS.\n\nYou can download this DB from Partner Source. For old versions till AX2012R2-CU7 it was available in .bak file. For R3 and next versions it is available in file format which is not bak"
    },
    {
        "link": "https://community.dynamics.com/forums/thread/details?threadid=b8819cc0-392b-43aa-a77a-7ce07001bb5c",
        "document": "\"Exception has been thrown by the target of an invocation.Login timeout expired \n\nA network-related or instance-specific error has occurred while establishing a connection to SQL Server. Server is not found or not accessible. Check if instance name is correct and if SQL Server is configured to allow remote connections. For more information see SQL Server Books Online\".\n\nthen I was looking for know about the error.\n\n for the security firewall on the server 1 and server 2 is made ​​equal ( firewall off ).\n\n all steps following link already done , but still wrote error to the process on the serve to 2."
    },
    {
        "link": "https://dynamicsuser.net/t/installing-microsoft-dynamics-ax-2012/44543",
        "document": ""
    },
    {
        "link": "https://community.dynamics.com/forums/thread/details?threadid=cbf32d0e-5eab-413a-8491-005c680c38fc",
        "document": "I would like to use the advanced filtering function to find records that has no transactions in another table. Example; filter transactions in SalesAgreementHeader that is not yet confirmed. This means that there is no transaction in the SalesAgreementHeaderHistory. I found below sql example to find transactions in the CustTable even if there is no match in SalesTable.\n\nFirst i wonder what the syntax is to enter this in the advanced filter function; if it is possible at all. Secondly what must I add to ONLY find the transactions that have no match in the SalesAgreementHeaderHistory table (or SalesTable with the above example given)."
    },
    {
        "link": "https://learn.microsoft.com/en-us/dynamics365/fin-ops-core/fin-ops/get-started/advanced-filtering-query-options",
        "document": "Type a query as an SQL statement between parentheses using the finance and operations query language. \n\n\n\n as an example of syntax for a filter condition on a field from the root datasource as well as a field from a different datasource (for the All customers page)"
    },
    {
        "link": "https://stackoverflow.com/questions/19838582/dynamics-ax-2012-filtering-out-data-in-queries-by-using-business-logis",
        "document": "I am creating a query for a view where I have to filter out data based on predefined business logic.\n\nFor example, I have one table in my query (simplified) and I want to be able to filter out rows in the view where the sum of value1 and value2 and value3 are equal to zero.\n\nI cannot use the query range in the query since I have around 20 values (columns) that I need to check before I filter out the rows. It doesn´t allow it, it only handles around 10 values or so\n\nI dont like creating a \"full\" view, e.g. view with all rows then a view method with the business logic that has to be applied to filter out the rows and then a query based on that view where the rows are filter out.\n\nDo you have any ideas?"
    },
    {
        "link": "https://timsaxblog.wordpress.com/2015/07/23/how-to-use-advanced-filter-queries-in-ax-2012/comment-page-1",
        "document": "In AX, almost all list gird forms can be filtered by the Advanced filter form.\n\nOn any form, go to File > Edit > Filter > Advanced Filter/Sort (Ctrl-F3):\n\nYou’ll know that you can select pretty much any Field to filter by, and in the ‘Criteria’ field you can use various simple wildcards like *, for instance:\n\nFor example, if used to filter the Vendor account field as above Returns just the one record where that field matches the entered value Any character or any number of characters A* = all accounts starting with A\n\n *C* = all accounts with a C anywhere in the account\n\n D*E = all accounts starting with D and ending in E ?????? = all six digit or six character account codes\n\n ??DE?? = all 6 digit accounts codes where DE and are the 3rd and 4th characters\n\n ??FG* = all account codes where F and G are the 3rd and 4th characters Happy .. Sad = All account codes greater than ‘Happy’ and less than ‘Sad’\n\n .. Happy = All accounts less than or equal to ‘Happy’\n\n Sad .. = All accounts greater than or equal to ‘Sad’\n\nYou’ll also know that you can combine and reverse all of these filters:\n\nThere is also one commonly used special filter:\n\nHowever, many people don’t know that you can also define simple field comparisons. You can enter this in as the criteria on any field (not just the fields being compared):\n\nThere are also advanced filter queries based on the fact that there is a generic filtering class called SysQueryRangeUtil.\n\nHere are some examples:\n\nThe System query range utility is the foundation for a whole family of specific and useful filter queries, and it is possible to customise the method to include customised filters. The Cues found on the standard Dynamics AX role centres give a number of examples on how these filters can be used, for instance:\n\nFor more information check out the on-line help page at: https://technet.microsoft.com/en-us/library/aa569937.aspx"
    },
    {
        "link": "https://community.dynamics.com/forums/thread/details?threadid=9351c6f8-0127-ef11-840b-7c1e520be0ae",
        "document": "I did understand the difference between the table and the form, thank you !\n\nLet's keep the example of 'On-hand stock' form :\n\nOn the left, there is the query tab of the form. It gives the different tables involved in the form (the tales that the form get the data from). On the left, there is the query tab of the form. It gives the different tables involved in the form (the tales that the form get the data from).\n\nOn the right, I tried to translate this query in SQL.\n\nThe problem is that I don't get the same result between the form on Ax and the table i get from the SQL query in SQL Server.\n\nMoreover, the field 'Product Name' is not in any table presented in the Query Tab of Ax (neither InventSum nor Inventable). I had to find this field in EcoResProductTranslation, and then it works. But this table isn\"t mentionned in Ax at all.\n\nSo I I kept digging in that direction and I found out that I get very close to the result I want when I filter on the LanguageID field of EcoResProductTranslation.\n\nAgain, how am I supposed to know that some filters have to be applied to this table, when it's not indicated in the Query table of Ax ? Are there some 'hidden filters' ?"
    }
]