[
    {
        "link": "https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById",
        "document": "The method of the interface returns an object representing the element whose property matches the specified string. Since element IDs are required to be unique if specified, they're a useful way to get access to a specific element quickly. If you need to get access to an element which doesn't have an ID, you can use to find the element using any selector. Note: IDs should be unique inside a document. If two or more elements in a document have the same ID, this method returns the first element found.\n\nUnlike some other element-lookup methods such as and , is only available as a method of the global object, and not available as a method on all element objects in the DOM. Because ID values must be unique throughout the entire document, there is no need for \"local\" versions of the function.\n\nIf there is no element with the given , this function returns . Note that the parameter is case-sensitive, so will return instead of the element because \"M\" and \"m\" are different for the purposes of this method. Elements not in the document are not searched by . When creating an element and assigning it an ID, you have to insert the element into the document tree with or a similar method before you can access it with : In non-HTML documents, the DOM implementation must have information on which attributes are of type ID. Attributes with the name \"id\" are not of type ID unless so defined in the document's DTD. The attribute is defined to be of ID type in the common cases of XHTML, XUL, and others. Implementations that do not know whether attributes are of type ID or not are expected to return ."
    },
    {
        "link": "https://w3schools.com/jsref/met_document_getelementbyid.asp",
        "document": "W3Schools offers a wide range of services and products for beginners and professionals, helping millions of people everyday to learn and master new skills."
    },
    {
        "link": "https://geeksforgeeks.org/html-dom-getelementbyid-method",
        "document": "The getElementById() method returns the elements that have given an ID which is passed to the function. This function is a widely used HTML DOM method in web designing to change the value of any particular element or get a particular element. If the passed ID to the function does not exist then it returns null.\n\nNote: Each ID needs to be unique. If there are multiple elements with the same ID, only the first one will be returned.\n\nThis function accepts single parameter element_ID which is used to hold the ID of the element.\n\nIt returns the object of the given ID. If no element exists with the given ID then it returns null.\n\nExample 1: This example describes the getElementById() method where element_id is used to change the color of the text on clicking the button.\n\nExample 2: This example describes the getElementById() method where the element_id is used to change the content on clicking the button.\n\nSupported Browsers: The browser supported by DOM getElementById() method are listed below:\n\nCan getElementById() select multiple elements with the same ID?\n\nIs getElementById() faster than other DOM selection methods?\n\nCan getElementById() be used on elements outside the document scope?\n\nWhat are common use cases for getElementById()?"
    },
    {
        "link": "https://w3schools.com/js/js_htmldom_elements.asp",
        "document": "This page teaches you how to find and access HTML elements in an HTML page.\n\nOften, with JavaScript, you want to manipulate HTML elements.\n\nTo do so, you have to find the elements first. There are several ways to do this:\n\nThe easiest way to find an HTML element in the DOM, is by using the element id.\n\nThis example finds the element with :\n\nIf the element is found, the method will return the element as an object (in element).\n\nIf the element is not found, element will contain .\n\nThis example finds all elements:\n\nThis example finds the element with , and then finds all elements inside :\n\nIf you want to find all HTML elements with the same class name, use .\n\n\n\nThis example returns a list of all elements with .\n\nIf you want to find all HTML elements that match a specified CSS selector (id, class names, types, attributes, values of attributes, etc), use the method.\n\n\n\nThis example returns a list of all elements with .\n\nThis example finds the form element with , in the forms collection, and displays all element values:\n\nThe following HTML objects (and object collections) are also accessible:"
    },
    {
        "link": "https://stackoverflow.com/questions/7815374/get-element-inside-element-by-class-and-id-javascript",
        "document": "Alright, I've dabbled in JavaScript before, but the most useful thing I've written is a CSS style-switcher. So I'm somewhat new to this. Let's say I have HTML code like this:\n\nHow would I change to ?\n\nI know how and work, but I would like to get more specific. Sorry if this has been asked before."
    },
    {
        "link": "https://stackoverflow.com/questions/21166860/check-a-radio-button-with-javascript",
        "document": "For some reason, I can't seem to figure this out.\n\nI have some radio buttons in my html which toggles categories:\n\nThe user can select whichever he/she wants, but when an certain event triggers, I want to set to be set checked radio button, because this is the default checked radio button.\n\nI have tried versions of this (with and without jQuery):\n\nBut it doesn't seem to update. I need it to visibly update so the user can see it. Can anybody help?\n\nEDIT: I'm just tired and overlooked the , thanks for pointing it out, that and ."
    },
    {
        "link": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio",
        "document": "elements of type are generally used in radio groups—collections of radio buttons describing a set of related options. Only one radio button in a given group can be selected at the same time. Radio buttons are typically rendered as small circles, which are filled or highlighted when selected.\n\nA radio group is defined by giving each of radio buttons in the group the same . Once a radio group is established, selecting any radio button in that group automatically deselects any currently-selected radio button in the same group. You can have as many radio groups on a page as you like, as long as each has its own unique . For example, if your form needs to ask the user for their preferred contact method, you might create three radio buttons, each with the property set to but one with the value , one with the value , and one with the value . The user never sees the or the (unless you expressly add code to display it). The resulting HTML looks like this: Here you see the three radio buttons, each with the set to and each with a unique that uniquely identifies that individual radio button within the group. They each also have a unique , which is used by the element's attribute to associate the labels with the radio buttons. You can try out this example here:\n\nWhen the above form is submitted with a radio button selected, the form's data includes an entry in the form . For example, if the user clicks on the \"Phone\" radio button then submits the form, the form's data will include the line . If you omit the attribute in the HTML, the submitted form data assigns the value to the group. In this scenario, if the user clicked on the \"Phone\" option and submitted the form, the resulting form data would be , which isn't helpful. So don't forget to set your attributes! Note: If no radio button is selected when the form is submitted, the radio group is not included in the submitted form data at all, since there is no value to report. It's fairly uncommon to actually want to allow the form to be submitted without any of the radio buttons in a group selected, so it is usually wise to have one default to the state. See Selecting a radio button by default below. Let's add a bit of code to our example so we can examine the data generated by this form. The HTML is revised to add a block to output the form data into: Then we add some JavaScript to set up an event listener on the event, which is sent when the user clicks the \"Submit\" button: const form = document.querySelector(\"form\"); const log = document.querySelector(\"#log\"); form.addEventListener( \"submit\", (event) => { const data = new FormData(form); let output = \"\"; for (const entry of data) { output = `${output}${entry[0]}=${entry[1]}\\r`; } log.innerText = output; event.preventDefault(); }, false, ); Try this example out and see how there's never more than one result for the group.\n\nIn addition to the common attributes shared by all elements, inputs support the following attributes. A Boolean attribute which, if present, indicates that this radio button is the default selected one in the group. Unlike other browsers, Firefox by default persists the dynamic checked state of an across page loads. Use the attribute to control this feature. The attribute is one which all s share; however, it serves a special purpose for inputs of type : when a form is submitted, only radio buttons which are currently checked are submitted to the server, and the reported value is the value of the attribute. If the is not otherwise specified, it is the string by default. This is demonstrated in the section Value above. The attribute is one which most s share. If any radio button in a same-named group of radio buttons has the attribute, a radio button in that group must be checked, although it doesn't have to be the one with the attribute applied.\n\nTo make a radio button selected by default, you include attribute, as shown in this revised version of the previous example: In this case, the first radio button is now selected by default. Note: If you put the attribute on more than one radio button, later instances will override earlier ones; that is, the last radio button will be the one that is selected. This is because only one radio button in a group can ever be selected at once, and the user agent automatically deselects others each time a new one is marked as checked.\n\nThe following example shows a slightly more thorough version of the example we've seen throughout the article, with some additional styling, and with better semantics established through use of specialized elements. The HTML looks like this: The CSS involved in this example is a bit more significant: Most notable here is the use of the property (with prefixes needed to support some browsers). By default, radio buttons (and checkboxes) are styled with the operating system's native styles for those controls. By specifying , you can remove the native styling altogether, and create your own styles for them. Here we've used a along with and a to create a nice animating radio selection. Notice also how the pseudo-class is used to specify the styles for the radio button's appearance when selected. Note: If you wish to use the property, you should test it very carefully. Although it is supported in most modern browsers, its implementation varies widely. In older browsers, even the keyword does not have the same effect across different browsers, and some do not support it at all. The differences are smaller in the newest browsers. Notice that when clicking on a radio button, there's a nice, smooth fade out/in effect as the two buttons change state. In addition, the style and coloring of the legend and submit button are customized to have strong contrast. This might not be a look you'd want in a real web application, but it definitely shows off the possibilities."
    },
    {
        "link": "https://stackoverflow.com/questions/9476617/how-to-set-radio-button-status-with-javascript",
        "document": "value=\"cc\" will be checked by default, if you remove the \"checked\" non of the boxes will be checked when the form is first loaded.\n\nnow value=\"aa\" is checked. The other radio check boxes are unchecked.\n\nsee it in action: http://jsfiddle.net/yaArr/\n\nYou may do the same using the form id and the radio button id. Here is a form with id's.\n\nnow value=\"aa\" with id=\"dinosaurs\" is checked, just like before.\n\nSee it in action: http://jsfiddle.net/jPfXS/"
    },
    {
        "link": "https://w3schools.com/jsref/prop_radio_checked.asp",
        "document": "W3Schools offers a wide range of services and products for beginners and professionals, helping millions of people everyday to learn and master new skills."
    },
    {
        "link": "https://geeksforgeeks.org/how-to-check-whether-a-radio-button-is-selected-with-javascript",
        "document": "How to check whether a radio button is selected with JavaScript ?\n\nTo check whether a radio button is selected with JavaScript, you can use the checked property to determine if a radio button within a group is selected. This is commonly used in forms to validate user choices, ensuring the correct options are chosen before submission.\n\nThere are two methods to solve this problem which are discussed below:\n\nThe checked property approach uses JavaScript to check if a radio button is selected. By accessing a radio button element with document.getElementById or querySelector, you can evaluate its checked property, which returns true if the button is selected, otherwise false.\n\nExample: In this example, we check if a radio button is selected. When the “Submit” button is clicked, it displays the selected radio button’s value or a message if none are selected.\n\nThe querySelector() method in JavaScript selects the first radio button that matches a specified selector. By checking the checked property of the selected element, you can determine if it’s selected. This approach simplifies accessing elements without directly using IDs or classes.\n\nExample: In this example we use the querySelector() method to check if a radio button is selected. When the “Submit” button is clicked, it displays the selected radio button’s value or a message if none are selected.\n\nJavaScript is best known for web page development but it is also used in a variety of non-browser environments. You can learn JavaScript from the ground up by following this JavaScript Tutorial and JavaScript Examples."
    }
]