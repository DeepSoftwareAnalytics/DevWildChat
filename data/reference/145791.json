[
    {
        "link": "https://mathworks.com/solutions/wireless-communications.html",
        "document": ""
    },
    {
        "link": "https://mathworks.com/matlabcentral/answers/2169563-matlab-ga-parallel-computing",
        "document": ""
    },
    {
        "link": "https://mathworks.com/content/dam/mathworks/tag-team/Objects/t/90543_80839v00_Transforming_Wireless_Design_ebook_v01.pdf",
        "document": ""
    },
    {
        "link": "https://bodono.github.io/publications/wireless.pdf",
        "document": ""
    },
    {
        "link": "https://ssabach.net.technion.ac.il/files/2020/11/GSS2020.pdf",
        "document": ""
    },
    {
        "link": "https://mathworks.com/help/antenna/ug/electromagnetic-analysis-of-intelligent-reflecting-surface.html",
        "document": ""
    },
    {
        "link": "https://github.com/ken0225/RIS-Codes-Collection",
        "document": "\n• If you find new code for RIS(IRS) paper, please remind me here.\n• Some authorizations by authors can be found here and here.\n• Please STAR this collection if it is helpful to you.\n• I'm in charge of this project, but if the code you're looking for isn't in the repertory, I CANNOT help you find it elsewhere.\n• If you are interested in hardware impairments in the RIS-aided system, I recommend the work that has been published in IEEE VTC2023-Fall: How Long Can RIS Work Effectively: An Electronic Reliability Perspective. To the best knowledge of the authors, this is the first work on operation (running) times of the RIS, which reveals a new dimension (and metric) for analyzing and evaluating the RIS-aided system performance. You can also find this work in IEEE Xplore here. Besides, for practical RIS pixels, we find that phase errors not only exist in phase shifts but also in phase-dependent amplitudes. This work has been accepted in IEEE VTC2024-Fall: How Phase Errors Influence Phase-Dependent Amplitudes in Near-Field RISs? You can also find this work in IEEE Xplore here."
    },
    {
        "link": "https://mathworks.com/company/events/webinars/upcoming/modeling-reflective-intelligent-surfaces-ris-systems-with-matlab-4487950.html",
        "document": ""
    },
    {
        "link": "https://surface.syr.edu/cgi/viewcontent.cgi?article=1804&context=thesis",
        "document": ""
    },
    {
        "link": "https://nature.com/articles/s41598-023-31596-7",
        "document": "The wideband case with K orthogonal subcarriers presents a more difficult RIS optimization problem than narrowband (containing a single subcarrier). The maximization of (6) requires estimating the optimal vector \\(w_{\\theta }\\) and fairly allocating power for each subcarrier.\n\nFor large value of N, there are \\(2^{N}\\) possible RIS configurations and requires extensive analysis to find the optimal configuration, which is practically unattainable. Existing research relies on accurate configurations, in which a RIS with N reflecting elements may swap between N orthogonal configurations. For a particular incident and desirable reflected angles, the structure of the optimal RIS phase shifts remains consistent with the 2D-DFT codebook9. Consequently, each column of the codebook beamformer \\(W_{\\theta }=F\\left( N_{v}\\right) \\otimes F\\left( N_{h}\\right) \\in \\mathbb {C}^{N \\times N}\\), \\(\\otimes\\) refer to the kronecker product, can be a possible reflection configuration for an incident signal in a certain beam direction. We have extended \\(W_{\\theta }\\) to \\(W_{\\theta _{4 N}}\\) where \\(W_{\\theta _{4 N}}=\\left[ W_{\\theta },-W_{\\theta }, W_{(\\theta , \\mathrm {flip})},-W_{(\\theta , \\mathrm {flip})}\\right] \\in \\mathbb {C}^{N \\times 4 N}\\), to invert the phases of columns and rows in a way to increase the varieties of the codebook phase configurations. \\(W_{(\\theta , f l i p)}\\) denotes the output matrix when every column is flipped upside-down. For such a codebook setting, the probability of getting a strong SNR configuration is very high. The DFT matrices for the columns \\(F\\left( N_{v}\\right)\\) and \\(F\\left( N_{h}\\right)\\) can be denoted as:\n\nwhere \\(f_{N_{v}}=e^{-j 2 \\pi / N_{v}}=\\cos \\left( 2 \\pi / N_{v}\\right) -\\sin \\left( 2 \\pi / N_{v}\\right)\\)). \\(N_{v}\\) and \\(N_{h}\\) are the vertical and horizontal elements of RIS, as illustrated in Fig. 1. The phase shifts generated by the codebook must be quantized to meet the design requirements of the RIS. As a result, the reflection coefficient \\(w_{\\theta }\\) for element i can be either \\(e^{j \\pi / 2}\\) if \\(\\arg \\left( \\left[ w_{\\theta }\\right] _{i}\\right) \\in [-\\pi , 0)\\) or \\(e^{-j \\pi / 2}\\) if \\(\\arg \\left( \\left[ w_{\\theta }\\right] _{i}\\right) \\in [0, \\pi )\\)9. Let us denote the best phase configuration \\(w_{\\theta _{\\mathrm{ CodeBook } }} \\in W_{\\theta _{4 N}}\\) that can be generated from the codebook. It is considered as the benchmark for obtaining the maximum SNR.\n\nwhere, P is the power for all subcarriers. We search in the codebook \\(W_{\\theta _{4 N}}\\) for the best configuration that maximize the SNR in (11). Figure 2 depicts the related strongest and weakest SNR with a difference of around 20 dB. The strongest SNR configuration is further utilized in Algorithm 1.\n\nIn this paper, we optimize the transmit power P and the reflection coefficients vector \\(w_{\\theta }\\) for all RIS elements to maximize the sum rate at the receiver. The sum rate maximization problem can be mathematically represented in terms of optimization problem (OP) as follows:\n\nConstraint (C1) ensures that each RIS element’s reflection has no pathloss. Unlike relays, RIS elements do not amplify or decode, necessitating the use of unit magnitude elements. Constraint (C2) confirms that the power allocated for all subcarriers should not exceed the base station power budget and must be \\(\\ge\\) 0, as per Constraint (C3). It is noted that the (OP1) is non-convex over the unit modular (C1) on all RIS elements8. We overcome the non-convexity by iteratively applying the power method until it converges to the most preferred \\(w_{\\theta }\\) that will affect all number of subcarriers. Moreover, the power is allocated to each subcarrier in (C2) by using the well-known water-filling algorithm.\n\nWe use the power method to find a low-complex solution to optimize the RIS phase shifts. It calculates the dominant eigen vector of the channel power. The (OP1) problem in (12) can be simplified to be equivalent to the following channel gain:\n\nThus the summation of the objective function of (13) for the entire number of subcarriers \\((v=0,1, \\ldots , K-1)\\) is denoted by the channel gain \\(\\left| \\bar{h}_\\theta \\right| ^2\\):\n\nWe select the \\(w_{\\theta _{\\mathrm {CodeBook}}}\\) from the codebook \\(W_{\\theta _{4 N}} \\in \\mathbb {C}^{N \\times 4 N}\\) to initialize the power method to maximize the quadratic form of the channel \\(\\left\\| \\bar{h}_{\\theta }\\right\\| ^{2}\\) as shown in Algorithm 1. The power method finds the dominant eigenvalue by iterating the computation of \\(\\Omega _{i+1}=\\frac{h_{\\mathrm {equivalent}} \\Omega _{i}}{\\left\\| h_{\\mathrm {equivalent}} \\Omega _{i}\\right\\| }\\) from the initial solution \\(\\Omega _0=\\left[ \\begin{array}{c}1 \\\\ w_\\theta \\end{array}\\right]\\) where we set \\(w_\\theta =w_{\\theta _{\\mathrm {CodeBook}}}\\) until convergence. In each step we find a vector of \\(w_\\theta\\) solution and then, we project it to the closest one-bit RIS phases by quantizing the vector entries of phases to be either \\(\\pi / 2\\) or \\(-\\pi / 2\\).\n\nThe SDR is a widely used technique for dealing with the non-convex unit-modulus constraint by converting the passive beamforming vector \\(w_\\theta\\) into a rank-one and positive semi-definite matrix. The initial non-convex problem is converted into a convex Semidefinite Program (SDP) problem using the SDR method, which may then be addressed by a variety of effective convex optimization tools. The (OP2) objective function of (13) is described as:\n\nso, (OP2) is equivalent to:\n\nIt is simple to identify problem (OP3) as a quadratically constrained quadratic program (QCQP) problem that can be expressed as a homogeneous QCQP problem, particularly, by denoting:\n\nwhere, t is an auxiliary variable and \\(\\phi =\\widetilde{w}_\\theta \\widetilde{w}_\\theta ^T\\). Optimization Problem (OP3) is transformed into the following problem:\n\nIt should be noticed that (OP4) is still non-convex because of the rank-one constraint. The rank-one constraint is thus bypassed by using the SDR approach, which converts (OP4) into a convex SDP that can be successfully solved using modern convex optimization solvers like CVX11. It is essential to keep in mind that the optimum objective value of (OP4) serves as an upper bound on that of (OP2). However, the best solution \\(\\phi ^*\\) to (OP4) might not be a rank-one answer. As a result, we arrive at the following rank-one solution using the Gaussian randomization method \\(\\phi ^*=\\Lambda \\Sigma \\Lambda ^H\\). Where, \\(\\Lambda =\\left[ \\rho _1, \\cdots , \\rho _{N+1}\\right]\\) and \\(\\Sigma ={\\mathrm {diag}}\\left( \\sigma _1, \\cdots , \\sigma _{N+1}\\right)\\) are unitary and diagonal matrices, respectively, both with the size of \\((N+1) \\times (N+1)\\). We get sub-optimal solution to (OP4) , \\(\\widetilde{w}_\\theta ^*=\\Lambda \\Sigma r\\), where \\(r \\in \\mathbb {C}^{(N+1) \\times 1}\\) is a random vector which is generated based on \\(r \\in \\mathcal {N}_{\\mathbb {C}}\\left( 0, I_{N+1}\\right)\\) with zero mean circularly symmetric complex Gaussian (CSCG) distribution and covariance matrix \\(I_{N+1}\\). We eventually arrive at suboptimal solution to (OP2) as \\(w_\\theta ^*=e^{j \\angle \\left( \\left[ \\tilde{w}_\\theta ^*\\right] _{1: N} /\\left[ \\tilde{w}_\\theta \\right] _{N+1}\\right) }\\).\n\nThe power distribution for all subcarriers \\(P_{0}, \\ldots , P_{K-1}\\) are satisfying \\(P=\\frac{1}{K} \\sum _{v=0}^{K-1} P_{v}\\) where, \\(P_{v}=E\\left\\{ |\\bar{s}[v]|^{2}\\right\\}\\) is the power provided to subcarrier v. The notation \\(E\\{.\\}\\) is the expectation operator. The power allocation for the subcarriers can be optimized by the water-filling algorithm8.\n\nwhere, the parameter \\(\\eta \\ge 0\\) is chosen to satisfy \\(\\frac{1}{K} \\sum _{v=0}^{K-1} P_{v}=P\\). The water-filling algorithm is used to allocate the transmitted power fairly to all subcarriers. In Fig. 3, we show the comparison of the power allocation between the power method and the RIS surface when it is un-configured (replaced by a metallic sheet) to demonstrate how the algorithm allocates the power to each subcarrier taking into consideration the channel status. The noise level is very low in case of the power method (in terms of \\(10^{-5}\\)) while it is high in the un-configured surface case, consequently, the water-filling algorithm will assign the power to each subcarrier taking into consideration the noise level e.g., refering to the arrows in Fig. 3, the water-filling algorithm assign less power to the subcarriers with bad channel status and vice versa.\n\nThis section addresses the level of computational complexity involved in the proposed optimization method of the RIS phases and subcarriers power allocation. We approximated the \\(\\mathcal {O}\\) complexity of the suggested algorithms by using the same method in12. In the power method, the term \\(h_{\\mathrm {equivalent}}\\) needs \\((N+1)^{2}\\) complex multiplications, whereas, the term \\(h_{\\mathrm{ equivalent }}\\Omega _{i}\\) needs \\((N+1)\\) complex multiplications and phases quantization need N complex computations. Moreover, assigning power to all subcarriers requires \\(2(K\\times M)\\) complex multiplications. Therefore, overall approximated complexity per iteration is given as \\(\\mathcal {O}_{\\mathrm {Power}}\\):\n\nwhere, \\(I_{R}\\) is denoted as the maximum number of iterations that are needed to achieve the optimal data rate. In the SDR method, the complexity can be determined by calculating the complex operations of the following terms. The terms \\(\\mathfrak {Q}\\) and \\(\\phi\\) in Eq. (19) need \\((N+1)^2\\) complex multiplications. \\((N+1)^{4.5}\\) complex multiplications are required by the Gaussian randomization method to compute the best solution \\(\\phi ^*\\). In addition, \\(2(K\\times M)\\) complex multiplications are required for subcarriers power allocation computation. As a result, the overall approximated complexity is given as \\(\\mathcal {O}_{S D R}\\):\n\nThe \\(\\mathcal {O}_{SDR}\\) in (23) is very similar to the results provided in8 and6 where the complexities are \\(\\mathcal {O}\\left( N K I_{S A}+N^{4.5} K^{3.5} I_{T}\\right)\\) and \\(\\mathcal {O}(N+1)^{4.5}\\), respectively. \\(I_{S A}\\) denotes the number of iterations that the successive approximation requires and \\(I_{T}\\) is the total time that is needed to solve the problem during the successive convex approximation algorithm. The run elapsed time in Table 1 is calculated using the tic toc function available in MATLAB. Complexity and run time are compared between the power method and the SDR for different number of elements N as presented in Table 1. For instance, if we consider the lowest number of elements (100) in Table 1 and compute the complexities taking into consideration the number of iterations, elements, subcarriers and channel taps. We notice that the complexity in the power method is in terms of thousands of operations while in the SDR is in terms of millions. Furthermore, the SDR method takes more run-time than the power method under different RIS sizes."
    }
]