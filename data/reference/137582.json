[
    {
        "link": "https://learn.microsoft.com/en-us/powershell/module/dism/add-windowscapability?view=windowsserver2025-ps",
        "document": "This command adds a Windows capability package to the running operating system. Because no source is specified, the Windows Update client will download the necessary package. It requires either an active Internet connection or an active network connection to the local Windows Server Update Services (WSUS) server.\n\nExample 2: Add a Windows capability package to the running OS using a locally stored package file\n\nThis command adds a Windows capability package specified by the Name parameter, to the running operating system. The Source parameter specifies the location of required files. For instance, if the running OS is a copy of Windows 10 version 1809, the file must be present at . If the package specified by the Name parameter is already installed, this command does not return an error message, regardless of whether the required files are present at .\n\nExample 3: Add a Windows capability package to an image\n\nThis command adds a Windows capability package specified by the Name parameter, to the operating system image at the path C:\\mount\\Windows. The Source parameter specifies the location of required files. For instance, if the mount point contains a copy of Windows 10 version 1809, the file must present at .\n\nSpecifies the full path and file name to log to. If not set, the default is . In Windows PE, the default directory is the RAMDISK scratch space which can be as low as 32 MB. The log file will automatically be archived. The archived log file will be saved with .bak appended to the file name and a new log file will be generated. Each time the log file is archived the .bak file will be overwritten. When using a network share that is not joined to a domain, use the net use command together with domain credentials to set access permissions before you set the log path for the DISM log.\n\nSpecifies a temporary directory that will be used when extracting files for use during servicing. The directory must exist locally. If not specified, the directory will be used, with a subdirectory name of a randomly generated hexadecimal value for each run of DISM. Items in the scratch directory are deleted after each operation. You should not use a network share location as a scratch directory to expand a package (.cab or .msu file) for installation. The directory used for extracting files for temporary usage during servicing should be a local directory.\n\nSpecifies the location of the files that are required to add a Windows capability package to an image. If you specify multiple Source arguments, the files are gathered from the first location where they are found and the rest of the locations are ignored. Separate source locations with a comma. If you do not specify a Source, the default location set by Group Policy is used. If that fails, Windows Update is also used for online images, unless LimitAccess is specified. When all fail, the cmdlet fails silently; no exceptions are thrown. Source can only be used when servicing images that are running at least Windows 8 or Windows Server 2012.\n\nSpecifies the path to the location of the BootMgr files. This is necessary only when the BootMgr files are located on a partition other than the one that you are running the command from. Use -SystemDrive to service an installed Windows image from a Windows PE environment.\n\nAs of Windows 10 version 1709, you cannot use Windows Server Update Services (WSUS) to host Features on Demand (FOD) and language packs for Windows 10 clients. Instead, you can enforce a Group Policy setting that tells the clients to download them directly from Windows Update. You can also host FOD and language packs on a network share, but starting with Windows 10 version 1809, FOD and language packs can only be installed from Windows Update. For more information, see How to make Features on Demand and language packs available when you're using WSUS/Configuration Manager."
    },
    {
        "link": "https://pdq.com/powershell/add-windowscapability",
        "document": "The Add-WindowsCapability cmdlet acquires a Windows capability package from a priority-ordered list of source locations, and then installs the package on the specified operating system image.\n\nSpecifies the full path and file name to log to. If not set, the default is %WINDIR%\\Logs\\Dism\\dism.log.In Windows PE, the default directory is the RAMDISK scratch space which can be as low as 32 MB. The log file will automatically be archived. The archived log file will be saved with .bak appended to the file name and a new log file will be generated. Each time the log file is archived the .bak file will be overwritten. When using a network share that is not joined to a domain, use the net use command together with domain credentials to set access permissions before you set the log path for the DISM log.\n• This value is\n• This value is\n• This value is\n\nSpecifies a temporary directory that will be used when extracting files for use during servicing. The directory must exist locally. If not specified, the \\Windows\\%Temp% directory will be used, with a subdirectory name of a randomly generated hexadecimal value for each run of DISM. Items in the scratch directory are deleted after each operation. You should not use a network share location as a scratch directory to expand a package (.cab or .msu file) for installation. The directory used for extracting files for temporary usage during servicing should be a local directory.\n\nSpecifies the location of the files that are required to add a Windows capability package to an image. You can specify the Windows directory of a mounted image or a running Windows installation that is shared on the network. If you specify multiple Source arguments, the files are gathered from the first location where they are found and the rest of the locations are ignored. Separate source locations with a comma. If you do not specify a Source, the default location set by Group Policy is used. WindowsUpdate is also used for online images. Source can only be used when servicing images that are running at least Windowsr 8 or Windows Serverr 2012.\n\nSpecifies the path to the location of the BootMgr files. This is necessary only when the BootMgr files are located on a partition other than the one that you are running the command from. Use -SystemDrive to service an installed Windows image from a Windows PE environment.\n\nSpecifies the path to the Windows directory relative to the image path. This cannot be the full path to the Windows directory; it should be a relative path. If not specified, the default is the Windows directory in the root of the offline image directory."
    },
    {
        "link": "https://github.com/MicrosoftDocs/windows-powershell-docs/blob/main/docset/winserver2025-ps/dism/Add-WindowsCapability.md",
        "document": "Installs a Windows capability package on the specified operating system image.\n\nThe Add-WindowsCapability cmdlet acquires a Windows capability package from a priority-ordered list of source locations, and then installs the package on the specified operating system image.\n\nExample 1: Add a Windows capability package to the running OS via the Windows Update client\n\nThis command adds a Windows capability package to the running operating system. Because no source is specified, the Windows Update client will download the necessary package. It requires either an active Internet connection or an active network connection to the local Windows Server Update Services (WSUS) server.\n\nThis command adds a Windows capability package specified by the Name parameter, to the running operating system. The Source parameter specifies the location of required files. For instance, if the running OS is a copy of Windows 10 version 1809, the file must be present at .\n\nIf the package specified by the Name parameter is already installed, this command does not return an error message, regardless of whether the required files are present at .\n\nThis command adds a Windows capability package specified by the Name parameter, to the operating system image at the path C:\\mount\\Windows. The Source parameter specifies the location of required files. For instance, if the mount point contains a copy of Windows 10 version 1809, the file must present at .\n\nIndicates that this cmdlet does not query Windows Update for source packages when servicing a live OS. Only applies when the switch is specified.\n\nSpecifies the maximum output level shown in the logs.\n\nSpecifies the full path and file name to log to. If not set, the default is . In Windows PE, the default directory is the RAMDISK scratch space which can be as low as 32 MB. The log file will automatically be archived. The archived log file will be saved with .bak appended to the file name and a new log file will be generated. Each time the log file is archived the .bak file will be overwritten. When using a network share that is not joined to a domain, use the net use command together with domain credentials to set access permissions before you set the log path for the DISM log.\n\nSpecifies the identity of the capability to add to an operating system image.\n\nIndicates that the cmdlet operates on a running operating system on the local host.\n\nSpecifies the full path to the root directory of the offline Windows image that you will service. If the directory named Windows is not a subdirectory of the root directory, WindowsDirectory must be specified.\n\nSpecifies a temporary directory that will be used when extracting files for use during servicing. The directory must exist locally. If not specified, the directory will be used, with a subdirectory name of a randomly generated hexadecimal value for each run of DISM. Items in the scratch directory are deleted after each operation. You should not use a network share location as a scratch directory to expand a package (.cab or .msu file) for installation. The directory used for extracting files for temporary usage during servicing should be a local directory.\n\nSpecifies the location of the files that are required to add a Windows capability package to an image. If you specify multiple Source arguments, the files are gathered from the first location where they are found and the rest of the locations are ignored. Separate source locations with a comma.\n\nIf you do not specify a Source, the default location set by Group Policy is used. If that fails, Windows Update is also used for online images, unless LimitAccess is specified. When all fail, the cmdlet fails silently; no exceptions are thrown.\n\nSource can only be used when servicing images that are running at least Windows 8 or Windows Server 2012.\n\nSpecifies the path to the location of the BootMgr files. This is necessary only when the BootMgr files are located on a partition other than the one that you are running the command from. Use -SystemDrive to service an installed Windows image from a Windows PE environment.\n\nSpecifies the path to the Windows directory relative to the image path. This cannot be the full path to the Windows directory; it should be a relative path. If not specified, the default is the Windows directory in the root of the offline image directory.\n\nThis cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.\n\nAs of Windows 10 version 1709, you cannot use Windows Server Update Services (WSUS) to host Features on Demand (FOD) and language packs for Windows 10 clients. Instead, you can enforce a Group Policy setting that tells the clients to download them directly from Windows Update. You can also host FOD and language packs on a network share, but starting with Windows 10 version 1809, FOD and language packs can only be installed from Windows Update. For more information, see How to make Features on Demand and language packs available when you're using WSUS/Configuration Manager."
    },
    {
        "link": "https://ss64.com/ps/add-windowscapability.html",
        "document": "Install a Windows capability package on the specified Operating System image.\n\nAdd a Windows capability package to an image, The -source parameter specifies the location of required files:\n\nInstall all the available tools:\n\nAdd all RSAT tools available but not already present from a local file share (bypassing Windows Update). This will take some time to install:\n\n“Quit hiding your magic. The world is ready for you” ~ Danielle Doby\n\nGet-WindowsCapability - Get capabilities for an image or a running OS.\n\n Remove-WindowsCapability - Uninstall a Windows capability package from an image.\n\n Enable-ADOptionalFeature - Enable an Active Directory optional feature.\n\n Install-WindowsFeature - Install roles, role services, or features (Server 2012 R2).\n\n Enable-WindowsOptionalFeature - Enable a feature in a Windows image.\n\n Add-WindowsPackage - Add a single .cab or .msu file to a Windows image.\n\n PowerShell DISM cmdlets\n\n DISM - Deployment Image Servicing and Management (utility)"
    },
    {
        "link": "https://tenforums.com/tutorials/7565-manage-optional-features-windows-10-a-2.html",
        "document": ""
    },
    {
        "link": "https://answers.microsoft.com/en-us/windows/forum/all/how-to-fix-windows-update-error-0x8024500c/58e44647-43e7-41ae-87ba-7fef5331604a",
        "document": ""
    },
    {
        "link": "https://answers.microsoft.com/en-us/windows/forum/all/error-code-0x8024500c-cant-install-or-update-apps/9d5d112d-fbce-4af0-ad3f-6a70e06aefbd",
        "document": ""
    },
    {
        "link": "https://medium.com/@martinmia075/solved-windows-update-error-0x8024500c-on-windows-10-a702b3724ee5",
        "document": "When users install the cumulative updates on Windows 10, they might get reported with the 0x8024500c error code. In general, the above error code shows that the Windows service related to the Windows Update is stopped or restricted due to some reasons. Sometimes poorly handled and outdated system files and programs could also be the primary cause for the 0x8024500c error. Moreover, when something is partially removed or uninstalled from the PC or user removes an essential system program, or corrupted registry files might also trigger Windows Update Error 0x8024500c. Once this error influences your device, you might try to download the Windows 10 Updates multiple times.\n\nThe error 0x8024500C generally shows up when the cumulative & security Windows updates fail or blocked. But you can still download the Windows Updates manually via the official site of Microsoft. All you need to do is follow the steps given down here–\n• Tap the Start key & then head to Settings.\n• Go to the right panel and press on View Update History.\n• Now you have to find the Quality Updates option and then locate the KB number, which appears to be failed during automated installation.\n• After that, head to Microsoft Download Center & then head to the search bar.\n• Once you find it, download and install the update.\n\nThe following details will help you to check the Windows 10 Update services as well as fix the one which is not running:\n• Go to the Start menu and search for Run.\n• Now select the same from results.\n• Enter services.msc into the dialogue box following by the Enter key on your keyboard.\n• In case if any of the above Windows services seem stopped or disabled, you will be required to enable or start it. To enable a service, make a right-click on the service name and then press on Start.\n\nThe error code 0x8024500c can be fixed via Windows troubleshooter. When you start the troubleshooter, it would automatically find the issue, and might it also fix the ongoing issues by itself. Here are the instructions to run the Windows Update Troubleshooter:\n• Press on notification icon located on the right-end on your PC’s Taskbar.\n• Now head to All settings.\n• Find the Windows Update link. Press on it and then tap on Run the troubleshooter.\n\nIn this method we are going to use the Windows Troubleshooter for the Microsoft Store because the Windows Store is responsible for downloading and installing system updates:\n• Access the Control Panel and go to Troubleshooting.\n• Press on the View all button situated in the left side panel.\n• Once all items appear, head to Windows Store Apps.\n• Press on Next to start the process of troubleshooting.\n• When the troubleshooter ends its process and finds the Windows update issue, do follow the instructions on your screen to solve the error code 0x8024500c.\n\nLet’s reset the Windows Store and see if that solves the Windows Update error on your computer:\n• Please press on the search bar situated under the system’s Taskbar and then enter cmd.exe into it.\n• Once the Command prompt window shows up, head to Run as administrator.\n• You may see a verification prompt, so press Yes.\n• Now enter WSReset.exe and then press the Enter key on your computer to validate the command. Wait until the system resets the Windows Store, which is responsible for Windows Update errors on most occasions.\n\nIf something got wrong with the system registry entries, then it can cause the 0x8024500c error Windows Update. Follow the below solution to fix your system’s damaged files:\n• Tap on Start + R keys on your keyboard to trigger the Run program.\n• Now enter regedit into the program’s dialogue box and then press the OK link.\n• When the computer asks for verification, press Yes.\n• Now the Windows Registry Editor will show up on the screen, and you will be needed to navigate to the below file directory using the left side navigation pane:\n• When you reach the above file directory address, make a double-click on DisableWindowsUpdateAccess.\n• On the Value data field, enter 0 and then press OK to make the changes.\n• At last, restart the PC.\n\nFix 7: Make Proxy Connection as Out Of Action\n\nWhen the computer’s proxy ‘s configuration gets misconfigured, you can deactivate it to solve the 0x8024500c error code. Here’s a guide to performing it–\n• Navigate to the Run program and write down inetcpl.cpl.\n• Press the Enter button on your computer keyboard.\n• Now you will be redirected to the Internet Properties window, head to the Connections window.\n• Unselect the option saying Use a proxy server for your LAN and ensure that another option named as Automatically detect settings is selected.\n• After that, press on OK.\n\nHarry Martin is a technology enthusiast who loves writing about new advancements and IT threats on a regular basis. Her work focuses on the latest advancements in the realm of technology, social media, and cyber security at norton.com/setup."
    },
    {
        "link": "https://community.spiceworks.com/t/windows-10-update-error-0x8024500c/643291",
        "document": "Describes how to create a Central Store on a domain controller to store and replicate registry-based policies for Windows."
    },
    {
        "link": "https://edugeek.net/forums/windows-10/181736-windows-10-update-error-0x8024500c.html",
        "document": "Seems like i got problems with my updates again.... I keep getting the error above when i'm \"seaching\" for updates. Googling it isnt really helping me with this...\n\nIs it a standalone machine or a machine which is on a network ? Do you go through a proxy ?\n\n\"bug\" reported on https://www.experts-exchange.com/questions/28987373/Windows-10-1607-do-not-download-updates-from-WSUS-error-0x8024500c.html last entry might be of interest? I have solved this problem. The error 0x8024500c occurs on Windows 10 1607 when some combination of GPO settings is enabled. When one of these settings is enabled, the \"Do not connect to any Windows Update Internet locations\" setting must not be enabled: - Do not include drivers with Windows Updates Maybe some others, but I have tested only this. All of those is \"not configured\"\n\nif you are just using WSUS im sure i have seen somewhere that after a certain build of 10 the client still needs to contact MS Windows update. id put in proxy information and proxy for winhttp and see if it continues to give you problems which will narrow down if it is a problem with the client dealing with the update directly or from your WSUS setup. when i was testing w10 1607 i did come across niggles with updates and 1607 via wsus which i didnt really get to the bottom of\n\nif you are just using WSUS im sure i have seen somewhere that after a certain build of 10 the client still needs to contact MS Windows update. id put in proxy information and proxy for winhttp and see if it continues to give you problems which will narrow down if it is a problem with the client dealing with the update directly or from your WSUS setup. when i was testing w10 1607 i did come across niggles with updates and 1607 via wsus which i didnt really get to the bottom of Problem is we dont use a proxy now. All done by our ISP (Exa) I will have a look at the link now and still what i'm missing.\n\nif you are just using WSUS im sure i have seen somewhere that after a certain build of 10 the client still needs to contact MS Windows update. id put in proxy information and proxy for winhttp and see if it continues to give you problems which will narrow down if it is a problem with the client dealing with the update directly or from your WSUS setup. when i was testing w10 1607 i did come across niggles with updates and 1607 via wsus which i didnt really get to the bottom of Problem is we dont use a proxy now. All done by our ISP (Exa) I will have a look at the link now and still what i'm missing. Nope. Any updates needed are installed or not for my machine.\n\nGot disk space on the server? Got proxy exceptions in place for the URL of the server? Got firewall exceptions in place between clients and server?"
    }
]