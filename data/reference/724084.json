[
    {
        "link": "https://stackoverflow.com/questions/57299839/in-php-is-there-a-better-way-to-do-dynamic-templating",
        "document": "I'm creating module for an application which will have simple custom templating with tags that will be replaced with data from a database. The field names will be different in each instance of this module. I want to know if there is a better way to do this.\n\nThe code below is what I've come up with, But I believe there must be a better way. I struggled with preg_split and preg_match_all and just hit my limit so I did it the dumb person way.\n\nIn the future I will connect $MyClass->get() to replace the tag with the proper data. And the custom template will be built by the user."
    },
    {
        "link": "https://stackoverflow.com/questions/48406324/best-practice-for-outputting-larger-amounts-of-dynamic-html-from-php",
        "document": "I'd probably be asking some hard questions around sanitization and html encoding, this could be opening yourself up to XSS\n\nAre you in full control of the HTML or can the user enter it?\n\nCan you use markdown or some other language to html to help prevent attackers running malicious css/js?\n\nIf not you may need something heavy handed like HTML Purifier which will likely suck up performance\n\nIn terms of output I'd recommend requiring a separate PHP file and using it as a \"template\" file since PHP is a templating language.\n\nOther developers will probably chime in and recommend a made up language (DSL) to render what will essentially become PHP at some stage, those languages should offer htmlspecialchars on variables by default and caching in exchange for their DSL\n\nThis could be preferable if you're not really sure what you're doing\n\nIf you are outputting predefined blocks of things what you could do is store those blocks in your database as function names, then on output call those functions dynamically via db to render the blocks"
    },
    {
        "link": "https://reddit.com/r/PHP/comments/qqr2t/best_method_of_templating_in_php",
        "document": "I'm learning php by rolling my own personal site. I want to know the best way to setup a site to keep my header/footer/menu separate from my content. I come from asp.net which uses master pages and that's what I'm after.\n\nI would prefer not to use 3rd party libraries. I know the easy way would be to have each content page include the header/footer php files, but I would rather figure out a way to make a main catch all page that loads in content pages based on the url."
    },
    {
        "link": "https://fabien.potencier.org/templating-engines-in-php.html",
        "document": "So, you think PHP is a templating engine? So did I… for a very long time. But recently, I changed my mind. Even if PHP can be used as a templating engine, the syntax is just plain ugly as a template language.\n\nFor several years now, I have been promoting web development best practices, and one of them is the separation of concerns. Of course, as the lead developer of symfony, all the projects we work on at Sensio are modeled after the MVC architecture. It certainly helps when we have big projects where many people need to work together. The developers work on the code (the Controllers and the Model) and the web designers work on the design. And templates are sometimes written by developers, but more often than not, they need to be written by web designers or by the webmasters themselves.\n\nAnd a template language is something that helps you to write templates that respects this separation of concerns. A template language should find a good balance between giving enough features to ease implementing the presentation logic, and restricting the advanced features to avoid the business logic to cripple your templates.\n\nSo, when I asked a few days ago about the best and popular templating engines in PHP on Twitter, some people naturally answered “PHP” itself. I was not even surprised as that would probably have been my answer some weeks ago too.\n\nWhy PHP is not (anymore) a good template language?\n\nWhy do people still think PHP is a templating engine? Sure enough, PHP started its life as a template language, but it did not evolve like one in the recent years. If you think PHP is still a template language, can you give me just one recent change in the PHP language which enhanced PHP as a template language? I cannot think of one.\n\nTemplate languages evolved a lot since 1995 and the initial release of PHP/FI:\n\nAnd as a matter of fact, PHP doesn’t support many features modern template languages should have nowadays.\n\nThe following sections describes the main features I want to find in a modern template language:\n\nThe PHP language is verbose. You need no less than 14 characters just to output a simple variable (and no, using the more compact shortcut is not an option):\n\nAnd PHP becomes ridiculously verbose when it comes to output escaping (and yes, escaping variables coming from an unsafe source is mandatory nowadays):\n\nCompare with the same examples written with the Django template language:\n\nThis one is mostly a matter of taste, but modern template language have nice idioms to express common needs. For instance, let’s say you want to iterate over an array and want to display a default text when the array is empty. That’s very common, but the PHP version is not very readable:\n\nThe Django version is much better thanks to the use of an clause for the tag:\n\nPHP has greatly evolved over the years as far as reusability is concerned. Since PHP5, the object implementation is much better, and when traits will be supported in the next version of the language, we will have a solid general purpose language at our disposal. I’m really happy with all these changes as it helps me write better programs, but these enhancements are irrelevant when what you want to do is to mainly write templates.\n\nDjango introduced template inheritance some years ago, as a way to mimic classes but for templates:\n\nIt’s elegant, easy to understand, and really powerful. It’s so powerful that many template engines now support this feature out of the box.\n\nI’m not saying PHP is not a secure language, far from it. But needless to say that escaping a variable in a template is just a nightmare as I have showed you previously:\n\nOf course, you can create your own function to make it shorter, but that’s not my point:\n\nFor me, security should be enabled by default, especially for templates written by non-developers who are not necessarily aware of the common web threats like XSS or CSRF.\n\nAs far as I know, symfony was one of the very first web frameworks to have automatic output escaping for variables used in templates (2006); and in the recent years, major frameworks followed the same path: Django has automatic output escaping enabled since 1.0, and Ruby on Rails will also have it in the upcoming version 3.\n\nHaving output escaping enabled by default also means that auditing an application is much easier. Just have a look at templates where escaping has been disabled:\n\nThis one is a must-have when you allow users to edit templates (when webmasters are allowed to edit some templates from a web backend for instance). That’s not a universal need, but one that needs to be addressed anyway. Evaluating a template in a sandbox means being able to restrict what can be done in it. For instance, you should be able to restrict the methods/functions that can be called, the tags that can be used, …\n\nNeither PHP nor Django have a sandbox mode, so keep reading this article to learn more about this topic.\n\nSo, I started looking for a template engine that has all the features I mentioned above. I found many different template engines but none satisfied all my needs. The next sections talk about some of them and some others people suggested in reply to my tweet.\n\nThat’s the first one that comes to mind. And Django template language itself was inspired by Smarty. Smarty is the de-facto PHP standard template engine.\n\nBut Smarty suffers from several problems:\n\nAs far I understand, Smarty 3 is just around the corner and will improve the library quite a lot:\n\nI tested the two versions, but the performance of both are quite bad (see at the end of this post for more information on the benchmark I did).\n\nPHPTAL is a very nice project that implements the Zope Page Templates syntax. It is very well designed, supports lots of features, but is unable to render templates besides HTML ones, which can be a problem if you want to use the same language for emails, RSS feeds, and so on.\n\nAlso, I think the syntax is not web designer friendly, especially when you use advanced features like template inheritance:\n\nOne of the biggest selling point of PHPTAL is the autocompletion you can have in IDEs, and a guarantee that your HTML is well-formed.\n\neZ Components Template Component is also a very nice implementation of a template language. It’s probably the one which have the most features… perhaps too many of them if you ask me:\n\nIt does not support template inheritance, and my main concern is the performance. This it is the slowest library I have tested, and by great margin.\n\nDwoo is an interesting project. It is positioned as an alternative to Smarty. And they did a great job:\n\nDwoo mimics Smarty but with some interesting new features like template inheritance, and with much better performance than Smarty.\n\nUnfortunately, Dwoo has no sandbox feature and its core is not flexible enough.\n\nCalypso is an implementation of the Django Template Language in PHP. I mention it because it’s a clone of Django and because some people mentioned it on Twitter. But, the author himself acknowledge that the implementation is flawed.\n\nWhen I started looking for a PHP template language, I focused on libraries trying to mimic the Django template language features. After many hours of Googling, I found Twig. Twig was written by Armin Ronacher of Jinja fame. Needless to say I have the uttermost respect for Armin as he does a wonderful job with Jinja. As a matter of fact, Twig is more similar to Jinja than Django as far as the implementation is concerned.\n\nHe wrote Twig back in 2008 for Chypr, a blogging platform. But he never really developed it further as he mostly work with Python.\n\nWhen I had a look at the code, I was immediately sure it was what I was looking for. The main difference with Calypso being the fact that Twig compiles the templates down to plain PHP code. I started to use it a bit and at the end of last week, I asked Armin if he wouldn’t mind letting the project starts a new life. His answer was enthusiastic, and so I began hacking the code. My version is much different from that of Armin, but the lexer and parser are mostly the original ones.\n\nI have just hacked the code for a few days, but I’m already quite proud of it, and I think it’s time to open it to the public. So, yesterday I wrote some documentation for it and put up a simple website. There is still a lot of work to do like finishing the documentation, adding more unit tests, and PHPdoc, but the code is already quite solid and feature-full with:\n• None Solid automatic auto-escaping (with no associated runtime overhead as everything is done during compilation);\n• None Very secure sandbox mode (white-list the tags, filters, and methods that can be used in templates);\n• None Great extensibility: you override everything, even the core features, by bundling your own tags and filters as an extension; but you can also manipulate the AST (Abstract Syntax Tree) before compilation. By leveraging this possibilities, you can even create your own DSL (Domain Specific Language), targeted at your application.\n\nDespite being one the most full-featured PHP templating engines, Twig is also the fastest one:\n\nWhen the templates are already compiled, the memory consumption is of course much better for all template engines, and Twig is the one which uses the less memory:\n\nIf you want to learn more, please visit the Twig website, and start discussing Twig on its dedicated mailing-list. If you want to join the team, subscribe to the developer mailing-list\n\nI have also planned to talk about Twig at the Zend UnConference. Vote for this talk and see you there for an interesting discussion about templating engines."
    },
    {
        "link": "https://reddit.com/r/webdev/comments/1cp0hm3/why_do_we_need_template_engine_exactly",
        "document": "Recently i came to know about Thymeleaf, Templ, Pug, JTE, Mustache, Pebble etc template engines, that they could be used in both front and backend.\n\nIf websites could be coded in an editor writing html elements and css, why do we need something called template engine?\n\nWhat does it do exactly ? and why do we need it front and back on both side? I just saw a tutorial where codes are inserted into a template engine for example templatehello.pug and because of that html and css codes are updating in their respective file. Why do we need to do that ? Why not just write code directly in the html and css file?"
    },
    {
        "link": "https://redbeanphp.com/downloads/redbean_book.pdf",
        "document": ""
    },
    {
        "link": "https://redbeanphp.com/manual3_0",
        "document": ""
    },
    {
        "link": "https://jewelhuq.medium.com/redbeanphp-a-simple-and-powerful-orm-for-php-7c0a13be4679",
        "document": "RedBeanPHP is an Object-Relational Mapping (ORM) tool for PHP. It simplifies database interactions by allowing developers to work with database tables and records as if they were objects. This abstraction layer helps to reduce the complexity of writing raw SQL queries, making code more readable and maintainable.\n• Zero Configuration: RedBeanPHP requires no configuration or setup. It adapts to your database schema automatically, making it incredibly easy to get started.\n• Flexible: It automatically generates and modifies tables to fit your objects. This means you don’t need to worry about database schema changes; RedBeanPHP handles it for you.\n• Powerful: Despite its simplicity, RedBeanPHP is very powerful and includes features like transactions, relations, and object exporting.\n• Froze Mode: When your application goes to production, you can “freeze” the schema to prevent accidental modifications.\n\nYou can install RedBeanPHP via Composer:\n\nOr, you can download the file directly from the GitHub repository.\n\nTo start using RedBeanPHP, include the autoload file from Composer:\n\nCreating a new record in RedBeanPHP is straightforward. You create a new bean, set its properties, and store it in the database.\n\nReading records is equally simple. You can load a bean by its ID or find beans by certain criteria.\n\nUpdating a record involves loading it, modifying its properties, and storing it again.\n\nDeleting a record is just as simple as other operations.\n\nIn a development environment, RedBeanPHP will automatically adjust the database schema to fit your objects. However, in a production environment, you want to prevent schema changes. This is where “freezing” comes in handy.\n\nWhen the schema is frozen, RedBeanPHP will throw an error if you try to make any modifications that require schema changes. This ensures the integrity and stability of your production database.\n\nRedBeanPHP is a powerful yet simple ORM that can significantly simplify your database interactions. With its zero-configuration setup, automatic schema adjustments, and easy CRUD operations, it’s a great choice for developers looking to streamline their PHP applications. By using RedBeanPHP, you can focus more on writing your application logic and less on managing database queries and schema changes.\n\nFor more detailed documentation and advanced features, visit the official RedBeanPHP GitHub repository."
    },
    {
        "link": "https://sitepoint.com/introduction-redbean",
        "document": "\n• Redbean is an ORM (Object Relational Mapper) that creates and modifies the underlying schema on-the-fly, making it ideal for prototyping and speeding up development time.\n• Redbean allows you to create an object or “bean” and save it to the database, adapting the schema to fit even if there isn’t a corresponding table.\n• Redbean supports relationships between objects, including one-to-one, one-to-many, and many-to-many, through the concept of “owning” related objects.\n• Redbean’s “fluid mode” allows for automatic adjustment of the database schema as objects change, but it is recommended to switch to “frozen mode” in production for performance and security reasons.\n• While Redbean is a great tool for prototyping and rapid iterations, it can also be used in production with careful steps such as reviewing column data types, foreign keys, relations, and indexes.\n\nWhen it comes to RAD and prototyping, there are lots of tools available to help get projects up-and-running quickly. From quick-starts to micro-frameworks, from build tools such as Composer to one-click installers, and of course ORMs – there are all sorts of ways to speed up development time. I’m going to look at Redbean, an ORM with a difference, which is ideal for prototyping.\n\nRedbean is an ORM (Object Relational Mapper), but it does more than that – it creates and modifies the underlying schema on-the-fly. Traditionally, you would use an ORM as a wrapper to a pre-planned, pre-existing database schema. That’s fine for most projects, but when you’re prototyping – or making it up as you go along! – having it done for you behind the scenes can speed things up even more.\n\nWhen you create an object with Redbean – or bean, to use the specific terminology – as soon as you save it to the database, the schema adapts itself to fit. This applies even if you’re trying to save an object without a corresponding table!\n\nThe easiest way to install Redbean is to download the all-in-one package. Then, you simply need to require the single file, .\n\nYou can also install it via Composer; however, the author of the library does not recommend this approach – see the installation page for details .\n\nThe first step when using Redbean is to “dispense” a bean – which is basically an object. Note that I’ll be using the term “bean” and object interchangeably throughout the rest of the post.\n\nDispensing is done via a static method of the overarching Redbean class, “ ”, which takes the type as an argument.\n\nThis will create an empty object for a user, to which you can then assign properties. You can also dispense several at the same time by adding the number you want as a second parameter:\n\nIt doesn’t matter at this stage whether there’s a table in the database to hold it; as soon as we try and store it, Redbean will take care of that.\n\nLet’s try this – note the use of the static method , which is used to write to the database:\n\nIn most ORM’s, you’d expect this to fail if you haven’t yet created a table to hold users. However, using Redbean this succeeds because it creates the table for you. If you take a look in your database at this stage, you should see a table like this:\n\nBy necessity, the naming convention is pretty strict; it’s a singular, lower-case representation of the type you specified.\n\nNow let’s look at how the schema changes as we iterate. A user record will likely need a password field – but we forgot to create one.\n\nIf you do this:\n\nThis time, Redbean knows how to store a user but there’s a new field that the database table can’t accommodate. No matter – it simply adds one, and your table will now look like this:\n\nRedbean tries to guess the data type of a field based on the information you provide. So if you did this:\n\nYou’ll find that the age field has been created as a tiny integer.\n\nIf a field type doesn’t prove sufficient later, Redbean simply alters it on-the-fly. If you tried to assign 3000 to the age now, the column would be changed to a normal integer. If you spelt out the name as “thirty”, it would be changed to a varchar. Set a varchar field to something greater than 255 characters and it becomes a TEXT field, and so on.\n\nYou can load a specific object by primary key using :\n\nYou can load several objects at a time (by primary key) by using the method:\n\nThis returns an array of beans.\n\nYou can also find beans using SQL. The second argument to the method is essentially SQL from the clause onwards, excluding the keyword itself. For example, to find users who aren’t yet twenty:\n\nNote that we’re binding the parameters, hence the array as the third argument. This returns an array of beans using their ID’s as keys.\n\nYou can add more clauses to your SQL, for example:\n\nYou can find out the number of records using the count method:\n\nTo remove more of a particular type, use :\n\nTo delete all beans of a particular type, use :\n\nOr, to wipe out everything – which can be useful while prototyping – you it:\n\nAs with any ORM, relationships between objects are supported.\n\nOne-to-many relations are referred to using the concept of “owning” related objects. For example if orders have a single user, that user is said to “own” those orders. By using a specific variable name, we can build that relationship like this:\n\nThe key element here is the property . If you now inspect your database, you should find that Redbean has added the field to the order table, along with a corresponding foreign key.\n\nThe user that “owns” the order can simply be accessed as a property, e.g.:\n\nIn order to demonstrate many-to-many relationships, let’s create some roles:\n\nRoles don’t just belong to individual users; they are shared. So to assign the first two roles to a user, and in doing so build the relationship in the database, we can do this:\n\nThis time, you should find a new table called , which defines this relationship as a many-to-many.\n\nYou can get the roles belonging to a user by reading the property:\n\nThis lazy-loads the roles the first time they’re accessed.\n\nThere’s a lot more to relationships, including the ability to add properties to the relation using link, filtering by link, eager loading, and so on – check out the documentation for details.\n\nYou can create models to correspond to bean types simply by following naming certain conventions. Models are then connected to beans using FUSE; as in, by following the relevant naming convention they are FUSEd together.\n\nThe convention is simple; separate “Model” and the type with an underscore, e.g. . So for example, to create a model for users, you simply do this:\n\nOnce you’ve defined a model, there are a number of methods you can implement which will get called at different points in the bean’s lifecycle. This is illustrated in the table below, which maps the CRUD operations to the “hooks” you can implement:\n\nSo, for example, you could add validation by implementing :\n\nYou can also create your own methods, of course, as well as custom GETters.\n\nYou can execute a raw SQL query like this:\n\nYou can return a multidimensional array of rows like this:\n\nAdditionally, you can use parameter binding:\n\nYou can fetch a single column like this:\n\nYou can also get an associative array using two columns of a table like so:\n\nAlthough it’s arguably best suited for prototyping – or at least development – there’s no reason you can’t continue your use of Redbean into production, provided you follow certain steps.\n\nRedbean’s mechanism for updating the schema on-the-fly is called “fluid mode”; however this isn’t appropriate for production, and has a pretty significant performance overhead. However, you can turn it off by “freezing” it:\n\nIn going into production, you’re going to want to follow a few more steps:\n• check the indexes – Redbean creates a few – and modify appropriately\n\nIn this article, I’ve introduced Redbean as a handy way to kick-start your development process, by allowing you to play around with your domain models without worrying about building the underlying schema first. Whether it’s viable for production remains to be seen – but for prototyping and rapid iterations, it’s a great little tool. There’s much I haven’t covered, so be sure to check out the documentation.\n\nWhat are the key features of RedBeanPHP? RedBeanPHP is a simple, lightweight Object Relational Mapping (ORM) tool that offers a range of features designed to simplify database interactions. It is known for its “zero-config” approach, meaning it requires minimal setup and configuration. It automatically builds your database schema based on the objects you create, and it can adjust the schema as needed when your objects change. RedBeanPHP also supports fluid and frozen modes, allowing you to switch between development and production environments easily. It includes built-in tree structures and supports bean canning and dispensing for easy storage and retrieval of objects. How does RedBeanPHP compare to other ORM tools? Compared to other ORM tools, RedBeanPHP stands out for its simplicity and ease of use. It requires no configuration files, no SQL, and no model classes. This makes it a great choice for beginners or for projects where a full-featured ORM would be overkill. However, it still offers powerful features like automatic schema modification and tree structures, making it versatile enough for more complex projects as well. How do I install and set up RedBeanPHP? RedBeanPHP can be installed via Composer, a popular dependency management tool for PHP. Once installed, you can set up RedBeanPHP by including the RedBeanPHP file in your script and setting up a database connection. RedBeanPHP will automatically create and modify tables as needed based on your objects. What is the “fluid mode” in RedBeanPHP? Fluid mode is a feature of RedBeanPHP that allows it to automatically adjust your database schema as your objects change. This can be a huge time-saver during development, as you don’t have to manually modify your database every time you make a change to your objects. However, it’s recommended to switch to “frozen mode” in production for performance and security reasons. How does RedBeanPHP handle relationships between objects? RedBeanPHP supports several types of relationships between objects, including one-to-one, one-to-many, and many-to-many. These relationships are handled through the use of “beans”, which are simple objects that represent rows in a database table. You can easily associate beans with each other to represent relationships between objects. Can I use RedBeanPHP with my existing database? Yes, RedBeanPHP can be used with an existing database. However, it’s important to note that RedBeanPHP’s automatic schema modification features may make changes to your database structure, so it’s recommended to back up your database before using RedBeanPHP. While RedBeanPHP is known for its simplicity and ease of use, it also offers powerful features that make it suitable for larger, more complex projects. Its automatic schema modification, support for various types of relationships, and built-in tree structures can all be valuable in a larger project. However, for very large or complex projects, a more full-featured ORM tool may be more appropriate. RedBeanPHP includes several features designed to enhance security. It uses prepared statements to help prevent SQL injection attacks, and it recommends using “frozen mode” in production to prevent unwanted schema changes. However, as with any tool, it’s important to follow best practices for security and to keep RedBeanPHP up to date. What is “bean canning” in RedBeanPHP? Bean canning is a feature of RedBeanPHP that allows you to store and retrieve entire sets of beans (objects) at once. This can be a convenient way to handle large amounts of data, and it can also help to improve performance by reducing the number of database queries. Can I use RedBeanPHP without Composer? While Composer is the recommended way to install RedBeanPHP, it’s also possible to download and include the RedBeanPHP file directly in your script. However, using Composer can make it easier to manage and update RedBeanPHP and any other dependencies your project may have."
    },
    {
        "link": "https://github.com/louislam/redbean-node",
        "document": "RedBeanNode is an easy to use ORM tool for Node.js, strongly inspired by RedBeanPHP.\n• Automatically creates tables and columns as you go\n• No configuration, just fire and forget\n\nThis is how you do CRUD in RedBeanNode:\n\nThis automatically generates the tables and columns... on-the-fly. It infers relations based on naming conventions.\n\nPlease build the project before run the test."
    },
    {
        "link": "https://stackoverflow.com/questions/35693170/telegram-bot-send-message-problems-after-some-days",
        "document": "I have some problem with my telegram message, it's overview of problem:\n\nYou will pass /start command my bot started sending messages, but after some days it will stop sending messages, if client pass some message client bot again starts sending messages, what can I do for define after how much days it will stop, does it documentation anywhere? maybe some configurations are wrong? who have such kind of situation pls, reply?\n\nalso I always this api call for sending messages:"
    },
    {
        "link": "https://stackoverflow.com/questions/33802754/telegram-bot-sendmessage-method-isnt-sending-some-strings",
        "document": "I'm having a problem that I don't actually know how to fix. I'm playing with telegram's bot API using webhooks with a PHP server I installed in my VPS. I have this code (so, when someone chats to the bot, it sends the string):\n\nBut, I don't know why, when I send that particular String, and I chat to the bot, it does not reply me back. (it shoulds reply me back with that string)\n\nBut, if I change the string to (all letters in lowercase), the bot replies back that string! It's like en enconding problem or something like that, but I cannot detect the exact problem."
    },
    {
        "link": "https://github.com/php-telegram-bot/core/issues/514",
        "document": "I have problem with send and received message in the bot.\n\nBut I don't know about of robot.\n\n For test I try my chat id and user id but not happen! and not store any messages in error log!\n\nAnd also I don't know how can I received user's messages.\n\nMy scenario is very simple, I just want to send in the robot, and then, my robot response . But I didn't found good sample code in this project!\n\n. ; // Add you bot's API key and name = ; = ; = [ => , => , => , => , ]; { = \\ \\ ( , ); // Error, Debug and Raw Update logging - Don't forget to define the $path = ; \\ \\TelegramLog:: ( . . . ); \\ \\TelegramLog:: ( . . . ); \\ \\TelegramLog:: ( . . . ); -> ( ); = \\ \\Request:: ([ => , => ]); -> (); } ( ) { ; \\ \\TelegramLog:: ( ); } ( ) { ; }"
    },
    {
        "link": "https://forum.mikrotik.com/viewtopic.php?t=215244&sid=2349b86f071eb1c587fbc4955d450a9d",
        "document": "Problem Sending Message to Telegram via API on MikroTik RouterOS \n\n \n\n I'm facing an issue when trying to send messages to Telegram using the bot API on MikroTik RouterOS. I have tried constructing the URL and sending the message, but I'm getting errors and cannot get the sending to work correctly.\n\n \n\n Here is the script I am using: # Define constants :local BotID [:tostr \"YOUR_BOT_ID\"]; :local CHID [:tostr \"YOUR_CHAT_ID\"]; :local DeviceName [/system identity get name]; :local Message (\"?[\" . $DeviceName . \"]: \"); # Check if the variables are set correctly :log info (\"BotID: \" . $BotID); :log info (\"CHID: \" . $CHID); # Build the URL manually to test :local TestURL (\"https://api.telegram.org/bot\" . $BotID . \"/sendMessage?chat_id=\" . $CHID . \"&text=Test\") :log info (\"Test URL: \" . $TestURL); # Check for updates :local InstVer [/system package update get installed-version]; :local LatVer [/system package update get latest-version]; :local Chan [/system package update get channel]; # Test values :log info (\"Installed version: \" . $InstVer); :log info (\"Latest version: \" . $LatVer); :log info (\"Channel: \" . $Chan); # Create update message :if ($InstVer = $LatVer) do={ :set Message ($Message . \"The system is already up to date. [Current version: \" . $InstVer . \", Channel: \" . $Chan . \"]\"); } else={ :set Message ($Message . \"New version \" . $LatVer . \" available! Changelogs: https%3A%2F%2Fmikrotik.com%2Fdownload%2Fchangelogs [Installed version: \" . $InstVer . \", Channel: \" . $Chan . \"]\"); } # Replace spaces with %20 to avoid error in Telegram :set Message [ $Message ]; # Send message :local FinalURL (\"https://api.telegram.org/bot\" . $BotID . \"/sendMessage?chat_id=\" . $CHID . \"&text=\" . $Message); :log info (\"Final URL for sending: \" . $FinalURL); # Execute send /tool fetch url=$FinalURL keep-result=no; # Send log :log info (\"Message sent to Telegram: \" . $Message); When I try to execute it, the message is not being sent to Telegram, and I don't see any clear errors in the log. Any suggestions on what might be wrong or any steps I might be missing?\n\n \n\n I'm using MikroTik RouterOS 7.x and have already verified that the bot and chat ID are set correctly.\n\n \n\n I appreciate any help! Hello, everyone!I'm facing an issue when trying to send messages to Telegram using the bot API on MikroTik RouterOS. I have tried constructing the URL and sending the message, but I'm getting errors and cannot get the sending to work correctly.Here is the script I am using:When I try to execute it, the message is not being sent to Telegram, and I don't see any clear errors in the log. Any suggestions on what might be wrong or any steps I might be missing?I'm using MikroTik RouterOS 7.x and have already verified that the bot and chat ID are set correctly.I appreciate any help!\n\nRe: Problem Sending Message to Telegram via API on MikroTik RouterOS \n\n \n\n I would still like to see if the $FinalURL works correctly with Curl. This would help us separate the problem into parts. I dont know anything about the Telegram API so I cant comment on the actual URL construction.\n\n \n\n As a mainly Python programmer all of the comments dont bother me; Im very used to them . Its a relief to not see a huge blob of undocumented spaghetti code. \n\n \n\n As a general rule I tend to document any intricate section where it wouldn’t be obvious what the code is doing. No need where the natural language of the code explains itself like “loop though all the results” or something. It does look like “mode” has been deprecated and is unnecessary. It does not affect the outcome though.I would still like to see if the $FinalURL works correctly with Curl. This would help us separate the problem into parts. I dont know anything about the Telegram API so I cant comment on the actual URL construction.As a mainly Python programmer all of the comments dont bother me; Im very used to them. Its a relief to not see a huge blob of undocumented spaghetti code.As a general rule I tend to document any intricate section where it wouldn’t be obvious what the code is doing. No need where the natural language of the code explains itself like “loop though all the results” or something.\n\nRe: Problem Sending Message to Telegram via API on MikroTik RouterOS Guys, thanks for your feedback and for trying to help me with this code.\n\n In fact, it was generated by an artificial intelligence, as I’m not familiar with MikroTik scripts.\n\n My intention was to ask the AI for a script that could send me information about updates for the two RBs I have, so I could perform the updates more efficiently.\n\n However, the AI ended up getting stuck at this point.\n\nRe: Problem Sending Message to Telegram via API on MikroTik RouterOS \n\n \n\n 400 errors are “bad request”, usually meaning the request URL is malformed.\n\n \n\n Do you have any documentation about the Telegram API and how the request is supposed to be created? If you do a little research we may be able to help, but just asking ChatCCP isn’t going to get you any closer to an answer.\n\n The strangest part is that when generating the log with :log info (\"Final URL for sending: \" . $FinalURL);, the Telegram API responds correctly. This statement is just printing $FinalURL into the Mikrotik log. The “Telegram API” is not contacted, and does not reply to anything. Telegram is only contacted in the “fetch” statement. If you copy $FinalURL and use curl to send it from a command line does it successfully send the message in Telegram?400 errors are “bad request”, usually meaning the request URL is malformed.Do you have any documentation about the Telegram API and how the request is supposed to be created? If you do a little research we may be able to help, but just asking ChatCCP isn’t going to get you any closer to an answer.This statement is just printing $FinalURL into the Mikrotik log. The “Telegram API” is not contacted, and does not reply to anything. Telegram is only contacted in the “fetch” statement.\n\nRe: Problem Sending Message to Telegram via API on MikroTik RouterOS If you copy $FinalURL and use curl to send it from a command line does it successfully send the message in Telegram?\n\n \n\n 400 errors are “bad request”, usually meaning the request URL is malformed. When I copy the URL generated in the log and use it both in the browser and with curl, the sending works normally.\n\n However, when passing the commands to the “fetch” instruction, the 400 error occurs.\n\n I have the impression that some characters are not accepted in the “fetch” instruction and, as a result, are not correctly sent to the Telegram API.\n\n Do you have any documentation about the Telegram API and how the request is supposed to be created? If you do a little research we may be able to help, but just asking ChatCCP isn’t going to get you any closer to an answer. This is the format accepted by the Telegram API. In the Mikrotik script, just for testing, I made this code and it worked:\n\n The strangest part is that when generating the log with :log info (\"Final URL for sending: \" . $FinalURL);, the Telegram API responds correctly. This statement is just printing $FinalURL into the Mikrotik log. The “Telegram API” is not contacted, and does not reply to anything. Telegram is only contacted in the “fetch” statement. This statement is just printing $FinalURL into the Mikrotik log. The “Telegram API” is not contacted, and does not reply to anything. Telegram is only contacted in the “fetch” statement. Correct, I had the $FinalURL printed in the log to identify the possible issue. When I copied and pasted the URL generated in $FinalURL into the browser, with the correctly formatted data, it worked perfectly.\n\n \n\n However, when the $FinalURL is passed to the “fetch” command, the 400 error occurs.\n\n \n\n So, I decided to try a different approach to see if it would work, and it did. I received the message from Telegram with the code below. However, this method is more complex than what could be done directly with the Mikrotik script:\n\n \n\n script Mikrotik # Definir constantes :local ServerURL \"https://mydomain.com/api/telegram.php\"; :local DeviceName [/system identity get name]; :local InstVer [/system package update get installed-version]; :local LatVer [/system package update get latest-version]; :local Chan [/system package update get channel]; :local postData \"{ \\\"instVer\\\": \\\"$InstVer\\\", \\\"latVer\\\": \\\"$LatVer\\\", \\\"chan\\\": \\\"$Chan\\\", \\\"deviceName\\\": \\\"$DeviceName\\\" }\"; /tool fetch url=$ServerURL http-method=post http-header-field=\"Content-Type: application/json\" http-data=$postData keep-result=no; :log info (\"Dados enviados para servidor PHP: Versão instalada: \" . $InstVer . \", Versão disponível: \" . $LatVer . \", Canal: \" . $Chan); PHP Code telegram.php\n\n <?php $data = json_decode(file_get_contents(\"php://input\"), true); if (!$data || !isset($data[\"instVer\"]) || !isset($data[\"latVer\"]) || !isset($data[\"chan\"]) || !isset($data[\"deviceName\"])) { http_response_code(400); echo json_encode([\"status\" => \"error\", \"message\" => \"Dados inválidos\"]); exit; } $instVer = $data[\"instVer\"]; $latVer = $data[\"latVer\"]; $chan = $data[\"chan\"]; $deviceName = $data[\"deviceName\"]; $jsonFile = $deviceName . '_data.json'; $botToken = \"BOTID AQUI\"; $chatID = \"CHATID AQUI\"; function updateOrCreateJsonFile($jsonFile, $data) { if (file_exists($jsonFile)) { $fileData = json_decode(file_get_contents($jsonFile), true); } else { $fileData = []; } if (isset($fileData['data'])) { $deviceData = $fileData['data']; if ($deviceData['instVer'] !== $data['instVer'] || $deviceData['latVer'] !== $data['latVer']) { $data['expiration'] = date('Y-m-d H:i:s', strtotime('+0 seconds')); } else { if (strtotime($deviceData['expiration']) > time()) { return false; } } } else { $data['expiration'] = date('Y-m-d H:i:s', strtotime('+24 hours')); } $fileData['data'] = [ 'instVer' => $data['instVer'], 'latVer' => $data['latVer'], 'chan' => $data['chan'], 'deviceName' => $data['deviceName'], 'expiration' => $data['expiration'] ]; file_put_contents($jsonFile, json_encode($fileData, JSON_PRETTY_PRINT)); return true; } if (updateOrCreateJsonFile($jsonFile, $data)) { $message = \"️[\" . $deviceName . \"]: \"; if ($instVer === $latVer) { $message .= \"O sistema já está atualizado. Changelogs: https://mikrotik.com/download/changelogs [Versão instalada: \" . $instVer . \", Canal: \" . $chan . \"]\"; } else { $message .= \"Nova versão \" . $latVer . \" disponível! Changelogs: https://mikrotik.com/download/changelogs [Versão instalada: \" . $instVer . \", Canal: \" . $chan . \"]\"; } $url = \"https://api.telegram.org/bot$botToken/sendMessage?chat_id=$chatID&text=\" . urlencode($message); $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($ch); $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE); curl_close($ch); if ($httpCode == 200) { echo json_encode([\"status\" => \"success\", \"message\" => \"Mensagem enviada com sucesso\"]); } else { echo json_encode([\"status\" => \"error\", \"message\" => \"Falha ao enviar mensagem\"]); } } else { echo json_encode([\"status\" => \"success\", \"message\" => \"Mensagem não enviada. O sistema já está atualizado e a expiração ainda não passou.\"]); } ?> When I copy the URL generated in the log and use it both in the browser and with curl, the sending works normally.However, when passing the commands to the “fetch” instruction, the 400 error occurs.I have the impression that some characters are not accepted in the “fetch” instruction and, as a result, are not correctly sent to the Telegram API.This is the format accepted by the Telegram API. In the Mikrotik script, just for testing, I made this code and it worked:Correct, I had the $FinalURL printed in the log to identify the possible issue. When I copied and pasted the URL generated in $FinalURL into the browser, with the correctly formatted data, it worked perfectly.However, when the $FinalURL is passed to the “fetch” command, the 400 error occurs.So, I decided to try a different approach to see if it would work, and it did. I received the message from Telegram with the code below. However, this method is more complex than what could be done directly with the Mikrotik script:script MikrotikPHP Code telegram.php\n\nRe: Problem Sending Message to Telegram via API on MikroTik RouterOS \n\n \n\n \n\n :local CHID \"1215501525\";\n\n :local BotID \"1450359051:AAFn4kwwwQ0LSl1xhqSFsxwPruiKWepexx0\";\n\n \n\n :local Message \"Boss, ok RB 1!\";\n\n \n\n /tool fetch url=\" This is the format accepted by the Telegram API. In the Mikrotik script, just for testing, I made this code and it worked::local CHID \"1215501525\";:local BotID \"1450359051:AAFn4kwwwQ0LSl1xhqSFsxwPruiKWepexx0\";:local Message \"Boss, ok RB 1!\";/tool fetch url=\" https://api.telegram.org/bot$BotID/send ... t=$Message \" keep-result=no; My advice is to do a test like this, but do not use the local variables, just expand it by hand, like (please check my expansion is correct):\n\n If this works, find exactly the difference between $TestURL and $FinalURL that was logged before.\n\n \n\n \n\n EDIT:\n\n I ran these script through my router and the only difference I saw was the message. It has a bunch of spaces and odd characters. I bet it needs something like double quotes around it to send correctly. Try sending a simple \"HeyImaTestMessage\" from the first script and see if it works. ok, it seems like you are very close to the answer.My advice is to do a test like this, but do not use the local variables, just expand it by hand, like (please check my expansion is correct):If this works, find exactly the difference between $TestURL and $FinalURL that was logged before.EDIT:I ran these script through my router and the only difference I saw was the message. It has a bunch of spaces and odd characters. I bet it needs something like double quotes around it to send correctly. Try sending a simple \"HeyImaTestMessage\" from the first script and see if it works."
    },
    {
        "link": "https://laracasts.com/index.php/discuss/channels/general-discussion/i-need-help-with-telegram-bot-sendingreceiving-messages",
        "document": ""
    }
]