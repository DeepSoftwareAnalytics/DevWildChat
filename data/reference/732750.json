[
    {
        "link": "https://helpch.at/docs/1.12.2",
        "document": ""
    },
    {
        "link": "https://helpch.at/docs/1.12.2/index.html?overview-summary.html",
        "document": ""
    },
    {
        "link": "https://spigotmc.org/wiki/spigot-plugin-development",
        "document": ""
    },
    {
        "link": "https://hub.spigotmc.org/javadocs/spigot",
        "document": "The documentation is for developing plugins and is split into the respective packages for each subject matter. This documentation does not cover running a server, contributing code back to the project, or setting up a workspace. Working knowledge of the Java language is a prerequisite for developing plugins.\n\nFor basic plugin development, see the . It covers the basic requirements of a plugin jar.\n\nFor handling events and triggered code, see the .\n\nNote: While the Bukkit API makes every effort to ensure stability, this is not guaranteed, especially across major versions. In particular the following is a (incomplete) list of things that are not API.\n• Implementing interfaces or extending classes. The Bukkit API is designed to only be implemented by server software. Unless a class/interface is obviously designed for extension (eg ), or explicitly marked as such, it should not be implemented or extended by plugins. Although this can sometimes work, it is not guaranteed to do so and resulting bugs will be disregarded.\n• Constructing inbuilt events. Although backwards compatibility is attempted where possible, it is sometimes not possible to add new fields to events without breaking existing constructors. To ensure that the API continues to evolve, event constructors are therefore not plugin API.\n• Implementation classes. Concrete implementation classes packaged with Bukkit (eg those beginning with Simple) are not API. You should access them via their interfaces instead.\n• The \"enumness\" of enums which implement . Such enums are liable to conversion to regular classes and therefore usages deriving from their status as an enum (including, but not limited to, use in switch statements and classes such as ) should be avoided."
    },
    {
        "link": "https://jd.redguy.ru/spigot/1.12",
        "document": ""
    },
    {
        "link": "https://spigotmc.org/threads/inventoryclickevent-place_all.619859",
        "document": ""
    },
    {
        "link": "https://spigotmc.org/threads/how-to-record-slots-of-items-in-inventoryclickevent.398461",
        "document": ""
    },
    {
        "link": "https://bukkit.org/threads/inventoryclickevent.91738",
        "document": "I've been working with the InventoryClickEvent for a while now and it seems I can't get over a few bugs. I'm trying to make it so that when a player drags an item ontop of a slot with the same item to stack the 2 together, it will clear the slot making sure the items wont get stacked.Before I can further explain let me first show you the event:Now ofcourse I know I don't need to check if itemstack in getCursor!= null and currentitem!=null but that's part of my debugging process. And what I found out is that the event doesn't even get past the 'event.isLeftClick' check.Am I using this event wrong?EDIT: I just found out I was getting errors too, here's the cache:Greets,Jeroen V."
    },
    {
        "link": "https://helpch.at/docs/1.12.2/index.html?org/bukkit/enchantments/Enchantment.html",
        "document": ""
    },
    {
        "link": "https://jd.andross.fr/1.12.2/index.html?org/bukkit/event/inventory/InventoryClickEvent.html",
        "document": ""
    },
    {
        "link": "https://spigotmc.org/threads/create-complex-inventory-system.516620",
        "document": ""
    },
    {
        "link": "https://spigotmc.org/threads/create-an-inventory-using-nms.417808",
        "document": ""
    },
    {
        "link": "https://bukkit.org/threads/tutorial-create-a-inventory-menu.173571",
        "document": "\n• None // The first parameter, is the inventory owner. I make it null to let everyone use it.\n• None //The second parameter, is the slots in a inventory. Must be a multiple of 9. Can be up to 54.\n• None //The third parameter, is the inventory name. This will accept chat colors.\n• None //The first parameter, is the slot that is assigned to. Starts counting at 0\n• None Player player Player event. // The player that clicked the item\n• None ItemStack clicked event. // The item that was clicked\n• None Inventory inventory event. // The inventory that was clicked in\n• None Player player Player event. // The player that clicked the item\n• None ItemStack clicked event. // The item that was clicked\n• None Inventory inventory event. // The inventory that was clicked in\n• None Player player Player event. // The player that clicked the item\n• None ItemStack clicked event. // The item that was clicked\n• None Inventory inventory event. // The inventory that was clicked in\n• None inventory. . myInventory. // The inventory is our custom Inventory\n• None clicked. Material. // The item that the player clicked it dirt\n• None event. // Make it so the dirt is back in its original spot"
    },
    {
        "link": "https://forums.minecraftforge.net/topic/65449-how-to-make-an-inventory-menu-in-forge",
        "document": "I'm trying to make an inventory menu where you select which server you want to join, but I have no idea where to start. I don't know how to construct an Inventory or anything like that, since it requires me to enter an ILockableContainer which I obviously can't construct.\n\nI've done this in Bukkit/Spigot before, but I don't want to use that now (I like Forge's API better)."
    },
    {
        "link": "https://dev.bukkit.org/projects/createyourownmenus",
        "document": "Hiding scripts is no longer possible from Minecraft 1.16 due to changes in item lore formatting\n\nAs the name suggests, this plugin allows you to create your own menus. The menus are based on inventories, with each slot holding a clickable menu item. When a player clicks on a menu item, it performs all of the commands listed in the item's lore (the text underneath its name) in a similar manner to command blocks. You can design the menu in-game by selecting any item, naming it in an anvil, modifying its lore using a command, and using commands to create and open a menu for editing to place it anywhere in the inventory that you wish. You can modify your menus any time you want.\n\nSee the gallery for screenshots.\n\n\"This looks amazing and would make my role playing server a lot easier for players so they don't have to remember a lot of commands.\" - Ccamm\n\n\"This looks amazing! I'm sure that we'll be able to use this in my new server project.\" - parrothead1337\n\n\"This plugin allow so much things :o\" - TheNemesisA5\n• Use commands to manage all of your menus\n• Use any in-game item as a menu item\n• Open menus using commands, command blocks or other menus\n• Activate any menu item simply by clicking it in an open menu\n• Alternatively, activate menu items by holding in hand and right-clicking (can be used to open menus and more)\n• Modify the lore of any item using commands /menu script clear and /menu script [comment/command] commands\n• Add, remove, modify and share menus using their .yml files in the \"plugins/CreateYourOwnMenus/menus\" folder\n• None Optionally run the command as the player instead of console by using the /sudo command E.g. /sudo @p kill\n• Show/hide menu script commands using the /menu script show and /menu script hide commands\n• Delay execute of commands in a script using the /delay [ticks] menu script command\n• Use {curly braces} to add dynamic arguments to commands (prompts the clicking player)\n• If you have Vault installed you can use /requirecurrency to check if a player has a given amount of currency\n• Translate into other languages using LanguageAPI\n• This is not intended to include a full-fledged scripting language. It simply executes commands in series and is interrupted on failure. For more complex actions, conditions and program flow you should be using a plugin like Skript to run scripts on menu item clicks.\n• It cannot run commands as a player with \"elevated permissions\". There is currently no safe way to do this within the Bukkit API without introducing errors, compatibility issues and/or require updates every build of Minecraft, CraftBukkit or even Bukkit. You can work around this by granting the permissions, performing the actions and then revoking them again, or by calling out to another plugin that supports this. I do not intend to add this feature until there is a safe way to achieve it.\n\nThis is a list of plugins that work well with CreateYourOwnMenus.\n• Use the MicroJump plugin for BungeeCord /server command support for BungeeCord users\n• Use the Skript plugin to open menus on player joining, or various other events, and create advanced scripts that you can run when clicking a menu item\n• Use the Vault plugin to provide currency support using the /requirecurrency menu script command\n\nA full list of commands and permissions is available on the Commands and Permissions page.\n\nDetailed command help is available in-game by typing /menu\n\nFind and share pre-created menus on our forums!\n\nA basic scripting guide is available on the Basic Command Scripting thread.\n\nOther tutorials and guides are available on the forum\n\nThe menu scripts always run as console. By default, this is not a problem as only operators have the ability to create menu items and modify menus, however if you give other players permissions to do this, be aware that it will also give them the ability to effectively run any command they wish as console.\n\nSources are available on GitHub: https://github.com/XHawk87/CreateYourOwnMenus\n• Add a \"cyom.menu.edit.[menu id]\" permission to allow editing of a specific menu only\n• Add \"cyom.script.allow.all\" permission to allow adding any command to a menu script, except those specifically denied (Default op)\n• Add \"cyom.script.allow.[command name]\" permission to allow adding specific commands to menu scripts (child of cyom.script.allow.all)\n• Add /menu script import [file] and /menu script export [file] for quickly importing or exporting the lore of a menu item to a simple text file\n• Add \"cyom.slot.lock.#\" to lock specific inventory slots in a player's inventory and treat it as a menu\n• Modify /menu grab command to place items into the same slots in a player's inventory where applicable, displacing other items, and otherwise finding any free slot\n• Trigger a menu item when it is used to attack or break blocks with\n• Add /use special command to allow the item to be used as a normal item (this cannot be used after a delay or prompt)\n• Organise menus into folders, and accessed in the form \"folder.menu\"\n• Store menu items in a format that is easier to edit manually, marking lines as hidden without the section symbols all over it\n• Provide a faux creative mode for non-op creative players so that server owners can grant creative abilities to non-op players without introducing security risks\n• Add escape character for {input prompts} so you can still use datatags\n• Items in locked slots are still dropped on death instead of remaining in their slots\n• Items with the /consume command will only be removed if the stack size is 1\n• To reduce the number of special menu item commands, the /GiveChest, /TakeChest and /CountChest commands will be removed and less complex and easier to understand Skript alternatives will be provided in their place\n\nIf you get the followed error on starting up the server with this plugin installed \"Unsupported major.minor version 51.0\". This means you are using an out of date version of Java. If you don't know how to upgrade, please contact your server hosting provider and ask them for help in upgrading to Java 7, or contact Oracle customer support. Mac OS X users require JDK 7 instead of JRE 7.\n\nDue to a Minecraft client formatting error, the invisible characters on the first line can cause the lore text box width to be increased despite taking up no space when there is visible text on the same line. This can be mitigated when hidden by keeping the first line empty using /menu script insert 0 &a. When commands are shown, it may become difficult to read them.\n\nA new security loop-hole has been discovered in the Minecraft server. It is possible for players with certain modified clients to create items for themselves that contain any lore that they want so long as they are in Creative Mode. This does not require operator status or permissions, only Creative Mode. If you have Non-operator creative players on your server be advised that if they use a modified client, it is possible for them to create any menu item that they want without needing permissions.\n\nYou can alleviate this somewhat by adding commands to the \"blacklist-commands:\" section in the config.yml. This will stop anyone but operators from using menu items with those commands on them. E.g.\n\nAnother option is to keep those players in Survival mode, but use other plugins to give them creative-like powers such as infinite resources, fast breaking and flight.\n\nIf you are experiencing ghost items in 1.7.2 using this plugin, it is due to the client-side Minecraft bug (https://mojang.atlassian.net/browse/MC-41165). This only affects 1.7.2 and is fixed in 1.7.4. The bug is not dangerous as it is not a real item. Any attempts to move the item out of the inventory, place it, or fill the same slot will result in it disappearing. Since this is a client-side only bug, it is recommended that players be urged to update from 1.7.2 to 1.7.4 as soon as possible. Note: it is possible to play on CB 1.7.2 R0.1 beta using a Minecraft 1.7.4 client.\n\nAfter restart, my menus all have weird characters wherever there were hidden commands or colours\n\nThis is a text-encoding issue caused by the some CraftBukkit servers attempting to read menu files in the wrong text encoding by default. You can fix this by telling Java to use UTF-8 by default for CraftBukkit.\n\nFor users of McMyAdmin, MultiCraft and other server launchers, there should be an option to specify text-encoding in your settings and switch to UTF-8. If not, you should have a way to add optional command line arguments, and follow the advice below for a startup script.\n\nIf you are using a startup script you will have something along the lines of:\n\nYou need to add the following option somewhere after java and before -jar. E.g.\n\nAfter updating CraftBukkit (build #3009+), my Skript custom commands aren't working from menu items\n\nChanges in CraftBukkit build #3009 (1.7.2-R0.3-SNAPSHOT) have updated the Bukkit plugin command system that broke Skripts custom command handler. This prevented Skript from receiving commands that had been directly dispatched by other plugins. This issue was fixed in Skript 2.1.1+, so downloading the latest version of Skript should correct the problem.\n\nIt says @a or @w instead of the player's name\n\nIf a @a or @w target selector is the last character in a command, it is not currently replaced correctly. This will be fixed in the next dev build. In the meantime, attempt to ensure there is a non-whitespace character after the last target selector.\n\nEvery time I click an item in my inventory it activates it like it was a menu item\n\nYou may have inadvertently locked all of your inventory slots by misuse of the '*' permission node. This will grant you all permissions, including 'cyom.slot.lock.*' which is used for locking inventory slots so that they can be used as menus. The best solution for this is to stop using the '*' node and instead only grant yourself the specific extra permissions that you need. However if you insist on using the '*' node you will need to grant yourself the negative permission '-cyom.slot.lock.*' in order to prevent your slots from getting locked.\n\nEvery time I restart my server, all changes I made to my menus are undone\n\nThere is a time-related bug with previous builds of CYOM that prevent file saving. To fix this you must update to the latest dev build: http://dev.bukkit.org/bukkit-plugins/createyourownmenus/files/18-create-your-own-menus-v0-5-8-dev/\n\nI can't use {NBT data tags} in my commands\n\nUnfortunately, we already have a use for the {curly braces} as dynamic arguments that predate their use in Minecraft, so you can't use NBT data tags in your menu commands. However, you can get around this in a couple of ways:\n\nAny items that you need to be given to a player with data tags can be pre-created and placed in a menu, then you can use the /menu grab command to give them to the player. Since you can grab multiple items at once, and edit the menu visually, it makes for a rather convenient way of setting up item kits on a server.\n\nYou can also use a custom scripting plugin like Skript to set up a custom command to run the commands for you. Using Skript in this way allows a great deal more flexibility for your menu scripts by adding logic, variables, persistence and program flow, and if you need help with them they have a lot of friendly people on their forums who are always happy to help.\n\nIf you'd like to contribute towards the continued development, support and maintenance of this project, please consider joining me on Patreon, and making a one-time or recurring pledge.\n\nIf you need help you can leave a comment below and I will get back to you as soon as I can. You can also join the Gitter chatroom using the following link, but please read the tutorial first. https://matrix.to/#/#xhawk87s-bukkit-plugins:gitter.im\n\nI am happy to give support, but repeatedly answering the same question that is explained in bold red on the plugin page is highly tedious. Don't be lazy, read first, then ask questions. It's the polite thing to do"
    }
]