[
    {
        "link": "https://web.mae.ufl.edu/designlab/Lab%20Assignments/EML2322L%20Design%20Report%20Template.pdf",
        "document": ""
    },
    {
        "link": "https://web.mae.ufl.edu/designlab/Lab%20Assignments/EML2322L%20Design%20Report%20Template.docx",
        "document": ""
    },
    {
        "link": "https://images.template.net/wp-content/uploads/2016/03/02064506/engineering-lab-report-template.pdf",
        "document": ""
    },
    {
        "link": "https://blogs.cpcc.edu/ceeet/official-ceeet-lab-report-templates",
        "document": "Our labs cover a vast range of competencies, one of which being appropriate technical writing. This helps students who are going into industry (where 40-80% of your job could be documenting your work) or university (where lab reports and publications are important). To meet the demands of both industry and university, we have adopted 3 levels of lab reports that students will use throughout our degree program. Each report mimics a type of document they will be required to write in the field. We have provided templates for the second two which you can download by simply clicking the linked title. The three types are:\n\nWorksheets: This is modeled after a communication you might have with another Engineering Technologist or technician on your team. This might include math, some code, and a paragraph of explanation if needed. For the written section, you may be asked to fill out and provide this Lab Cover Sheet to accompany your worksheet.\n\nInformal Lab Report Template: This is modeled after a communication you might have with your project lead or team leader. This person is expected to have some relevant background information and typically can contain an introduction of relevant theory, bullet points with important information documenting procedure and a discussion of results. Here you can find a great example of an informal lab report a student submitted in Fall of 2015. (Do not submit this report as your own, that is cheating and you will be subject to CPCC’s anti-cheating rules). If you must turn in a hard copy of your report, please fill out and attach this Lab Cover Sheet as the first page of your report.\n\nFormal Lab Report Template: This document is modeled after what you might be expected to produce for your customer. Your customer might not have any background knowledge and need more detail. If you must turn in a hard copy of your report, please fill out and attach this Lab Cover Sheet as the first page of your report.\n\nReferences should use IEEE format. It is actually simpler than MLA or APA format. This guide will show you the proper ways to reference your citations and build your works cited page.\n\nThe following video explains the workflow and tips on how to write great lab reports every time.\n\nHow to Use These Templates\n• Download the appropriate template for the assignment you are required to do from this website.\n• Read the template and the comments to see what the sections should contain\n• Delete the text within each section making sure that you leave the section heading the same. Do NOT change the section headings.\n• Type the data from your lab as well as the relevant theory and background and the discussion of your results.\n• Be sure to use proper citations when referencing datasheets, images, or any other material that you used but did not create yourself.\n• Save the file in the PDF format with the following filename structure: Firstname_Lastname_Course_Section_Semester.pdf\n\n For example: Adam_Harris_ELN133_05_SP2016.pdf\n• Submit the file the way your professor requires (wither submit it to your blackboard shell assignment or print it off and hand it in).\n\nHow to Avoid Plagiarism and Correctly Reference your Sources\n\nWe use IEEE Reference format. Luckily Microsoft Word has a great referencing tool built in that can do this for you. Watch the video below to see how to use it.\n\nUnderstand How These Reports will be Graded\n\nWe use a standard lab report rubric to help us grade lab reports. You can see the rubric below. This is how your labs will be graded, so it is a good idea to pull this page up and refer to it as you write your lab reports. We assess each row to count up the total number of points you will get for a lab assignment. Depending on the instructor’s policy, they may accept late work but deduct points for lateness. Read your syllabus or ask your instructor how this works.\n\n(Click the image below to make it larger and easier to read)."
    },
    {
        "link": "https://sussex.ac.uk/ei/internal/forstudents/engineeringdesign/studyguides/techreportwriting",
        "document": "A technical report is a formal report designed to convey technical information in a clear and easily accessible format. It is divided into sections which allow different readers to access different levels of information. This guide explains the commonly accepted format for a technical report; explains the purposes of the individual sections; and gives hints on how to go about drafting and refining a report in order to produce an accurate, professional document.\n\n\n\nA technical report should contain the following sections;\n\nFor technical reports required as part of an assessment, the following presentation guidelines are recommended;\n\nThere are some excellent textbooks contain advice about the writing process and how to begin (see Section 16). Here is a checklist of the main stages;\n• Collect your information. Sources include laboratory handouts and lecture notes, the University Library, the reference books and journals in the Department office. Keep an accurate record of all the published references which you intend to use in your report, by noting down the following information;\n\n \n\n Journal article:\n\n author(s)\n\n title of article\n\n name of journal (italic or underlined)\n\n year of publication\n\n volume number (bold)\n\n issue number, if provided (in brackets)\n\n page numbers\n\n \n\n Book:\n\n author(s)\n\n title of book (italic or underlined)\n\n edition, if appropriate\n\n publisher\n\n year of publication\n\n \n\n N.B. the listing of recommended textbooks in section 2 contains all this information in the correct format.\n• Creative phase of planning. Write down topics and ideas from your researched material in random order. Next arrange them into logical groups. Keep note of topics that do not fit into groups in case they come in useful later. Put the groups into a logical sequence which covers the topic of your report.\n• Structuring the report. Using your logical sequence of grouped ideas, write out a rough outline of the report with headings and subheadings.\n\nN.B. the listing of recommended textbooks in Section 16 contains all this information in the correct format.\n\nWho is going to read the report? For coursework assignments, the readers might be fellow students and/or faculty markers. In professional contexts, the readers might be managers, clients, project team members. The answer will affect the content and technical level, and is a major consideration in the level of detail required in the introduction.\n\nBegin writing with the main text, not the introduction. Follow your outline in terms of headings and subheadings. Let the ideas flow; do not worry at this stage about style, spelling or word processing. If you get stuck, go back to your outline plan and make more detailed preparatory notes to get the writing flowing again.\n\nMake rough sketches of diagrams or graphs. Keep a numbered list of references as they are included in your writing and put any quoted material inside quotation marks (see Section 11).\n\nWrite the Conclusion next, followed by the Introduction. Do not write the Summary at this stage.\n\n\n\nThis is the stage at which your report will start to take shape as a professional, technical document. In revising what you have drafted you must bear in mind the following, important principle;\n• the essence of a successful technical report lies in how accurately and concisely it conveys the intended information to the intended readership.\n\nDuring year 1, term 1 you will be learning how to write formal English for technical communication. This includes examples of the most common pitfalls in the use of English and how to avoid them. Use what you learn and the recommended books to guide you. Most importantly, when you read through what you have written, you must ask yourself these questions;\n• Does that sentence/paragraph/section say what I want and mean it to say?\n\n If not, write it in a different way.\n• Are there any words/sentences/paragraphs which could be removed without affecting the information which I am trying to convey?\n\n If so, remove them.\n\nIt is often the case that technical information is most concisely and clearly conveyed by means other than words. Imagine how you would describe an electrical circuit layout using words rather than a circuit diagram. Here are some simple guidelines;\n\nThe appearance of a report is no less important than its content. An attractive, clearly organised report stands a better chance of being read. Use a standard, 12pt, font, such as Times New Roman, for the main text. Use different font sizes, bold, italic and underline where appropriate but not to excess. Too many changes of type style can look very fussy.\n\n\n\nUse heading and sub-headings to break up the text and to guide the reader. They should be based on the logical sequence which you identified at the planning stage but with enough sub-headings to break up the material into manageable chunks. The use of numbering and type size and style can clarify the structure as follows;\n• In the main text you must always refer to any diagram, graph or table which you use.\n• Label diagrams and graphs as follows;\n\n \n\n Figure 1.2 Graph of energy output as a function of wave height.\n\n \n\n In this example, the second diagram in section 1 would be referred to by \"...see figure 1.2...\"\n• Label tables in a similar fashion;\n\n \n\n Table 3.1 Performance specifications of a range of commercially available GaAsFET devices\n\n \n\n In this example, the first table in section 3 might be referred to by \"...with reference to the performance specifications provided in Table 3.1...\"\n• Number equations as follows;\n\n \n\n F(dB) = 10*log (F) (3.6)\n\n \n\n In this example, the sixth equation in section 3 might be referred to by \"...noise figure in decibels as given by eqn (3.6)...\"\n\nWhenever you make use of other people's facts or ideas, you must indicate this in the text with a number which refers to an item in the list of references. Any phrases, sentences or paragraphs which are copied unaltered must be enclosed in quotation marks and referenced by a number. Material which is not reproduced unaltered should not be in quotation marks but must still be referenced. It is not sufficient to list the sources of information at the end of the report; you must indicate the sources of information individually within the report using the reference numbering system.\n\nInformation that is not referenced is assumed to be either common knowledge or your own work or ideas; if it is not, then it is assumed to be plagiarised i.e. you have knowingly copied someone else's words, facts or ideas without reference, passing them off as your own. This is a serious offence. If the person copied from is a fellow student, then this offence is known as collusion and is equally serious. Examination boards can, and do, impose penalties for these offences ranging from loss of marks to disqualification from the award of a degree\n\nThis warning applies equally to information obtained from the Internet. It is very easy for markers to identify words and images that have been copied directly from web sites. If you do this without acknowledging the source of your information and putting the words in quotation marks then your report will be sent to the Investigating Officer and you may be called before a disciplinary panel.\n\n\n\nYour report should now be nearly complete with an introduction, main text in sections, conclusions, properly formatted references and bibliography and any appendices. Now you must add the page numbers, contents and title pages and write the summary.\n\n\n\nThe summary, with the title, should indicate the scope of the report and give the main results and conclusions. It must be intelligible without the rest of the report. Many people may read, and refer to, a report summary but only a few may read the full report, as often happens in a professional organisation.\n• Purpose - a short version of the report and a guide to the report.\n• Length - short, typically not more than 100-300 words\n• Content - provide information, not just a description of the report.\n\nThis refers to the checking of every aspect of a piece of written work from the content to the layout and is an absolutely necessary part of the writing process. You should acquire the habit of never sending or submitting any piece of written work, from email to course work, without at least one and preferably several processes of proofreading. In addition, it is not possible for you, as the author of a long piece of writing, to proofread accurately yourself; you are too familiar with what you have written and will not spot all the mistakes.\n\nWhen you have finished your report, and before you staple it, you must check it very carefully yourself. You should then give it to someone else, e.g. one of your fellow students, to read carefully and check for any errors in content, style, structure and layout. You should record the name of this person in your acknowledgements.\n• Do not bother with style and formatting of a document until the penultimate or final draft.\n• Do not try to get graphics finalised until the text content is complete.\n• van Emden J. and Easteal J. Technical Writing and Speaking, an Introduction (McGraw-Hill 1996)\n\nUpdated and revised by the Department of Engineering & Design, November 2022"
    },
    {
        "link": "https://orangescrum.com/tutorial/project-documentation-and-reporting/effective-project-documentation",
        "document": "Don't have an account? Sign up\n\nThis site is protected by reCAPTCHA and the Google Privacy Policy and Terms of Service apply."
    },
    {
        "link": "https://peden.ece.uw.edu/student-info/wp-content/uploads/sites/8/2022/05/RnDProjectReportGuide_Rev3.pdf",
        "document": ""
    },
    {
        "link": "https://avaza.com/project-documentation",
        "document": "Trello uses a visual board system with cards and lists to organize tasks. This simple interface allows teams to track progress easily by moving tasks through various stages.\n\nEach card can include descriptions, checklists, due dates, and attachments, promoting clear communication and organization.\n\n\n\n\n\n\n\nNotion combines note-taking, task management, and database functions into one platform. Teams can create customized documentation spaces and build databases to track tasks.\n\nIt supports various formats, including tables and kanban boards, enabling flexible organization and collaboration. Users can also incorporate rich media, enhancing context around documentation.\n\n\n\n\n\n\n\nAsana emphasizes task management and project tracking. Users can create tasks, assign them, and set deadlines, making sure accountability. Its multiple project views—list, board, and calendar—offer flexibility.\n\nAsana also features project templates for consistency and built-in collaboration tools, making communication straightforward and effective.\n\n\n\n\n\n\n\nGoogle Docs offers easy document creation and sharing. Its real-time collaboration allows multiple users to edit documents simultaneously.\n\nVersion history helps teams track changes, and integration with Google Workspace applications enhances accessibility. This straightforward approach keeps project documentation organized and efficient.\n\n\n\n\n\n\n\nHow To Choose The Best Software for Project Documentation?\n\n\n\nSelecting the right software for project documentation is vital for effective teamwork. Here are some key steps to guide your decision:\n\n1️⃣ Assess Your Team’s Needs: Understand the specific requirements of your projects. If your team works remotely, a tool like Avaza can be important for tracking and collaboration. Identify what features you need based on team size and project complexity. Decide if you require a simple task tracker or a comprehensive documentation suite.\n\n2️⃣ Consider User Experience: Choose tools that your team can adopt quickly. A user-friendly interface helps everyone adapt and boosts productivity. Avoid complex tools that can slow down progress.\n\n3️⃣ Evaluate Features Against Costs: Look for a balance between necessary features and your budget. Compare pricing plans and ensure that the features you need justify the cost. A higher-priced tool may offer better value if it increases productivity. Take advantage of free trials to test functionality before committing.\n\n4️⃣ Check Integration Capabilities: Make sure that the software integrates well with existing systems, such as project management and communication tools. Seamless integration helps maintain an efficient workflow.\n\n5️⃣ Evaluate Support and Updates: Choose software that provides reliable customer support and regular updates. Quick support can resolve issues promptly and minimize downtime.\n\n6️⃣ Get Team Feedback: Involve your team in the selection process. Their input can highlight important features that meet collective needs, ensuring the chosen software aligns with everyone’s requirements.\n\n\n\n\n\nIs it a Good Practice To Write Project Documentation? Best Practices in Writing Project Documentation\n\n\n\nYes, writing project documentation is a good practice. It serves as the backbone of any project, helping teams stay organized and informed throughout the project lifecycle.\n\nThink of documentation as a living guide that clarifies the project’s path and goals while providing a reference point for all team members.\n\nHere are some best practices to consider when writing project documentation:\n\n1. Define the scope of the project\n\nClearly outline what the project will cover and what it won’t. This sets boundaries and keeps everyone on the same page.\n\nBeing specific about the scope prevents misunderstandings and helps team members focus on the essential tasks without straying into areas that are outside the project’s objectives. A well-defined scope can also serve as a checklist to ensure all relevant aspects are addressed.\n\nAssemble contributors, reviewers, editors, or publishers. Designating roles creates a streamlined process for document creation and review.\n\nHaving a dedicated team means that each person can bring their expertise to the table, whether it’s in writing, technical details, or editing. This collaboration not only improves the quality of the documentation but also makes everyone feel invested in the final product.\n\nBreak down the documentation into manageable sections. This approach makes it easier for team members to locate specific information and contributes to clarity.\n\nWhen documentation is organized into clear topics and sub-topics, it reduces the time spent searching for information, allowing team members to focus more on their tasks.\n\nClearly define what the project aims to achieve. Having measurable outcomes provides direction and motivation for the team.\n\nWhen everyone understands the expected results, it helps maintain focus and encourages accountability. Specific goals also serve as a way to measure success upon project completion.\n\nInclude all necessary technical details and environmental needs. This information helps everyone understand the project’s context and requirements.\n\nKnowing the technical parameters upfront can prevent costly misunderstandings later on and ensure that all team members are equipped to handle their respective tasks.\n\nOutline what the team needs to produce. Specify formats, due dates, and responsibilities to avoid any confusion.\n\nWhen deliverables are clearly defined, it minimizes the chances of overlooking necessary components and helps the team stay aligned with project timelines.\n\nEvaluate these aspects to keep the project on track. Regular assessments of quality and risk allow for proactive management, helping to address potential pitfalls before they arise.\n\nThis ongoing evaluation not only keeps the project on course but also helps in adjusting resources as needed to ensure successful outcomes.\n\n8. Bring all Scattered Documents in One Place\n\nCentralize documentation to make it easily accessible. This prevents confusion and ensures everyone is working from the same materials.\n\nA centralized repository means team members can quickly find the documents they need, promoting collaboration and keeping everyone informed.\n\n9. Take it Stage by Stage\n\nDocument each phase of the project as it progresses. This incremental approach allows for adjustments and reflects ongoing changes.\n\nBy documenting in stages, you can capture lessons learned in real time and make necessary modifications to improve future phases of the project.\n\nEncourage team members to contribute. Collaborative writing promotes engagement and uses diverse perspectives.\n\nWhen everyone feels they can contribute, it enhances the quality of the documentation and builds a sense of ownership among the team.\n\n11. Structure the Document & Make it Easy to Search\n\nClear organization improves usability, allowing team members to efficiently access the information they need when they need it.\n\n12. Let Your Team Review the Document Before Sharing\n\nGather feedback from your team before distributing the document. This ensures accuracy and completeness, reducing errors.\n\nA team review helps catch inconsistencies or gaps in information, ultimately strengthening the document’s credibility.\n\nKeep documentation current by updating it regularly. Include version history to track changes and facilitate easy referencing.\n\nMaintaining an updated document means that everyone has access to the latest information, which is important for effective project management.\n\nUse diagrams, charts, and other visuals to enhance understanding. Visual elements can simplify complex information and engage readers.\n\nIncorporating visuals makes it easier for team members to grasp concepts quickly, and it adds an element of clarity to the documentation.\n\nMake sure documents are accessible on mobile devices. This flexibility supports team members who need to reference materials while away from their desks.\n\nMobile access means that important information is always at your fingertips, which can improve decision-making in the field.\n\nChoose a tool that fits your team’s needs. The right platform can simplify the documentation process and improve collaboration.\n\nInvesting in a good documentation tool saves time and effort, allowing your team to focus on delivering quality work rather than wrestling with cumbersome documentation processes.\n\n\n\n\n\nWhy Do You Need to Document Every Project?\n\n\n\nDocumenting every project provides structure and clarity, leading to better organization.\n\nWith clear records of tasks, deadlines, and roles, teams know what to do, reducing confusion and keeping the project on track. Well-documented projects help identify potential roadblocks early, preventing problems from escalating.\n\nFor businesses aiming to scale, documentation is vital. It creates repeatable processes, making operations predictable.\n\nInstead of reinventing the wheel for each project, teams can rely on proven systems that boost productivity.\n\nSmall businesses gain a lot from clear documentation. It keeps client deliverables consistent and clarifies everyone’s roles and timelines.\n\nWhen communication is straightforward, it cuts down on confusion and minimizes back-and-forth discussions.\n\nGood documentation also helps with resource management. You can allocate time, budget, and manpower without any hassle when you have everything laid out.\n\nFinally, think of documentation as a roadmap that aligns the team, removing guesswork and ensuring everyone follows the same plan, especially when juggling multiple tasks.\n\n\n\n\n\nHow To Train Your Team on Project Documentation Best Practices?\n\n\n\nTraining your team on project documentation best practices makes sure everyone knows how to use tools and templates proactively.\n\nStart by giving clear guidance on how to navigate your documentation platform.\n\nWalk the team through any features they need to use, such as adding updates, formatting, or locating specific documents. A hands-on training session, where they follow along while learning, tends to work best.\n• None Start with a short orientation on your documentation system.\n• None Show them how to use the templates and where to find standard documents.\n• None Provide them with a step-by-step guide they can refer to later.\n• None Make sure they know who to reach out to if they have questions.\n\nA buddy system, where experienced team members help new hires, can also speed up the onboarding process.\n\n\n\n\n\n\n\nFor project documentation to be useful, everyone must follow the same standards.\n• None Set clear guidelines for formatting, file naming, and where to store documents.\n• None You can reinforce consistency by creating easy-to-follow templates for everything from meeting notes to technical specs.\n\nConsistency reduces the chances of mistakes and makes it easier for everyone to find what they need.\n\n\n\n\n\n\n\nProper training pays off in the long run.\n• None When the team knows how to document correctly from the start, you avoid back-and-forth clarifications later.\n• None Everyone works from the same set of information, reducing the chances of misunderstandings.\n\nThis leads to smoother projects and fewer delays caused by confusion over details. Investing time in training upfront leads to more streamlined collaboration later.\n\n\n\n\n\nHow Does Documentation of Projects Improve Teamwork?\n\n\n\nProject documentation makes teamwork easier by improving communication and clarifying roles. It reduces confusion and helps team members know exactly what’s expected of them.\n\nWhen processes are clearly written down, everyone can follow the same plan without needing constant clarification.\n\nFor example, if a project outlines who is responsible for each task, there’s no guessing or overlap. This keeps work organized and helps avoid delays. Remote teams benefit even more from this, as they can stay aligned without needing to be in the same room or time zone.\n\nSharing documented tasks and milestones also creates accountability. Each team member knows what they need to do and when. This way, everyone stays on track and can easily check progress.\n\nIn short, clear documentation helps teams work together more smoothly, reduces miscommunication, and keeps everyone on the same page.\n\n\n\n\n\nWhat are Common Challenges & Mistakes in Project Documentation?\n\n\n\nGood project documentation isn’t just about keeping records; it’s about building better client relationships. When documentation is clear and organized, it improves transparency and communication, showing clients that you’re committed to keeping them informed and involved.\n\nFor client-focused businesses, using tools like professional services automation (PSA) software can make this process even smoother. PSA tools help streamline documentation, so clients always have access to the latest updates and feel engaged at every step.\n\nRegular progress reports, timelines, and updates are key. When clients can easily check on the project’s status, they gain confidence as they see work moving forward toward their goals.\n\nClear timelines also prevent misunderstandings about deadlines. When clients can see the schedule and any changes, they know when to expect deliverables, which helps everyone stay aligned.\n\nAnd, if there’s an unexpected change, a quick update reassures clients that their concerns are being addressed.\n\nConsistent communication makes it easier for clients to ask questions or request adjustments. This openness builds trust and long-term satisfaction, which ultimately strengthens the working relationship.\n\n\n\n\n\nHow To Remain Consistent In Project Documentation When Managing Multiple Projects?\n\n\n\nManaging multiple projects can be a challenge, especially when it comes to maintaining consistent documentation. Consistency helps avoid confusion and keeps everyone aligned, even with different client needs and timelines.\n\nBelow are practical tips in the table to make sure your documentation stays uniform across all projects:\n\n\n\nHow to Write Standard Operating Procedures (SOPs) of Project Documentation with Examples\n\nStart by defining the objective of the SOP and who it applies to.\n\nKeep the language simple and direct, so it’s easy for anyone to follow.\n• Title: Name the process clearly. Example: “\n• Purpose: Briefly state why the procedure exists. Example: “ To ensure tasks are assigned, tracked, and completed on time\n• Step-by-Step Instructions: Break down the task into actions. Example: “ 1 2 3\n• Review & Update Cycle: Specify how often the SOP should be reviewed and updated to stay relevant.\n\nThis approach keeps processes clear and consistent, helping everyone follow the same standards, no matter the project.\n\n\n\n\n\nCan You Visualize Project Progress Through Documentation?\n\n\n\nYes, visual documentation tools like dashboards, charts, and timelines bring clarity to project management.\n\nThey transform complex data into easy-to-understand visuals, letting teams to track progress in real time.\n\nAvaza, for example, offers a user-friendly interface that highlights key project metrics at a glance.\n\nFor small business owners, these visualization tools simplify communication with clients and stakeholders.\n\nInstead of relying on confusing spreadsheets, you can share clear visuals that illustrate progress and timelines.\n\n\n\nHow To Make Sure That Project Documentation is Up-to-Date?\n\n\n\nMaintaining up-to-date project documentation requires a combination of regular updates, automated tracking tools, and collaborative input from the team. A good practice is to schedule periodic reviews where team members can verify and update their areas of responsibility.\n\nUtilizing software that allows real-time editing and notifications also helps ensure that everyone stays informed of the latest changes.\n\n\n\n\n\n\n\nA project outline highlights a project’s main objectives and tasks. It details what needs to be accomplished, the responsible individuals, and key deadlines.\n\nThis framework provides clarity, making sure all team members understand their roles and the project’s timeline for successful completion.\n\n\n\n\n\nWho Is Responsible For Project Documentation?\n\n\n\nThe responsibility for project documentation falls primarily on the Project Manager. They oversee the documentation process and make sure everything is accurately recorded.\n\nTeam members play an important role by providing updates and insights. Regular reviews help maintain document quality and make sure everyone remains informed about project developments.\n\n\n\n\n\nFinal Say: How to Archive and Organize Documentation for Long-Term Use?\n\n\n\nArchiving completed projects properly helps in maintaining order and accessibility. A well-structured system saves time and energy when you need to reference past work.\n\nOrganize clear naming conventions for your documents, including project names and dates, so you can find them easily later.\n\nNext, create a logical folder structure that separates documents by project type or department. This makes it easy to find what you need quickly.\n\nWhen you keep documentation well-organized, you build a valuable resource that supports business growth."
    },
    {
        "link": "https://sciencedirect.com/science/article/abs/pii/S0142694X20300223",
        "document": ""
    },
    {
        "link": "https://pencilandpaper.io/articles/ux-design-documentation-guide",
        "document": "As a UX designer, you’ve probably done plenty of specs and redlining, but you might not have written much structured documentation about your design decisions and process.\n\nWhile it might seem like snooze-worthy work you don’t have time for, prioritizing the practice of writing stuff down is well worth the effort. By documenting your work, you’ll bring order to the software development chaos, feel awesome about what you’ve accomplished, and collaborate better with the whole team. Design documentation is especially crucial when you’re working on complex feature sets for enterprise UX workflows, with many stakeholders and users involved.\n\nIf you’re not sure where to begin when it comes to design documentation, look no further: in this article, we’re serving hot tips on how to document your stuff and be more successful in your design work.\n\nLet’s kick things off with a definition: Design documentation is a set of documents and resources that record the unique process involved in creating, working on, measuring, and iterating a new feature.\n\nWith design documentation, you aren’t just writing documents about something you know or about what should be done. Rather, you’re logging what you’ve actually done and why you did it.\n\nYou can document things like:\n\nProduct design documentation isn’t just for devs: it’s for YOU. It allows you to reflect on your design choices and log your thoughts for later (your future self will thank you 🔮).\n\nBut you don’t work in a bubble—UX design impacts everyone in the organization, and documenting your work benefits other teams involved in the process, like product and marketing.\n\nLet’s say you document your design principles (more on that later), explaining why they exist and how they’ll be acted out. The VP of product can use those principles to write a blog post alluding to what’s coming up, and the marketing team can use them to brainstorm taglines for the next product. #teamworkmakesthedreamwork.\n\nDocumentation is where product & strategy come together\n\nDesign documentation represents how you’re manifesting and acting out the product strategy. It explains how your design supports the higher level intention of the product and who you’re building the product for. You know, the important stuff.\n\nWhat’s more, documentation acts as a source of truth, getting everyone on the same page with product strategy and design decisions.\n\nDocumenting your thought process while designing is like telling your design story—and it helps you find your plot holes. Did you cover everything in this project? Are there any missing pieces? Why did you make certain choices? How did you get to where you are now?\n\nBy writing things down, you avoid missing any crucial details, big and small. It’s like QAing your own work.\n\nThere are plenty of different platforms you can use for design documentation, like Confluence, Notion, and Figma, to name a few. Whichever tool you pick, it’s good to have a legit place for textual documentation. Your floating post-its in Figma, for example, can easily be moved and deleted by someone else.\n\nTogether with your team, figure out the best way to organize your shared workspaces so that everyone has access to the documentation, but no one can accidentally change or delete important notes.\n\nThere’s no perfect formula for design documentation—your approach will be unique to your team and culture. But here’s the key stuff you need to include regardless of how you structure your docs.\n\nWhen designing a brand new feature set, be super clear about why you’re building it, what audience you’re targeting, and where the feature plugs in. In other words, outline the product strategy context.\n\nThis info often comes from the design brief, which covers the goals and intention of what you’re trying to achieve. In your documentation, show how these higher level goals sprinkle into your design methods and mechanisms—the “how” of the product strategy.\n\nThis document intended to give the overall team a sense of the feature epics and what they involved. We included the goal and assumptions.\n\nFind yourself re-communicating the same quick fixes and solutions to your dev team over and over again? That’s something you should document in your design system as a high-level rule.\n\nFor example, you might stumble upon the perfect breakpoint logic while working on a specific page during a sprint. When you consistently apply that same structure to other pages with breakpoint problems, that becomes a pattern worth documenting and communicating to the team.\n\nBe sure to differentiate the decisions that are local vs. global, since some things will apply to specific pages or features for a super specific user subset. As you continue to work with the product, the global things will become clear.\n\nWhile a spec document outlines the “what” of UX design, your design rationale explains why you did what you did. Documenting your design rationale involves logging all key decisions relating to the product or feature you’re working on.\n\nYour design rationale is likely in a constant state of flux as you build, so it’s easy to forget your thinking process along the way. That’s why meticulously logging your design decisions is essential. Of course, you don’t need to log your every thought, but include the key decisions that show how you arrived at the final deliverable.\n\nPoint out any cases where there are unknowns with your rationale, and clarify your confidence level. You can say, for instance, “We haven’t figured this out yet, but we’re building this so we can test whether it works.”\n\n🧓☝️However, if you can’t explain why you did something, especially when it’s consequential, that’s a red flag. As designers, we need to think both abstractly and concretely, using our imagination and multiple data points when coming up with new ideas. Understanding your thinking process is a key part of your practice that you can’t ignore.\n\nThe upside is that being able to recognize your real-time thinking helps you articulate it better and uncover any holes and problems in your reasoning. Half of our job is being wrong, so get hip to that 😉\n\nClosely related to your design rationale, design principles are guidelines that help your team stay aligned as you build products or features. They help you make design decisions that prioritize the project objectives. For example, one design principle might be to make information readily available, and you act that out by sharing sophisticated tool tips and creating a design convention of using tooltips to define jargon and acronyms.\n\nDocumenting your design principles makes them official. Once you’ve written down these foundational pillars, you can move onto documenting the nitty-gritty stuff.\n\nLeave yourself a papertrail that reflects your thoughts for future versions—especially when designing bigger feature sets. Capture your design decisions early on so that you can refer to them when you’re working on the next versions of your product. It’s so much easier to come back to a feature set when you have a clear sense of what you were doing and what the next steps were.\n\nDocumenting your thoughts for future versions also ensures continuity with the experience users have gotten used to. You might do versioning on the fly, so just make sure devs don’t see future stuff and think it’s in scope.\n\nWe’ve talked about including high-level stuff in your design documentation (which are surprisingly easy to forget), but you also want to cover the edge cases. What are the wacky and weird situations that might arise? 🤪\n\nAsk yourself: would you rather find an edge case when you’re still making mockups, or when the due date is tomorrow and you’re pushing to production? If you don’t give yourself time for this early on, it’ll be most costly and time-intensive to fix later.\n\nSave yourself the crises and document the edge cases for layouts and super interactive stuff. Involve QA in this process—they’re really good at finding edge cases and breaking stuff. 🕵️\n\nNext, let’s walk through some tips for how to go about documenting your design decisions.\n\nGet your head in the game\n\nIf you haven’t already integrated documentation into your workflow, it’s time to shift your mental model and make it a key part of your role as a designer. Be disciplined, and take a slow and steady approach when documenting your design.\n\nEase yourself into the process by starting with some simple steps. For instance, the next time you create wireframes, jot down explanations for each design choice on sticky notes.\n\nHave a session with your team to go through what everyone expects to see in design documentation. Approach it from different angles, and ask the crew:\n• What do you think should be in the documentation?\n• What is the dev team used to seeing?\n• What has often been missing from documentation?\n• What is the product team able to provide (in terms of strategic documentation)?\n• What’s doable to produce (so that documenting can be easily integrated into your typical workflow)?\n\nChances are, the team already has ways of documenting things—you’re not starting from complete scratch, but you’re exchanging information and ideas about how to improve documentation.\n\nAfter this session, decide on a realistic middle ground for documentation that works for everyone. Avoid time-consuming documentation practices like extracting screenshots from your design tool into yet another place that you’ll need to keep manually updating.\n\nCreate a documentation template that designers can use whenever they start something new. This way, your documentation is sure to be useful and consistent, and you don’t need to reinvent the wheel every time.\n\nDon’t forget to involve QA here too—they need to know the ins and outs of the design even if they don’t attend all the feature kick offs and estimation meetings.\n\nGo from overview to more specific\n\nIf you jump straight into the granular stuff in your design documentation, you leave a lot of gaps for people to fill in themselves. First, take a step back to show the bigger picture and the navigational context, i.e. where you came from and how you got there.\n\nIntroduce new features with a low-fidelity flowchart—everyone loves a good flowchart 😍 They get people warmed up and show how the new thing you’re building fits within the existing user flow. Since mockups and prototypes often start right in the meat of things, it’s all too easy to create something new and forget to give it a home. To avoid your new features and workflows from getting lost in the abyss, communicate where it plugs in (like a menu or submenu), why it makes the most sense there, and how users can reach it (the entry point).\n\nUse a matrix for interaction documentation with conditional logic. This is especially useful when you have many states. For example, if you are part of a community, then you’ll see this type of phrase. If you share the link with one person, then you’ll see this message. If you share it with two people, then you’ll see this other message, and so on. In your matrix, be explicit about what’s a new feature and what’s a redesigned feature.\n\nWe used this matrix to better visualize how our different data types related to each other. Notice how colour-coding can be pretty and useful!\n\nIt’s much easier and efficient to represent all the variables in a matrix instead than of writing them out in a long-form text. You don’t want to have people deduce anything—QA will be logging in to your prototype with different user settings, and they need to refer to one source of truth.\n\nGet meta and document the documentation. 🤓As a UX designer, you’re used to the tools you use every day, but not everyone knows all the features inside out. To make your documentation inclusive and transparent, tell people how to use the software and where to to find what. For example, say “If you’re looking for the main component, use this button—it’ll bring you to the right place in the design system.”\n\nYou might want to name one mega document your “design document,” and have conventions and nomenclature for your file structure. Are there any special words you’re using? Create a glossary for all those specific terms, as well as for the abbreviations you use (so no one’s left wondering WTF is a KWHL?!)\n\nMake your documentation appropriate for your audience. Sometimes it’s just devs and product people, and sometimes it’s the whole company. You can create a landing page in the prototype so that wherever people start, they’ll land on a table of contents that shows how to use the prototype.\n\nDesign documentation requires a fine balance of time and effort. You don’t need to create super fancy web pages with embedded prototypes—documentation should be easy to produce—but you do need to put some elbow grease into it.\n\nIf you find yourself saying “We don’t have time to document anything, ever,” that’s a problem. It’s like saying “We don’t have time to think things through at any level, ever.” If you don’t make time for documenting your design rationale or process as you go through versioning, you’ll lose all that effort you put in. And we bet you’re a smart cookie and had some good thinking along the way!\n\nDesign documentation ensures you never have to start from a blank page again. The beauty of knowledge work is that you can pick up from the last person or from your past self. When you share knowledge with the organization, you gain clarity, save hours on design work, make well-informed decisions, and work better as a team."
    }
]