[
    {
        "link": "https://en.uniapp.dcloud.io",
        "document": "is a framework for developing all front-end applications using Vue.js , developers write a set of codes, which can be published to iOS, Android, Web ( Responsive), as well as various small programs (WeChat/Alipay/Baidu/Toutiao/Feishu/QQ/Kuishou/DingTalk/Taobao), Quick Apps and other platforms.\n\nThe company has 9 million developers, millions of applications, 1.2 billion mobile monthly active users, thousands of uni-app plug-ins, and 70+ WeChat/QQ groups. The official Alipay tool has built-in uni-app (see ), and Tencent Classroom officially recorded training courses for uni-app (see ), developers can choose with confidence.\n\nWith in hand, you don't have to worry about doing anything. Even if it is not cross-end, is a better applet development framework (see details ), a better App Cross-platform framework, more convenient H5 development framework. No matter what kind of project the leader arranges, you can deliver it quickly, without changing the development thinking or changing the development habits.\n\nIt is not a dream to compile one set of code to multiple platforms. Seeing is believing, scan the QR code below to experience the most comprehensive cross-platform effect for yourself! Note:\n\n - Some platforms cannot submit simple demos, so some other functions have been added; the hello uni-app sample code can be obtained from [github](https://github.com/dcloudio/hello-uniapp) \n\n -Quick QuickApp only supports vivo, oppo, Huawei\n\n - 360小程序仅 windows平台支持，需要在360浏览器中打开\n\n - uni-app 团队已立项启动鸿蒙next的兼容支持工作，预计2024年7月初发布Alpha版本，敬请期待。\n\n\n\n# Watch the video and learn about uni-app in 10 minutes\n\nWe carefully prepared a simple ten-minute introduction video, so that you can quickly understand the main features of :\n\nhas stronger advantages in 8 key indicators including the number of developers, case studies, cross-end leveling, expansion flexibility, performance experience, surrounding ecosystem, learning cost, and development cost.\n\n从下面 功能框架图可看出， 在跨平台的过程中，不牺牲平台特色，可优雅的调用平台专有能力，真正做到海纳百川、各取所长。 As can be seen from the functional frame diagram of below, does not sacrifice the platform features in the process of cross-platform, but can gracefully call the platform's proprietary capabilities, and truly embrace all rivers and learn from each other's strengths.\n\n# One set of code, running on multiple platforms\n\n实现了一套代码，同时运行到多个平台；如下图所示，一套代码，同时运行到iOS模拟器、Android模拟器、web、微信开发者工具、支付宝小程序Studio、百度开发者工具、抖音开发者工具、QQ开发者工具（底部每个终端选项卡，代表1个终端模拟器）： implements a set of codes that run on multiple platforms at the same time; as shown in the figure below, a set of codes runs on iOS emulators, Android emulators, web, WeChat developer tools, Alipay MiniApp Studio, Baidu Developer Tools, ByteDance Developer Tools, QQ Developer Tools (each terminal tab at the bottom represents 1 terminal emulator):"
    },
    {
        "link": "https://github.com/dcloudio/uni-app/blob/next/README_en-US.md",
        "document": "is a unified front-end framework that uses to develop applet, H5, and App. Official website address: https://uniapp.dcloud.io\n\nDevelopers use syntax to write code, and framework compiles it into small programs (WeChat/Alipay/Baidu/ByteDance/QQ/Kuishou/Dingding/Xiaohongshu), App (iOS/Android) ), H5 and other platforms to ensure its correct operation and achieve an excellent experience.\n• More developers and cases: HBuilder has installed 8 million units, the developer community has one million monthly active users, and more than 70 QQ and WeChat groups carry 100,000 people. There are many cases, and the uni statistics exceed 1 billion monthly active users (see details)\n• Provide a better development experience and higher engineering efficiency than the native development of small programs\n• The smoothness across the ends is more complete, and the characteristics of each end are more flexible, which can truly achieve multi-end coverage of a set of codes, without the need for multi-end maintenance and upgrades at each end\n• Authoritative recognition: Alipay's official tool has built-in uni-app (see details), Tencent Classroom's official self-made uni-app training video ( For details, see)\n\nDevelop once, compile to 3 platforms. Scan 3 QR codes in sequence to experience the most comprehensive cross-platform effect for yourself!\n\nsupports two ways to quickly create projects through the command line and the visual interface:\n• vue-cli command line mode: not limited to IDE, suitable for developers familiar with node, extended reading: Developing uni-app in vscode, Developing uni-app in WebStorm\n\nWelcome to submit your application, uni-app case collection\n\nThe function points supported by the plan will be displayed on the demand wall, and the voting opinions of developers will be collected. Go to Vote.\n\nhas always maintained high-frequency update iterations. For details, see Official version update log, [Alpha version update log](https://uniapp. dcloud.net.cn/release-note-alpha).\n\nSince has more than 70 QQ and WeChat groups, the official has been unable to maintain more communication groups. Please go to the official forum to communicate: https://ask.dcloud.net.cn/explore/. Forums provide more professional tools and services than issues.\n\nhas a rich plugin ecosystem. Many developers have submitted thousands of components, sdk, and project templates. For details, see: https://ext.dcloud.net.cn/\n\nIn addition to many third-party ui libraries, the official also provides uni-ui, which has stronger advantages in performance and cross-end compatibility. For details, see: https://ext.dcloud.net.cn/plugin?id=55\n• Q: Different terminals have different needs and features, and login and payment are also different. How to unify?\n• A: The difference part uses conditional compilation. uni-app provides flexible and powerful conditional compilation. Can perfectly handle the multiplexed part and the difference part. A real set of project source code. When the business is upgraded, multi-terminal maintenance is no longer required. If there is multi-end maintenance, it is often delayed because the traffic on some ends is not large, so that those users cannot enjoy the latest services. In addition, the login payment in the client part has been unified into the same api by uni-app.\n• Q: Is multi-terminal a compromise and will it cause performance degradation?\n• A: good question. It's really hard to be multi-terminal without compromising performance, but uni-app does it. On the h5 side, its performance and package size are consistent with those developed directly using vue.js; on the applet side, its performance is better than most development frameworks. It is better for the user to manually write setdata, just as it is more efficient to use vue.js to update the interface than to manually write js to modify the dom; in App, uni-app supports dual engines for webview rendering and native rendering. When native rendering is enabled, css writing is limited, However, the performance is very close to the effect of native development. In the current mobile phone environment, applications with less than ten million daily activities will not encounter any pressure when using uni-app in the App. Of course, it is also possible to change some pages to uni-app in the native app that has already been done; in addition, we will complete a lot of cross-end processing at the compile time, which will reduce the efficiency impact on the runtime.\n• Q: Do you not need uni-app if you don't do multi-end?\n• A: No. A large number of developers use uni-app as only one end, see Case for details. For developers, with an excellent tool in hand, there is nothing to worry about.\n• Q: Will uni-app change the open source protocol and switch to charging in the future?\n• A: The official promise will never change the open source agreement. Regardless of HBuilderX, uni-app, or App, it is always free for Chinese people.\n• Comparison between uni-App x and flutter on app side"
    },
    {
        "link": "https://en.uniapp.dcloud.io/resource.html",
        "document": "It is recommended that the first step is to read the introduction of the homepage of uni-app official website .\n\nIt is recommended that the second step is to experience uni-app for yourself through Quick Start .\n\nIt is recommended that the third step is to read the \"uni-app official course\" , producer: DCloud, class time: a total of 3 sessions.\n\n# If you are familiar with h5, but not with vue and MiniApp\n• DCloud cooperates with vue to provide free video tutorials on the vue.js official website , and you can also go directly to the tutorial address: https://learning.dcloud.io\n• There is no need to learn the syntax of the MiniApp. uni-app uses the syntax of Vue, not the syntax of the MiniApp.\n\n# If you are familiar with MiniApp, but not with vue\n\nAt present, major video learning websites have many uni-app learning resources:\n\nThe following is the video tutorial of the tripartite professional training institution\n• \"Uni-app Cross-Platform Application Development Course\" , Producer: hcoder Liu Haijun, class hours: 25 lessons in total. Highlights: The lecturer is experienced and is also the author of the graceui framework.\n• \"Uni-app actual combat community dating app development\" , Producer: Desha IT Academy. Applicable people: Have basic knowledge of Html+Css+Javascript.\n• \"The uni-app imitation of Xiaomi Mall\" ,Producer: Desha IT Academy. The homepage is developed using nvue, and currently supports app and MiniApp.\n• None Peking University Press: uni-app cross-platform development and application, from entry to practice\n• None China Water Resources and Hydropower Press: Nanny-level uni-app multi-terminal and cross-platform development from entry to enterprise-level actual combat\n\nIf you are an offline training institution and want to start a course cooperation, contact bd@dcloud.io\n\nMore people are welcome to share their learning experience, which can be reprinted to Community . Excellent articles will be included in this article.\n\n# The management rules of each end need to be learned patiently\n\nuni-app is not difficult to learn, but we noticed that many newcomers are impatient when adapting to the constraints of each platform.\n\nFor each end, there are management rules for each end, which is not something that uni-app can smooth out on a technical level:\n• For example, the browser on the H5 side has cross-domain restrictions;\n• For example, the WeChat MiniApp will require HTTPS links, and all server domain names to be connected to the Internet must be assigned to the WeChat whitelist;\n• For example, on the App side, iOS is very strict on privacy control and virtual payment control;\n• For example, various compatibility differences between App, Android, and domestic roms, especially because Google services are blocked, resulting in the development of push, positioning and other chaotic pits;\n\nBeing patient and not impatient is not the only factor for success, but it is the foundation for your long-term technical journey.\n\nThrough evaluation comparison ,we know that the performance of uni-app is better than other MiniApp development frameworks, but what is the underlying principle? This video is to explain the underlying implementation ideas and optimization strategies of the uni-app framework: How to achieve high performance in the uni-app framework"
    },
    {
        "link": "https://en.uniapp.dcloud.io/vue-basics.html",
        "document": "Vue (pronounced /vjuː/, similar to view) is a progressive framework for building user interfaces. Vue is designed to be applied layer by layer from the bottom up.\n\nVue.js uses HTML-based template syntax, allowing developers to declaratively bind the DOM to the data of the underlying Vue instance. All Vue.js templates are legal HTML, so they can be parsed by browsers and HTML parsers that follow the specification.\n\nIn the underlying implementation, Vue compiles the template into a virtual DOM rendering function. Combined with the response system, Vue can intelligently calculate how many components need to be re-rendered and minimize the number of DOM operations.\n\nThe core of Vue.js is a system that allows the use of concise template syntax to declaratively render data into the DOM. It only focuses on the view layer and is easy to use. Everything is responsive.\n\nWe provide a free video tutorial, while reading this document, we recommend that you combine Vue Getting Started Video Tutorial (opens new window) for a quicker grasp.\n\nMost of the content of this article comes from vue official website, but some adjustments have been made in conjunction with to make it easier for developers to get started quickly. Heartfelt thanks should be given to the Vue team!\n\nIn traditional development, when the native JavaScript DOM manipulation function is used to frequently manipulate the DOM, the browser must constantly render the new DOM tree, causing the page to look very stuck.\n\nVue is a single-page application, which makes the page partially refresh, without having to request all the data and DOM every time you jump to the page, which greatly speeds up the access speed and improves the user experience.\n• Runs fast and easy to get started\n• Easy to integrate with third-party libraries or existing projects\n• It used to be .html files, development was also html, and running was also html.\n• Now it is a .vue file, and development is a vue. After compilation, the runtime has become a js file.\n• Modern front-end development rarely uses HTML directly, but basically develops, compiles, and runs. So 'uni-app' has the concept of compiler, runtime.\n\n# Changes in the code structure within the file\n• Before a large node, there and nodes;\n• Now is a node for writing tag components, and is a node in parallel, that is, there are three-level node.\n\n# Changes in the way external files are cited\n• In the past, external js and css were introduced through script src and link href;\n• Now it is written in es6, import external js module (note that it is not a file) or css;\n\njs needs to come in and become an object . There is a tool class in the directory of hello uni-app. You can search for this example in hello uni-app. Hello uni-app sample code is available from github (opens new window).\n\nIn this , the prior should method for encapsulating as an object\n\nOf course, there are some advanced usages\n\ncss external file import. Global styles are written in in the root directory, and every page will load the styles in .\n\nIn addition, Vue supports component import, which makes it easier to encapsulate a library that includes interface, js, and styles See.\n\nIt used to be html tags, for example , now it is a small program component, for example .\n\nSo what is the difference between a label and a component, isn't it all surrounded by angle brackets in English?\n• In fact, tags are an old concept. Tags are built-in browsers.\n• But the components can be freely expanded. Similarly, you can encapsulate a piece of js into a function or module, and you can also encapsulate a ui control into a component.\n\nprovides a batch of built-in components (opens new window).\n• In the previous DOM operation, if you want to change the display content of a DOM element, such as the display text of a view: set the id to the view, then get the DOM element through the selector in js, and then perform assignment operations through js to modify the DOM element Attribute or value.\n• The current practice is the binding mode of vue, bind a js variable to this DOM element, modify the value of the js variable in the script, the DOM will automatically change, and the page will automatically update the rendering.\n• The front end uses the [MVVM](short for Model-View-ViewModel) mode. Simply put, Model: represents the data model, View: only focuses on view UI processing, and ViewModel: only processes business and data. Its core is the VM in MVVM, which is the ViewModel. ViewModel is responsible for connecting View and Model to ensure the consistency of views and data. This lightweight architecture makes front-end development more efficient and convenient, greatly reducing the number of lines of code, and better differential rendering performance.\n• solves the problem of interaction between js and DOM interface by using data binding method of vue.\n\nsupports all vue syntax when publishing to the H5 side; When publishing to App, due to platform limitations, all vue syntax cannot be implemented, but is still the cross-end framework with the highest support for vue syntax.\n\nCompared with the Web platform, the differences in the use of Vue.js in are mainly concentrated in two aspects:\n• Added: In addition to supporting the life cycle of Vue instances, it also supports Application life cycle and Page life cycle.\n• Restricted: Compared with the web platform, some functions on the App side are more restricted. See details.\n• More Vue features can be used on the App side, See details .\n\nThe most common form of data binding is text interpolation:\n\nThe content in will be replaced with the value of msg on the corresponding data object. Whenever the msg on the bound data object changes, the content at the interpolation point will be updated.\n\nSo far we’ve only been binding to simple property keys in our templates. But Vue.js actually supports the full power of JavaScript expressions inside all data bindings:\n\nThese expressions will be evaluated as JavaScript in the data scope of the owner Vue instance. One restriction is that each binding can only contain one single expression, so the following will NOT work:\n\nDirectives are special attributes with the v- prefix.\n• The value of the directive attribute is expected to be a single JavaScript expression (v-for is an exception).\n• The function of the instruction is that when the value of the expression changes, the collateral effect produced by it will act on the DOM responsively.\n• Some commands can receive a \"parameter\", which is indicated by a colon (😃 after the command name.\n\nDynamically bind one or more attributes, or a component to the expression.\n• In binding upon, it must be declared in the sub-assembly.\n• You can specify different binding types with modifiers.\n\nIf the values are , or , it will not even be included in the rendered elements.\n\nThe v-on instruction, which is used to monitor DOM events. v-on is abbreviated as'@'\n\nOnly render elements and components once. Subsequent re-rendering, the element/component and all its child nodes will be treated as static content and skipped.\n\nUnlike front-end framework in understanding the client in order to achieve a logical multiplexing state flag template node will be added to the guarantee rendering node only once, but not necessarily be able to optimize the rendering performance, but might slow down the client Comparison efficiency when multiplexing nodes.\n• Note: The content is inserted as normal HTML-it will not be compiled as a Vue template.\n• If you try to use the v-html composite template, you can reconsider whether to replace it by using components.\n• App and H5 end support , WeChat applet will be converted , other end does not support .\n\nCross-end rich text processing scheme can be found in: https://ask.dcloud.net.cn/article/35772 (opens new window)\n\ndata must be declared as a function that returns an initial data object (note that the data object returned in the function should not directly reference objects outside the function); otherwise, the data will not be automatically destroyed when the page is closed, and the last data will be displayed when the page is opened again .\n\nTo save performance, we hard-code the expressions of and into through . The supported syntax and conversion effects are as follows:\n\nAn object can be passed to v-bind:class to switch classes dynamically.\n\nYou can also pass in more fields in the object to dynamically switch multiple classes. In addition, the v-bind:class instruction can also coexist with ordinary classes.\n\nWhen or changes, class list will be updated accordingly. For example, if the value , class list becomes .\n\nYou can pass an array to v-bind:class to apply a class list.\n\nNote: Set the px pixel value in the way: style=\"\". The value is the actual pixel and will not be converted by the compiler.\n\nFurther it may also be used to generate a method or a string, inserted into the page, illustrated:\n\nInstructions are used to conditionally render a piece of content. This content will only return instruction in an expression is rendered value of the time. Use instructions represent the v-if \"else block.\"\n\n, As the name suggests, serves as the \"else-if block\" of v-if and can be used continuously:\n\nSimilarly , we must immediately bring or elements after.\n\nBecause a command, so it must be added to an element. But what if you want to switch multiple elements? At this time it can be a element as invisible package elements, and using v-if above. The final rendering results will not contain elements.\n\nIt is an instruction to display element options based on conditions. Usage and roughly the same:\n\nThe difference is that elements with v-show will always be rendered and kept in the DOM. v-show simply switching element attributes .\n\n# The difference between v-if and v-show\n\nIt is a \"real\" conditional rendering, because it will ensure that the event listeners and subcomponents in the conditional block are properly destroyed and rebuilt during the switching process.\n\nIt is also lazy: if the condition is false in the initial rendering, nothing is done, and the conditional block will not be rendered until the condition becomes true for the first time.\n\nIn contrast, it is much simpler, no matter what the initial conditions are, the element will always be rendered, and it is simply switched based on CSS to control the display and hiding of the element.\n• There is a higher switching overhead. If the conditions rarely change during runtime, it is better to use v-if.\n• There is a higher initial rendering overhead. If you need to switch very frequently, v-show is better.\n• Not recommended to use both and .\n• When and when used together, than a higher priority.\n\nThe v-for instruction can render a list based on an array.\n• The v-for directive requires a special syntax in the form of item in items, where items is the source data array and item is an alias for the array element being iterated on.\n• The first parameter is the alias iterated array elements.\n• The second parameter, the index of the current item , is optional.\n\nYou can also use v-for to traverse an object .\n• The first parameter is an alias iterated array elements.\n• The second parameter is the name (that is, the key name).\n• The third parameter serves as an index.\n\nLike , you can also use with the cyclically render some content that contain multiple elements. such as:\n\nWhen using Vue being updated when the list elements rendered, it defaults to \"place update\" strategy. If the order of the data items is changed, Vue will not move the DOM elements to match the order of the data items, but instead update each element in place and ensure that they are rendered correctly at each index position.\n\nIf the position of items in the list will dynamically change or new items added to the list, and you want the list of projects to maintain its own identity and status (such as input content, the selected state), you need to specify a list of items The unique identifier.\n\nThe value of is provided in two forms\n• Use cycles in a a , the value needs to be unique list number or string, and can not be changed dynamically.\n• Use cycle itself, then the need itself is a unique character string or a number\n\nWhen the data change triggers the rendering layer to re-render, the components with keys will be corrected, and the framework will ensure that they are reordered, not recreated, to ensure that the components maintain their own state and improve the efficiency of the list rendering.\n• Differences and other platforms when the platforms H5 integer v-for loop, as in, item 1 from the start, other platforms item from zero, the second parameter may be used in index H5 platform consistent.\n• The third parameter is not supported in the non-cyclic object H5 platform, such as in, index parameter is not supported.\n\nOn the custom component, you can use it like any ordinary element .\n\nWhen using v-for on the component, the key is required.\n\nYou can listen to DOM events with v-on instruction, when triggered and run some code.\n\nHowever, many event processing logic is more complex, so directly to the code is written in the instructions is not feasible. So you can also receive the name of a method needs to be called.\n\nInstead of binding directly to a method name, we can also use methods in an inline JavaScript statement:\n\nSometimes we also need to access the original DOM event in an inline statement handler. You can pass it into a method using the special variable:\n\nThe modifier is a special suffix specified by a period. It is used to indicate that an instruction should be bound in a special way. For example, modifier tells instructions for event-triggered call :\n• : Supported by all platforms, it will prevent the event from bubbling when used, and also prevent the default behavior of the event on the non-H5 side\n• If you need to scroll down the page prohibiting mask, use , processing can be used to events, but also can be an empty function.\n• Key modifier: Run on the mobile phone, with no keyboard event. So the key modifier is not supported.\n\nYou can form a v-model command , and create a two-way data binding on the element. It will automatically select the correct method to update the element based on the control type. While some magic, but in essence merely syntactic sugar. It is responsible for monitoring the user's input events to update the data, and perform some special processing on some extreme scenarios.\n\nIt is recommended to use : Form component (opens new window) directly in the development process.\n• The tag on the H5 side is replaced with the component\n\nEach contains a calculated attribute and a default is to use to read. All and the context is automatically bound instance Vue.\n\nBinding expressions in templates is very convenient, but they are actually only used for simple operations. Putting too much logic in the template makes the template too heavy and difficult to maintain. E.g:\n\nHere are the variables you want to display flip string. When you want to include more inverted strings here in the template, it will be more difficult to handle.\n\nTherefore, for any complex logic, you should use computed property .\n\nYou can bind as ordinary as calculated binding properties in the template.\n\nVue know rely on , so when change occurs, all dependent binding will be updated. And best of all is that we have to declaratively create this dependency: the calculation of property functions are no side effects (side effect), making it easier to test and understand.\n\nCalculated properties can also depend on the data of multiple Vue instances. As long as any of the data changes, the calculated properties will be re-executed and the view will be updated.\n\nWhen you need it can also provide a function, when manually modify the calculated value of the property, it will trigger function, perform some custom actions.\n\nNow run time, will be called and will be updated accordingly.\n\n# The difference between getter and setter\n• get: The new value of fullName can be obtained by setting the get method.\n• set: Set a value (newValue) to change the value associated with fullName through the set method, causing the fullName to be recalculated, and the fullName on the corresponding page will also be changed to new content.\n\nWe can achieve the same effect by calling methods in expressions:\n\nYou can define the same function as a method instead of a calculated attribute. The final result of the two methods is indeed exactly the same. However, the difference is that calculated attributes are cached based on their responsive dependencies .\n\nThey will be re-evaluated only when the related reactive dependencies change. This means that as long as no change, many visits to the calculation results before the property will return immediately to calculate, without having to perform functions again.\n\nThis also means that the following calculated properties will no longer be updated, because Date.now() is not a reactive dependency:\n\nIn contrast, whenever a re-render is triggered, the calling method will always execute the function again .\n\nWhy do we need caching? Suppose we have a computational property A with a relatively large performance overhead, and it needs to traverse a huge array and do a lot of calculations. Then we may have other calculated properties that depend on A. If there is no cache, we will inevitably execute A's getter multiple times! If you do not want to have a cache, please use methods instead.\n\nVue provides a more general way to observe and respond to data changes on Vue instances: listening to properties . When you have some data that needs to change with other data changes, you can easily abuse it . Often, however, a better practice is to use the calculation attribute rather than a command-style callback.\n\nThe above code is imperative and repetitive. Compare it with the version of the calculated attribute:\n• None For an object, the key is the expression to be observed, and the value is the corresponding callback function. The value can also be a method name, or an object containing options. Vue instance will be called upon instantiation , traversing each object ."
    },
    {
        "link": "https://community.sap.com/t5/product-lifecycle-management-blogs-by-sap/introduction-of-front-end-framework-uni-app/ba-p/13394895",
        "document": "You must be a registered user to add a comment. If you've already registered, sign in. Otherwise, register and sign in."
    },
    {
        "link": "https://nikhil-gandla777.medium.com/how-to-decompile-the-android-apk-file-to-a-jar-file-using-dex2jar-and-jd-gui-in-your-windows-47ea1ce3c410",
        "document": "Steps To Decompile The Android APK File To A JAR File Using DEX2JAR And JD-GUI:\n• Download the dex2jar zip file from https://sourceforge.net/projects/dex2jar/ and extract it after completion of the downloading.\n• Open the extracted dex2jar zip file and access the command prompt from the same path.\n• Type d2j-dex2jar “test.apk” (Instead of test.apk type your apk file name) in the command prompt and press enter.\n• Open the JD-GUI and drag the dex2jar (apk file) into JD-GUI.\n\nSo, We have decompiled the android APK file to a JAR file using DEX2JAR and JD-GUI."
    },
    {
        "link": "https://stackoverflow.com/questions/1249973/how-to-decompile-dex-into-java-source-code",
        "document": "To clarify somewhat, there are two major paths you might take here depending on what you want to accomplish:\n\nDecompile the Dalvik bytecode (dex) into readable Java source. You can do this easily with dex2jar and jd-gui, as fred mentions. The resulting source is useful to read and understand the functionality of an app, but will likely not produce 100% usable code. In other words, you can read the source, but you can't really modify and repackage it. Note that if the source has been obfuscated with proguard, the resulting source code will be substantially more difficult to untangle.\n\nThe other major alternative is to disassemble the bytecode to smali, an assembly language designed for precisely this purpose. I've found that the easiest way to do this is with apktool. Once you've got apktool installed, you can just point it at an apk file, and you'll get back a smali file for each class contained in the application. You can read and modify the smali or even replace classes entirely by generating smali from new Java source (to do this, you could compile your .java source to .class files with javac, then convert your .class files to .dex files with Android's dx compiler, and then use baksmali (smali disassembler) to convert the .dex to .smali files, as described in this question. There might be a shortcut here). Once you're done, you can easily package the apk back up with apktool again. Note that apktool does not sign the resulting apk, so you'll need to take care of that just like any other Android application.\n\nIf you go the smali route, you might want to try APK Studio, an IDE that automates some of the above steps to assist you with decompiling and recompiling an apk and installing it on a device.\n\nIn short, your choices are pretty much either to decompile into Java, which is more readable but likely irreversible, or to disassemble to smali, which is harder to read but much more flexible to make changes and repackage a modified app. Which approach you choose would depend on what you're looking to achieve.\n\nLastly, the suggestion of dare is also of note. It's a retargeting tool to convert .dex and .apk files to java .class files, so that they can be analyzed using typical java static analysis tools."
    },
    {
        "link": "https://medium.com/@aleksej.gudkov/apk-decompiler-a-comprehensive-guide-to-decompiling-android-apks-d2a5e1a51307",
        "document": "Why Use an APK Decompiler?\n\nDebugging and Analysis:\n\nDevelopers can debug third-party dependencies or analyze their own APKs to ensure everything works as intended.\n\nSecurity Audits:\n\nSecurity researchers use decompilers to find vulnerabilities like hardcoded secrets or insecure API calls.\n\nLearning:\n\nDevelopers can study how existing apps are structured and written to improve their coding skills.\n\nRecover Lost Code:\n\nIf source code is lost, decompiling an APK can help recover it (though the code may not be identical to the original)."
    },
    {
        "link": "https://corellium.com/blog/android-mobile-reverse-engineering",
        "document": "Reverse engineering an Android application typically involves using specialized tools to decompile the application's compiled code and resources into a human-readable form. As we go through this blog post, we will discuss the various available tools and examples of how they can be used to find hardcoded data and potentially find static application vulnerabilities.\n\nThis process can be challenging, as it requires a certain level of familiarity with Android app development and knowledge of Java. However, with the right tools and expertise, it is possible to reverse engineer most Android applications successfully.\n\nSeveral tools can be used for reverse engineering Android mobile applications. Some of the more popular ones include:\n• None : A powerful tool for reverse engineering APK files. It can decode application resources to their nearly original form and rebuild them after making code modifications.\n• None : This is a command-line and graphical tool that can decompile DEX (Dalvik Executable) files and convert them to readable Java source code\n• None : dex2jar is a tool used to convert DEX files to java JAR files and then using JD-GUI, which is a Java decompiler that can be used to view the Java source code\n• None (also known as \"r2\"): This is a free and open-source reverse engineering framework that can analyze, modify, and decompile Android applications.\n• None A simple utility that extracts and displays printable strings from a binary file. It can pull strings from Android APK files and be a valuable tool for reverse-engineering Android applications.\n\nIt's worth noting that reverse engineering Android applications is a complex process that requires a good understanding of java and smali code. The above list of tools is not exhaustive; instead, many common tools are used to get started with Android reverse engineering.\n\nFor this blog post and examples, we will work with an Android vulnerable challenge application publicly available on GitHub, Cybergym- CyberGym GitHub.\n\nLet’s start from the beginning when we have an APK file for deeper analysis. An Android application APK file is essentially a ZIP archive and can be extracted using APKtool from the above list of tools. You can unzip an APK file, but the ability to read all the binary contents will not be there.\n\nUtilizing APKtool, you can run the following command (replacing the binary name if it differs for you).\n\nOnce you have decompiled the Android APK file, a folder with the same name will be created. The screenshot below will show an example of a decompiled Android application.\n\nNow that we have a good understanding of the Android file structure and how to decompile an Android application, we can look into reverse engineering tools and how they can be used to find vulnerabilities or solve application challenges.\n\nWe need to install the application to understand what is required to complete the challenge and use that information; we can use reverse engineering tools and techniques to solve the challenge.\n\nUsing a Corellium virtualized device, I have installed the CyberGym level one APK and launched it, as shown in the screenshot below.\n\nThe application is looking for a 4-digit pin. My first thought is just brute force the pin because of the limited combinations it could be. When entering a pin to test, though, the application allows only three attempts and then requires time in between guesses. All this means we should try to use Android reverse engineering tools to solve this.\n\nAbove, we mentioned a couple of different reverse engineering tools. JADX leads the pack, allowing users to open an APK directly and decompile it into readable java code for analysis. Older tools like Dex2jar and JD-GUI work similarly but take a more extended approach.\n\nWe will start with using a JADX command to open the graphical interface, decompile the Android binary and allow us to perform more in-depth analysis.\n\nOn the left-hand side of the JADX application, you can see the APK file structure. We will start with the “MainActivity” to better understand the application and what is being done.\n\nWe notice some interesting things as we look into the MainActivity from this application.\n• None In the green box, you can see some obfuscation around the SQLite Database\n• None In the red boxes, you can see two database names getting created\n• None There is also a key of “12345678,” which will be interesting as we go through\n\nLet's dig deeper into the code, starting with the kkk.db file.\n\nThe highlighted code above creates a table with the name ‘name.’ Two columns are utilized within that table for ‘user’ and pass.’ Lastly, the values in those columns are ‘moksh’ and ‘password.’\n\nNow let's look into the second DB and see what we can decipher:\n\nAs you can see in the above code, a table is created with the name ‘a’. Within that table, two columns are created: ‘z’ and ‘a’. The values being stored for ‘z’ and ‘a’ are random, which is generated by a random number function (see screenshot below).\n\nFrom some quick reverse engineering, we can understand what the application is doing and help us perform deeper analysis to solve this challenge.\n\nWe will now pull the application databases from the local Android files to see if we can identify some of the critical data that is being stored within these databases. Corellium makes it extremely easy to review local files and download them for analysis. For a full tutorial and explanation, check the blog post on local data stored for Android.\n\nNow that we have the databases locally, we can open them up to see the contents. Once we do that, we are prompted with a password screen, meaning we must go back to the source code for additional analysis.\n\nAs I navigate through the code, I see many references to ‘sqlcipher,’ which is added encryption for SQLite databases. Using the advanced search functionality within JADX, I can find references to ‘sqlcipher’ to confirm that is what is being used for encryption.\n\nIf you remember, initially, we found a key hardcoded in the ‘MainActivity’ early on in this activity, which turns out to be the PRAGMA key used for the database encryption.\n\nWe will need a command-line utility called ‘sqlcipher’ to decrypt the database. If you have a Mac, you can use the following command to install.\n\nOnce we have ‘sqlcipher’ installed, the databases available locally and the PRAGMA key, we are set to decrypt the contents and solve this challenge.\n\nUsing the above commands, you can load the encrypted database, enter the PRAGMA key, migrate the version (depending on your ‘sqlcipher’ version and then look at the results from the database.\n\nThis varies for everyone, but taking the results from the database and entering them in the challenge will give you the solution.\n\nThat shows some of the power behind tools like JADX for Android and the ability to take an APK file, perform analysis on it, and through investigations, continue to exploit and find additional vulnerabilities within an application.\n\nKeep an eye out for future blog posts where we will dig deeper into code modification after reversing dynamic code changes using Frida and the ability to leverage Corellium, even more, to speed up the process.\n\nEquip your security teams with unprecedented tools for both manual and automated testing, freeing up valuable engineering time and saving money. Discover the power of Corellium’s high-fidelity virtual devices and spin-up near limitless combinations of device and OS with one-click jailbreak/root access. Set up a meeting today to see how we can streamline your processes and reduce costs."
    },
    {
        "link": "https://stackoverflow.com/questions/21010367/how-to-decompile-an-apk-or-dex-file-on-android-platform",
        "document": "An APK is just in format. You can unzip it like any other file.\n\nYou can decompile files using the tool, which is provided in the Android SDK.\n\nSee https://stackoverflow.com/a/7750547/116938 for more dex info."
    }
]