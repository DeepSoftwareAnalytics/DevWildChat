[
    {
        "link": "https://stackoverflow.com/questions/26275692/smoother-transition-moving-cursor-with-a-coordinates-given",
        "document": "In a .NET C# program, I have to simulate the \"mouse\" cursor movement with coordinates received in the events of a external controller.\n\nI did get to move the cursor depending on these coordinates.\n\nIs there any possibility to move the cursor of a smoother way between two points?, because when I have 2 away points there is like a \"jump\" with the cursor.\n\nEdit: Added code, this function is launched each time new coordinates are received (aprox. each 20-30 ms)"
    },
    {
        "link": "https://stackoverflow.com/questions/8050825/how-to-move-mouse-cursor-using-c",
        "document": "I want to simulate mouse movement every x seconds. For that, I'll use a timer (x seconds) and when the timer ticks I'll make the mouse movement.\n\nBut, how can I make the mouse cursor move using C#?"
    },
    {
        "link": "https://reddit.com/r/learnprogramming/comments/azg7r9/c_move_mouse_cursor_to_a_specific_position_on",
        "document": "I tried this but I think it's for 32-bit Windows only.\n\nI am getting lots of red underline errors like \"Cursor does not contain a definition for Position\" and \"Rectangle does not contain a constructor that takes 2 arguments\""
    },
    {
        "link": "https://gist.github.com/22d9e5cbdd037c678660a28d3d2666f3",
        "document": "You signed in with another tab or window. Reload to refresh your session.\n\nYou signed out in another tab or window. Reload to refresh your session.\n\nYou switched accounts on another tab or window. Reload to refresh your session."
    },
    {
        "link": "https://gamedevbeginner.com/make-an-object-follow-the-mouse-in-unity-in-2d",
        "document": "When working with 2D in Unity, you may sometimes want to make an object interact with the mouse’s position in some way.\n\nFor example, perhaps you want to place a sprite under the cursor?\n\nMaybe you want an object to follow the mouse’s position?\n\nOr, what if you want an object to look towards the mouse, turning to face it wherever it is on screen?\n\nJust like moving or rotating an object towards an object’s Transform position, the position of the mouse on the screen can also be used in the game, by converting it into a world position.\n\nIn this article, you’ll learn how to get the mouse’s position in the scene and how you can use it to move and rotate other objects towards the cursor.\n\nHow to get the mouse position in the world in 2D\n\nGetting the mouse position on the screen is relatively straightforward.\n\nThis works by getting the Mouse Position property of the Input Class, which returns the pixel coordinates of the cursor on the screen as a Vector 3 value.\n\nWhile the Mouse Position is returned as a Vector 3, it only includes X and Y values (which are the pixel coordinates on the screen).\n\nIt’s provided as a Vector 3 for compatibility reasons, allowing you to use it with functions that require a Vector 3 value. So, while there is a Z value in the Mouse Position property, it’s always zero.\n\nOnce you have the mouse’s screen coordinates, it’s possible to convert them to a real-world position, using the Screen to World Point function.\n\nScreen to World Point is a camera function, so you’ll need to call it from a specific camera or from the Main Camera, which is simply the first camera in the scene with a “Main Camera” tag.\n\nThe Screen to World Point function will then return a Vector 3 value, which you can use like any other position in the scene.\n\nHow to set the depth of the mouse position\n\nWhile the X and Y values of the Vector 3 that’s returned will correspond with the screen position of the mouse, the Z value will be, by default, the same as the camera’s Z position.\n\nWhich, because the camera’s location is behind its Near Clip Plane, is outside of the visible area.\n\nIn many cases, this may not be a problem.\n\nFor example, when working in 2D, if you store the result of the Screen to World Point function as a Vector 2 value, the Z value that’s returned is simply not used.\n\nHowever, if you use the Vector 3 that the Screen to World Point function returns to move an object to the mouse’s position, without offsetting the z value, it will be out of view of the camera.\n\nSo, if you’re trying to move an object to the mouse’s position, and it keeps disappearing, that could be why.\n\nFor this reason, if you’re working with Vector 3 values, you may wish to manually set the Z value of the position to a positive value, such as the camera’s Near Clip Plane, to make sure that, if you place an object there, that it’s always in view:\n\nFor more information about converting the mouse position to a world position in 2D and 3D, see my full guide here:\n• How to convert the mouse position to world space in Unity (2D + 3D)\n\nHow to move an object to the mouse’s position in 2D\n\nOnce you have the mouse’s position in the world, using it to change the position of other objects can be very simple.\n\nFor example, I could use the mouse’s world position to place a sprite underneath the cursor.\n\nBy setting the position of the Transform that the script is attached to, the object, in this case, a 2D sprite, tightly follows the position of the mouse.\n\nThis can be useful for placing sprites and objects under the cursor, such as a crosshair:\n\nWhile getting the mouse’s position in the scene can be useful for snapping objects to the cursor’s location, chances are, you’re more likely to use this method as a way to make objects respond to the cursor’s position in-game.\n\nFor example, moving an object towards the mouse.\n\nHow to make a 2D object move towards the mouse’s position\n\nOnce you’ve gotten the position of the mouse in the scene, it’s possible to make an object move towards it.\n\nThis works in the same way as it would with any other object, as the mouse position is now simply a position in a world that can be used as a target to move towards.\n\nFor example, using the Move Towards function.\n\nThis will make the object that this script is attached to follow the mouse’s position on the screen at a constant speed (in this case 10 units per second) without overshooting.\n\nAnd, if you want to ease the movement of the object so that it follows the mouse smoothly, starting and stopping more slowly, you can do that by using Smooth Damp.\n\nSmoothly move an object towards the mouse (using Smooth Damp)\n\nSmooth Damp works like Move Towards except that it eases the object’s movement between its starting point and its target.\n\nThe object will start slowly, accelerate to an optional maximum speed, and slow down as it approaches the target position.\n\nWhich looks like this:\n\nSmooth Damp can be used to ease many different types of values. In this case, it’s a function of the Vector 2 class:\n\nThe Smooth Damp function takes a Smooth Time, which is, approximately, the amount of time that the movement should take and, optionally, a Max Move Speed, which is the maximum allowed speed of the object when completing the movement:\n\nLastly, the Smooth Damp function needs a local value to work from, in this case, a Vector 2, to be able to track the velocity of the object between frames:\n\nIn the function, you’ll reference the local Current Velocity with the ref keyword.\n\nHere’s how it looks all together:\n\nHow to follow an object at a distance in 2D\n\nThe Move Towards and Smooth Damp functions both take a parameter for their target position.\n\nWhich means that, if you want an object to follow a target in 2D, such as the mouse or another object, but from a set distance, all you need to do is offset the position of the target in the direction of the following object.\n\nSo how does that work?\n\nFirst, you’ll need to know the direction between the two objects.\n\nThis is because the offset that you’ll need to add defines a point on the path between the target and the following object.\n\nHow to get the direction between two objects in 2D\n\nGetting a direction vector between two objects in 2D works by subtracting the position of the origin object from the position of the target and then normalising the result.\n\nOr, put simply, start with the target position on the left and subtract the position the direction should start from.\n\nNormalising the direction vector limits its length to 1 (making it a Unit Vector).\n\nThis can be useful for defining distance in a specific direction as a Unit Vector, multiplied by a distance value, will create a direction vector with an exact length.\n\nIn this example, getting a unit vector from the mouse position and multiplying it by a Minimum Distance value, such as 2 units, will create a 2 unit offset in the direction of the object that’s following the mouse.\n\nThis means that the object will follow the mouse, but at a distance, never moving closer than the value of Min Distance to the mouse’s position and smoothly moving away if it does get too close.\n\nWhich looks like this:\n\nThe only reason for working out the direction between the two objects in this example is to work out which way the offset should point.\n\nHowever, there are other reasons why you might want to work out the direction of another object.\n\nFor example, to make one object look at another.\n\nMake a 2D object look at the mouse position\n\nWhile it seems like a simple task, rotating one object so that it looks at another in 2D can sometimes be tricky.\n\nThis is mainly because otherwise convenient functions, such as Look At, don’t always produce the results you want.\n• How to Rotate objects in Unity\n\nA lot of the time, when you’re rotating an object in 2D, all you really want to do is rotate an object around its forward Axis, the Z-Axis.\n\nIf the object is a flat sprite, any rotation around the X or Y-Axis could cause the object to become invisible because of its orientation towards the camera.\n\nBecause of this, the simplest way to rotate an object in 2D, is around its Z-Axis, using a single float value.\n\nThen, all you’d need to do to rotate the 2D object is pass in the angle of rotation.\n\nExcept, how do you get the angle between the object that’s rotating and the position it’s supposed to be looking at?\n\nHow to get the angle between two 2D objects in Unity\n\nTo get the angle between two objects, in this case between an object and the mouse position, you’ll need to first get a direction vector between them.\n\nJust like in the earlier example, getting a direction works by subtracting the starting position from the target.\n\nIn this case, that means subtracting the position of the object that’s supposed to be looking at the mouse from the mouse’s position in the world.\n\nTo work out the angle, next you’ll need to decide which way is the object’s forward direction.\n\nFor example, if you have a simple 2D arrow:\n\nThen the forward direction of that object is to the right (if you want the arrow to point at the mouse correctly that is).\n\nMeaning that the angle you’d need to find is the angle between Vector2.right and the direction of the mouse from the object.\n\nSo how can you do that?\n\nHelpfully, the Signed Angle function in Unity does exactly that.\n\nThen, to rotate the object, all you need to do is set the object’s Z rotation to the angle value:\n\nWhich looks like this:\n\nHere it is all together:\n\nIn the same way that it’s possible to smooth the movement of an object towards the mouse, the rotation of an object can also be eased.\n\nTypically, there are two ways of doing this.\n\nEither with the Rotate Towards function, which will rotate the object at a consistent max speed (measured in degrees per second)\n\nWhich looks like this:\n\nOr, the second option is to smooth the rotation using Smooth Damp.\n\nUsing Smooth Damp will cause the object to turn to look at the mouse in a smoother, more natural motion that is eased at the start and end of its movement.\n\nNotice that this method uses a specific type of Smooth Damp, Smooth Damp Angle, which is a Maths function that allows the angle value to move past 180 degrees.\n\nUsing Smooth Damp Angle instead of the standard Smooth Damp stops the arrow from going ‘the long way round’ when passing the 180 / -180 degrees point.\n\nInstead, the arrow freely rotates to look at the mouse, no matter where it is.\n\nWhich looks like this:\n\nThe separate methods of moving an object and looking towards the mouse can be combined to make an object follow the mouse position.\n\nFor example, to create a missile projectile, that moves towards the mouse, you could combine the method of rotating an object towards the mouse with a simple script that moves the object forwards at a set speed.\n\nLike this, for example:\n\nThe result is a projectile that moves forwards while turning towards the mouse position.\n\nWhich looks like this:\n\nThe accuracy of the projectile depends on how quickly it can turn, where a higher turn speed, in degrees per second, means that the projectile can face the target position sooner, making a tighter turn towards it.\n\nBut what about physics objects?\n\nIf your projectile has a Collider attached to it, it’s usually a bad idea to move it around using its Transform.\n\nThis is to do with the performance hit of moving a Static Collider, which is simply any object with only a Collider attached, using its Transform component.\n\nTypically, in 2D, you’ll get better performance when moving it with a Rigidbody component, in this case, set to a Kinematic Body Type.\n\nHelpfully, you’ll still be able to use the same calculations to manage angle and movement as when moving the object using its Transform.\n\nHowever, instead of setting the position of the object directly, you’ll need to set the position and rotation of the Rigidbody using the Move Position and Move Rotation functions."
    },
    {
        "link": "https://stackoverflow.com/questions/10120665/determine-color-of-a-pixel-in-a-winforms-application",
        "document": "This is a slightly different take on the other answers already provided as you've only stated that you want to determine the \"color\" but have not explicitly stated that you wanted the RGB values.\n\nThis distinction is necessary because there may be variations to a colour that are imperceptible to the human eye. For example let's assume that you are interested in detecting the colour \"blue\". The values (5, 5, 240) and (10, 10, 255) are only very subtly different from (0, 0, 255). In fact, the difference is so subtle that you'd need to compare the colour swatches side by side to tell them apart and even then it depends on the quality of your monitor. They're subtly different on my desktop monitor but are indistinguishable on my laptop. To cut the long story short, RGB values are a bad way of determining colour.\n\nThere are numerous methods to aid in calculating the difference between colours, the most common being the Delta-E method. However, this may be over kill if you just want a quick and dirty method. Convert RGB space into HSV and use the difference in hue to determine the colour. Modifying Amen's example, you get the following:\n\nPure blue has a hue value of 240. The previous examples (5, 5, 240) and (10, 10, 255) both have a hue of 240. This is good news as it means that hue is a measure that is fairly tolerant to RGB differences, and the difference is also quick to calculate (i.e. just take the absolute difference in the hue values). At this point, we should also introduce another parameter which governs acceptable tolerance to colour difference. A 15 degree hue tolerance will make the system fairly robust.\n\nHere's sample code that compares two colours to determine whether they are acceptably similar\n\nFor a more in-depth explanation of why this works, see this Wikipedia article on HSV colour spaces."
    },
    {
        "link": "https://stackoverflow.com/questions/67029478/trying-to-read-pixel-color-from-picturebox-in-c-sharp-winforms",
        "document": "I am having an odd issue whereby when I then try to iterate over the pixels of the or save the bmp it is just all black.\n\nThe intention of the tool is that you select a font, size, and style, and then it loops over the ASCII chars of that font and shows each character in the picture box, and converts the pixel data into a HEX array so I can use them on LCD displays.\n\nThe main part of the tool works whereby it is correctly looping through the ASCII chars and displaying them in the picture box but after each char is drawn to the picture box and I then try to iterate over the pixels of the every pixel is returned as 0,0,0 RGB \"black\" and if I save the bmp which was drawn to the that too is all black, but again I can see the bmp of that char correct drawn in the yet the data and bmp data does not match what I see in the itself, I am truly lost as to why I am unable to correctly iterate or save the bmp or .\n\nI have tried not using functions which is not ideal as I want the UI to be free, and I have tried various means to read the pixels and save the bmp but the result is the same. I hope to ask if anyone knows why I am getting this odd behavior and the solution to the issue."
    },
    {
        "link": "https://reddit.com/r/csharp/comments/ll47i3/how_to_do_automated_testing_for_windows_form_or",
        "document": "I've created Two separate Class library for my project one for Calculation and one for UI. I am testing all calculation using xunit. But for User Interface I can't figure out how to test it. Currently I am testing manually for UI."
    },
    {
        "link": "https://reddit.com/r/csharp/comments/o8mj7z/get_the_color_of_x_pixel_of_the_screen_from_wpf",
        "document": "I need to get the color of a pixel from the screen *not* the WPF window. Im doing this from an WPF project in .net core.\n\nIve tried using this\n\nBut it is slow, i need to check over 10+ times a second, and with that i can only do it twice or 3.\n\nHow can i do this?"
    },
    {
        "link": "https://github.com/quozd/awesome-dotnet",
        "document": "Contributions are always welcome! Please take a look at the contribution guidelines and quality standard pages first. We accept proprietary and commercial software too.\n\nThanks to all contributors, you're awesome and wouldn't be possible without you! The goal is to build a categorized community-driven collection of very well-known resources.\n\nTo the extent possible under law, Vitali Fokin has waived all copyright and related or neighboring rights to this work.\n• OneOf - OneOf provides discriminated unions for C# with exhaustive compile time matching.\n• Algorithmia - Algorithm and data-structure library for .NET 3.5 and up. Algorithmia contains sophisticated algorithms and data-structures like graphs, priority queues, command, undo-redo and more.\n• C# Algorithms - A C# plug-and-play class-library project of standard Data Structures and Algorithms. It contains 35+ Data Structures and 30+ Algorithms designed as Object-Oriented isolated components.\n• Towel - data structures, algorithms, mathematics, metadata, extensions, console, measurements, and other useful stuff\n• FastEndpoints - High-performance middleground between classic ASP.NET Core API controllers and Minimal APIs. Using a REPR (Request-Endpoint-Response) pattern, this library eliminates the boilerplate and monolithic feel of controllers by improving colocation of code.\n• TLSharp - It's a perfect fit for any developer who would like to send data directly to Telegram users or write own custom Telegram client.\n• WTelegramClient - Automate a user account on Telegram, using the latest version of Telegram Client API\n• NancyFx - Lightweight, low-ceremony, framework for building HTTP-based services on .NET and Mono\n• ASP.NET Web API - Framework that makes it easy to build HTTP services that reach a broad range of clients, including browsers and mobile devices\n• Breeze - API framework enabling rich data access by using the OData 3 protocol. Client libraries available for JavaScript and C#.\n• Mobius: C# API for Spark - Mobius adds C# language binding to Apache Spark, enabling the implementation of Spark driver code and data processing operations in C#.\n• ServiceStack - Thoughtfully architected, obscenely fast, thoroughly enjoyable web services for all\n• Nelibur - Nelibur is message based web service framework on the pure WCF. Nelibur simplifies creating high-performance and message-based web services and you certainly have all the power of the WCF.\n• WebAPI Contrib - Collection of open source projects to help improve your work with ASP.NET Web API\n• Xamarin.Essentials - Xamarin.Essentials provides developers with cross-platform APIs for their mobile applications.\n• FFImageLoading - Fast & Furious Image Loading - This Library to load images quickly & easily on Xamarin.iOS, Xamarin.Android, Xamarin.Forms, Xamarin.Mac / Xamarin.Tizen and Windows (UWP, WinRT)\n• Population.NET - A .NET library allows clients to specify the exact fields they need, reducing unnecessary data transfer by avoiding the retrieval of all fields by default.\n• ASP.NET Boilerplate - A starting point for new modern ASP.NET MVC web applications with best practices and most popular tools.\n• ABP - The next generation of the ASP.NET Boilerplate web application framework.\n• Orleans - Orleans is a framework that provides a straight-forward approach to building distributed high-scale computing applications, without the need to learn and apply complex concurrency or other scaling patterns\n• Newbe.Claptrap - This is a set of server-side development frameworks with reactive, event sourcing and Actor pattern as basic theories. On top of this, developers can develop \"distributed\", \"scale out\", and \"easy to test\" application more simply.\n• CoreFX - The corefx repo contains the library implementation (called \"CoreFX\") for .NET Core. It includes System.Collections, System.IO, System.Xml and many other components.\n• Mono-Addins - Mono.Addins is a generic framework for creating extensible applications, and for creating add-ins which extend those applications\n• peasy - Peasy is a middle tier framework that offers an easy to use and flexible rules engine and was designed to address common challenges such as concurrency handling, transactional support, fault tolerance, threading, scalability, async and multiple client support, and easy testability, all without a huge learning curve!\n• Plastic - Plastic provides encapsulation of things like Domain, Application Rules, Business Rules or Business Logic in Application. For this, Command pattern is used.\n• Signals - Signals is a .NET5 based framework which focuses on increasing the quality and productivity within development teams by providing them with tools, aspects and processes.\n• Spring.Net - Spring.NET is an open source application framework that makes building enterprise .NET applications easier\n• DotNetty - DotNetty is a port of Netty, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients.\n• AspectCore Framework - AspectCore Framework is an Aspect-Oriented Programming based cross platform framework for .NET Core and .NET Framework. Core support for aspect-interceptor,dependency injection integration , web applications , data validation , and more.\n• HopFramework - HopFramework is a framework to create projects easily applying Domain Driven Design and a lot of patterns to delivery a better solution.\n• Fusion - .NET Core and Blazor library that attempts to dramatically improve the way we implement real-time and high-load services by introducing a novel kind of \"computed observables\" - immutable, thread-safe, and most importantly, almost invisible for developers. Samples 1 Samples 2\n• silky - The Silky framework is designed to help developers quickly build a microservice development framework through simple code and configuration under the .net platform.\n• .NET Boxed Templates - .NET project templates with batteries included, providing the minimum amount of code required to get you going faster.\n• ProjectScaffold - A prototypical .NET solution recommended by the F# Foundation---includes file system setup, Paket for dependencies and FAKE for build/test automation. By default, build process also compiles documentation and generates NuGet packages.\n• Serene - Serenity is an ASP.NET MVC application platform designed to simplify and shorten development of data-centric business applications with a service-based architecture. Serene is a starter template to build Serenity applications.\n• Side-Waffle - Large collection of useful templates for Web and Desktop development.\n• Nucleus - Vue startup application template that uses ASP.NET Core API layered architecture at the back-end and JWT based authentication\n• JHipster.NET JHipster blueprint for replace orginal SpringBoot Backend by asp.net core. The main goal generator of jhipster is showcases best practices of modern web development in java. So the goal of the project is to do the same in .net. The Frontend can be generated with angular or react and soon with blazor.\n• AIMLBot (Program#) - A small, fast, standards-compliant yet easily customizable implementation of an AIML (Artificial Intelligence Markup Language) based chatter bot in C#.\n• Mpt-Instruct-DotNet-S - LLM that can generate and explain C# code (and its C# wrapper to run on consumer CPU with 5GB ram+, contains Console and Blazor sample projects)\n• LLamaSharp - C#/.NET Binding of llama.cpp, run LLaMA/GPT model using C# without having to compile lama.cpp.\n• LlmTornado - One .NET library to consume OpenAI, Anthropic, Cohere, Google, Azure, Groq, and self-hosed APIs.\n• Mono.Cecil - Cecil is a library to generate and inspect programs and libraries in the ECMA CIL form.\n• NodeAssets - Asset Manager for .NET that has live CSS updates using SignalR and can optionally leverage Node.js compilers\n• Bundle Transformer - Modular extension for Microsoft ASP.NET Web Optimization Framework. Its modules supports LESS, Sass, CoffeeScript, TypeScript, Mustache, Handlebars, Autoprefixer along with a bunch of different JS and CSS minifiers.\n• SquishIt - Lets you easily bundle some CSS and JavaScript\n• Abblix OIDC Server - A fully certified OpenID Connect server library for .NET by the OpenID Foundation, providing comprehensive support for OAuth2 and OpenID Connect across all profiles. [$][Free for non-commercial use]\n• IdentityModel - Helper library for identity & access control in .NET 4.5 and MVC4/Web API.\n• OAuth - A very lightweight library for generating OAuth 1.0a signatures written in C#\n• Stuntman - Stuntman is a library for impersonating users during development leveraging .NET Claims Identity.\n• Enforcer - Write fine grained authorization policy in easy-to-read language, and have it compiled to native .NET code [$]\n• BootstrapBlazor - A set of enterprise-class UI components based on Bootstrap and Blazor.\n• ant-design-blazor - A set of enterprise-class UI components based on Ant Design and Blazor WebAssembly.\n• MASA.Blazor - A set of enterprise-class UI components based on Material Design and Blazor WebAssembly.\n• Megabit.Blazorise - Blazorise is a component library built on top of Blazor and CSS frameworks like Bootstrap, Bulma and Material. Very easy to use.\n• MudBlazor - A Material Design framework for Blazor, allowing .NET developers to quickly build web apps, with extensive documentation and examples.\n• MSBuild - The Microsoft Build Engine (MSBuild) is the build platform for .NET and Visual Studio\n• Cake - Cake (C# Make) is a cross-platform build automation system with a C# DSL.\n• FlubuCore - A cross platform build and deployment automation system for building projects and executing deployment scripts using C# code.\n• ModularPipelines - Write your pipelines in C#\n• FastReport - The open source report generator for .NET Core 2.x/.Net Framework 4.x. FastReport can be used in ASP.NET MVC, Web API applications.\n• CacheCow - An ASP.NET Web API HTTP caching implementation both on client and server\n• EasyCaching - A caching library that contains basic and some advanced usages of caching which can help handle caching more easier!\n• Foundatio - A common interface with in memory, Redis and hybrid implementations.\n• Cashew - a .NET library for caching responses easily with an through an API that is simple and elegant yet powerful.\n• Cache Tower - An efficient multi-layered caching system for .NET (In-Memory, Redis, Database, File etc)\n• FusionCache - An easy to use, high performance and robust cache with an optional distributed 2nd layer and some advanced features, like a fail-safe mechanism and advanced timeouts management\n• LazyCache - A simple, developer friendly, in-memory thread-safe caching service. It leverages Microsoft.Extensions.Caching and Lazy to provide performance and reliability in heavy load scenarios.\n• BitFaster.Caching - Thread-safe in-memory caches optimized for very high concurrent throughput, near optimal hit rate and low latency.\n• iCal.NET iCal.NET is an iCalendar (RFC 5545) class library for .NET aimed at providing RFC 5545 compliance, while providing full compatibility with popular calendaring applications and libraries.\n• Stream Official .NET API client for Stream Chat, a service for building chat applications.\n• Appccelerate - Command Line Parser - A command-line parser with fluent definition syntax, different argument types, required and optional arguments, value restrictions, aliases, type conversion and semi-automatic usage help message composition\n• Typin - Simple to use declarative framework for interactive CLI applications and command line tools (direct mode) that has its roots in CliFx.\n• clipr - A CLI library inspired by Python's argparse that transforms a command line into a strongly-typed object. It supports custom argument types, automated (and localized) help generation, and a variety of ways to store parsed arguments.\n• CommandDotNet - Model your console app using C# in a composable manner. Define commands with methods. Define subcommands with properties or nested classes. Extensible parsing and command execution.\n• Command Line Parser - The Command Line Parser Library offers to CLR applications a clean and concise API for manipulating command-line arguments and related tasks\n• CommandLineUtils - This is a fork of Microsoft.Extensions.CommandLineUtils, which is no longer under active development.\n• CsConsoleFormat - .NET C# library for advanced formatting of console output.\n• Docopt - Command-line interface description language that will make you smile.\n• Fluent Command Line Parser - A simple, strongly typed .NET C# command-line parser library using a fluent easy to use interface\n• JustCli - That’s just a quick way to create your own command line tool.\n• Power Args - PowerArgs converts command-line arguments into .NET objects that are easy to program against. It also provides a ton of optional capabilities such as argument validation, auto generated usage, tab completion, and plenty of extensibility\n• spectre.console - A library that makes it easier to create beautiful console applications.\n• Runtime - Mono and CoreCLR .NET runtimes, as well as the standard library and some higher level components like and .\n• Composite C1 - A web CMS that focus on UX and adaptability\n• mojoPortal - MojoPortal is an extensible, cross database, mobile friendly, web content management system (CMS) and web application framework written in C# ASP.NET\n• N2CMS - Open source, lightweight, code-first CMS able to seamlessly integrate into any MVC project.\n• Orchard - Free, open source, community-focused project aimed at delivering applications and reusable components on the ASP.NET platform\n• Piranha CMS - Piranha is the fun, fast and lightweight .NET framework for developing cms-based web applications with an extra bite. It's built on ASP.NET MVC and Web Pages and is fully compatible with both Visual Studio and WebMatrix. https://piranhacms.org\n• Umbraco - Umbraco is a free open source Content Management System built on the ASP.NET platform\n• DotNetNuke - DNN Platform is our free, open source web CMS and the foundation of every professional DNN solution. Over 750,000 organizations worldwide have built websites powered by the DNN Platform.\n• fluent-cms - RESTful CRUD (Create, Read, Update, Delete) APIs, Admin Panel web pages,a GraphQL-style query designer and a WYSIWYG web page designer, all fully configurable without writing code.\n• .NET Compiler Platform (\"Roslyn\") Analyzers - A number of Roslyn diagnostic analyzers initially developed to help flesh out the design and implementation of the static analysis APIs.\n• PVS-Studio - PVS-Studio is a static analyzer on guard of code quality, security (SAST), and code safety. [Free for OSS] [$]\n• NDepend - is a Visual Studio and VS Team Services extension that estimates your .NET code quality and Technical-Debt, that lets create code rules with C# LINQ syntax, visualize code structure and focus on changes and evolution. [$]\n• App.Metrics - App Metrics is an open-source and cross-platform .NET library used to record and report metrics within an application and reports it's health. See the docs for me details.\n• CodeMaid - Visual studio extension to cleanup, dig through and simplify C#, C++, F#, VB, PHP, JSON, XAML, XML, ASP, HTML, CSS, LESS, SCSS, JavaScript and TypeScript coding.\n• StyleCop - StyleCop analyzes C# source code to enforce a set of style and consistency rules\n• Gendarme - Extensible rule-based tool to find problems in .NET applications and libraries\n• Metrics-Net - Capturing CLR and application-level metrics. So you know what's going on.\n• Bencher - Suite of continuous benchmarking tools designed to catch performance regressions in CI.\n• Codinion - Enhanced syntax highlighting for C# and some other \"Visual\" features. [$]\n• NsDepCop - Static code analysis tool to enforce namespace dependency rules in C# projects.\n• WebBen - Is a tool for benchmarking your Hypertext Transfer Protocol (HTTP) server.\n• .NET Fiddle - Write, compile and run C#, F# and VB code in the browser. The .Net equivalent of JSFiddle.\n• Sharplab - Run C# code using different branches and versions of Roslyn, see the IL that was produced and examine the JIT's output.\n• Entity Framework Playground - Examine the generated SQL for migrations and queries by writing and queries using it in the browser. Learn by example, compare different versions of Entity Framework and providers such as MS SQL, PostgreSql and Sqlite.\n• ClojureCLR - A port of Clojure to the CLR, part of the Clojure project\n• F# - The F# compiler, core library and tools - a functional programming language for safer, faster, better code writing.\n• Mond - A dynamically typed scripting language written in C# with a REPL, debugger, and simple embedding API.\n• Nemerle - Nemerle is a high-level statically-typed programming language for the .NET platform. It offers functional, object-oriented and imperative features. It has a simple C#-like syntax and a powerful meta-programming system.\n• Netjs - .NET to TypeScript and JavaScript compiler. Portable Class Libraries work great for this. You can even pass EXEs.\n• PeachPie - PeachPie is a PHP compiler and runtime for .NET and .NET Core, which allows entire PHP applications to run on the modern, secure and performant .NET and .NET Core platforms.\n• Roslyn - The .NET Compiler Platform (\"Roslyn\") provides open-source C# and Visual Basic compilers with rich code analysis APIs. It enables building code analysis tools with the same APIs that are used by Visual Studio.\n• Testura.Code - Wrapper around the Roslyn API and used for generation, saving and compiling C# code. It provides methods and helpers to generate classes, methods, statements and expressions.\n• LinqOptimizer - An automatic query optimizer-compiler for Sequential and Parallel LINQ\n• Roslyn-linq-rewrite - Compiles C# code by first rewriting the syntax trees of LINQ expressions using plain procedural code, minimizing allocations and dynamic dispatch.\n• Iron python - A python 2 implementation that is integrated with the dot net framework.\n• Amplifier.NET - Write and compile your own kernel function using C# and Amplifier will take care of running it on your favorite hardware. Amplifier allows .NET developers to easily run complex applications with intensive mathematical computation on Intel CPU/GPU, NVIDIA, AMD without writing any additional C kernel code.\n• IKVM - A Java Virtual Machine and Bytecode-to-IL Converter for .NET. Execute compiled Java code (bytecode) on .NET Framework or .NET Core.\n• Lib.Harmony - Rewrite mono and C# methods at the runtime, Either write a method that will be executed, or edit the code of the method in IL, mainly used for game modding.\n• SharpCompress - SharpCompress is a compression library for .NET/Mono/Silverlight/WP7 that can unrar, un7zip, unzip, untar unbzip2 and ungzip with forward-only reading and file random access APIs. Write support for zip/tar/bzip2/gzip are implemented\n• DotNetZip.Semverd - An open-source project that delivers a .NET library for handling ZIP files, and some associated tools. (fork of Unmaintained DotNetZip)\n• SharpZipLib - a Zip, GZip, Tar and BZip2 library written entirely in C# for the .NET platform\n• Snappy for Windows - Snappy compression library for .NET baked on P/Invoke\n• Snappy.Sharp - An implementation of Google's Snappy compression algorithm in C#.\n• AgileConfig - AgileConfig is a lightweight configuration center that helps you manage all your application's configurations through website.\n• TeamCity - Ready to work, extensible and developer-friendly build server — out of the box [$]\n• MyGet - Continuous Integration and Deployment, Hosted Package Repository for NuGet, NPM, Bower and VSIX [$]\n• AppVeyor - .NET Continuous Integration and Deployment as a service. [$] [Free for OSS]\n• BouncyCastle - Together with the .Net System.Security.Cryptography, the reference implementation for cryptographic algorithms on the CLR.\n• HashLib - HashLib is a collection of nearly all hash algorithms you've ever seen, it supports almost everything and is very easy to use\n• NaCl.Core - A managed-only cryptography library for .NET which provides modern cryptographic primitives.\n• Pkcs11Interop - Managed .NET wrapper for unmanaged PKCS#11 libraries that provide access to the cryptographic hardware\n• Foundatio - Cloud Storage library with AWS, Azure and many other providers supported.\n• FluentStorage - A polycloud .NET cloud storage abstraction layer originally known as Storage.Net. Provides a generic interface for Blob storage (AWS S3, GCP, FTP, SFTP, Azure Blob/File/Event Hub/Data Lake) and Messaging (AWS SQS, Azure Queue/ServiceBus).\n• Stowage - Bloat-free zero dependency .NET cloud storage kit that supports at minimum THE major cloud providers.\n• Cloud Storage:- This library provides a universal interface for accessing and manipulating data in different cloud blob storage providers (Azure Storage, AWS S3, Google Cloud Storage. It makes it easy to switch between providers or to use multiple providers simultaneously, without having to learn and use multiple APIs.\n• RocksDB - C# binding for Facebook's RocksDB Key-Value store + native builds for Windows, macOS and Linux\n• Event Store - The open-source, functional database with Complex Event Processing in JavaScript\n• Marten - PostgreSQL as a document database and event store for .NET applications\n• StringDB - StringDB is a modular, key/value pair archival DB designed to consume tiny amounts of ram & produce tiny databases.\n• Ignite - Distributed in-memory platform: document database with SQL and LINQ support; distributed computations; distributed services and events.\n• JsonFlatFileDataStore - Simple JSON flat file data store with support for typed and dynamic data\n• RethinkDb.Driver - A RethinkDB database driver in C# striving for 100% ReQL API compatibility and completeness.\n• Couchbase - Official Couchbase .NET client library, based on the Enyim memcached client\n• Firebird.NET - The .NET Data provider is written in C# and provides a high-performance, native implementation of the Firebird API\n• NodaTime - Noda Time is an alternative date and time API for .NET. It helps you to think about your data more clearly, and express operations on that data more precisely. https://nodatime.org/\n• DateTimeExtensions - Common Date Time operations on the form of extensions to , including holidays and working days calculations on several culture locales.\n• ILSpy - ILSpy is the open-source .NET assembly browser and decompiler\n• dotPeek - Free-of-charge standalone tool based on ReSharper's bundled decompiler. It can reliably decompile any .NET assembly into equivalent C# or IL code. It can create Visual Studio solutions based on the original binary files in a straight-forward way. [Proprietary] [Free]\n• DbUp - .NET library that helps you to deploy changes to SQL Server databases. It tracks which SQL scripts have been run already, and runs the change scripts that are needed to get your database up to date\n• Octo Pack - Used to build NuGet packages of your application for deployment using tools such as Octopus Deploy\n• yuniql - Free and open source schema versioning and migration tool made with .NET Core. Run migrations with plain SQL, arrange versions in ordinary folders and seed your data from CSV via stand-alone CLI (no CLR needed), Azure Pipelines, Docker or ASP.NET Core code. https://yuniql.io\n• Sucrose Wallpaper Engine - Sucrose is a versatile wallpaper engine that brings life to your desktop with a wide range of interactive wallpapers.\n• .NEXT Raft - Raft implementation for .NET and ASP.NET Core that allows to build clustered microservices powered by distributed consensus and replication\n• Orleans - Orleans is a framework that provides a straight-forward approach to building distributed high-scale computing applications, without the need to learn and apply complex concurrency or other scaling patterns. It was created by Microsoft Research.\n• Orleankka - Orleankka is a functional API for Microsoft Orleans framework. It is highly suitable for scenarios where having composable, uniform communication interface is preferable, such as: CQRS, event-sourcing, re-routing, FSM, etc. Additional API available for F# called Orleankka.FSharp.\n• Akka.net - Akka.NET is a port of the popular Java/Scala framework Akka to .NET. This is a community-driven port and is not affiliated with Typesafe who makes the original Java/Scala version.\n• Zebus - Zebus is a lightweight, highly versatile, peer-to-peer service bus, built with CQRS principles in mind. It allows applications to communicate with each other in a fast and easy manner. Most of the complexity is hidden in the library and you can focus on writing code that matters to you, not debugging messaging code. A very fundamental base for any distributed application.\n• FsShelter - F# library for authoring Apache Storm components and topologies. Offering high-level abstractions for distributed and fault-tolerant event stream processing.\n• protoactor-dotnet - Proto Actor - Ultra fast distributed actors for Golang and C#\n• cmd - C# library to run external programs in a simpler way. Demonstration of \"dynamic\" features of C#.\n• F# Formatting - Tools for documenting F# and C# projects from F# script files, Markdown documents and inline XML or Markdown comments\n• DocFX - Tools for building and publishing API documentation for .NET projects\n• DocNet - Your friendly static documentation generator, using markdown files to build the content.\n• Virto Commerce - Virto Commerce is the second generation release and is the only enterprise level e-commerce product fully available under Open Source license. Virto Commerce is based on .NET 4.5 with extensive use of MVC, IoC, EF, Azure, AngularJS and many other cutting edge technologies. It can be deployed in Microsoft Cloud (Azure), Amazon Web Services (AWS) and on-premise. https://virtocommerce.com\n• SimplCommerce - Super simple ecommerce system built on .NET Core. Simple to use and easy to customize. Thanks to .NET Core, you can run the SimplCommerce on Windows, Linux. With various RDBMS: Microsoft SQL Server, PostgreSQL, MySQL\n• GrandNode - Headless, multi-vendor, multi-tenant, the most advanced open source e-commerce platform based on .NET Core 5.0 and MongoDB.\n• Adyen - The official Adyen Payment API Library for .NET\n• Blzhawk - BizHawk is a multi-system emulator written in C#. BizHawk provides nice features for casual gamers such as full screen, and joypad support in addition to full rerecording and debugging tools for all system cores.\n• Reactive ETL - Reactive ETL is a rewrite of Rhino ETL using the reactive extensions for .NET\n• Mediator.Net - A simple mediator for .NET for sending command, publishing event and request response with pipelines supported\n• Xer.Cqrs - A simple library for creating applications based on the CQRS pattern with support for attribute routing and hosted handlers. Developed in C# targeting .NET Standard 1.0.\n• FluentMediator - FluentMediator is an unobtrusive library that allows developers to build custom pipelines for Commands, Queries and Events\n• EventFlow - EventFlow is an Async/await first CQRS and Event Sourcing DDD framework for .NET\n• Microsoft.FeatureManagement - This library provides a way to develop and expose application functionality based on feature flags. It enables scenarios like new feature rollouts and A/B testing for experimentation purposes. It also provides integration with common .NET coding patterns and ASP.NET Core.\n• Curryfy - Provides strongly typed extensions methods for C# delegates to take advantages of functional programming techniques, like currying and partial application.\n• language-ext - This library uses and abuses the features of C# 6+ to provide a functional 'Base class library', that, if you squint, can look like extensions to the language itself. It also includes an 'Erlang like' process system (actors) that can optionally persist messages and state to Redis (note you can use it without Redis for in-app messaging). The process system additionally supports Rx streams of messages and state allowing for a complete system of reactive events and message dispatch.\n• JFlepp.Maybe - A Maybe type for C#, aimed as an idiomatic port of the option type in F# to C#\n• Optuple - .NET Standard Library for giving Option-like semantics in a non-obtrusive way; this is, there is no new option type dependency for a library or its users.\n• MoreLinq - Provides extra methods to LINQ to Objects.\n• FNA - FNA is an XNA4 reimplementation that focuses solely on developing a fully accurate XNA4 runtime for the desktop\n• CocosSharp - CocosSharp is a C# implementation of the Cocos2D and Cocos3D APIs that runs on any platform where MonoGame runs\n• Duality - Duality is a 2D game development framework. Focused on modularity, comes with a visual editor.\n• Stride Game Engine - Stride Game Engine is a 2D/3D cross-platform game engine featuring a scene editor, particles, physically based rendering (PBR), scripting, and much more\n• Wave Engine - Wave engine is a free C# component-based modern game engine which allows you to create cross-platform games supporting Kinect, Oculus Rift, Vuforia, Cardboard, Leap Motion and much more. [Free][Proprietary]\n• UrhoSharp - UrhoSharp is a C# implementation of the Urho3D game engine that runs on iOS, Mac, Windows, Android and Linux systems\n• Nez - Nez is a free 2D-focused framework that works with MonoGame and FNA\n• DotRecast - A port of Recast & Detour, navigation mesh toolset for games, Unity3D, servers, C#\n• Foster - Foster is a small cross-platform 2D game framework in C#.\n• NetTopologySuite A .NET GIS solution that is fast and reliable for the .NET platform\n• SharpMap An easy-to-use mapping library for use in web and desktop applications\n• OsmSharp - C# library to work with OpenStreetMap (OSM) data. Provides reading, writing and route-planning for OSM data.\n• GeoJSON4EntityFramework - A library to create GeoJSON from Entity Framework Spatial Data or Well-Known Text (WKT) inputs.\n• DEM Net Elevation API - .Net library for Digital Elevation Models, allows 3D terrain generation in glTF / STL format.\n• Husky.Net - Git hooks made easy with Husky.Net internal task runner, You can use it to lint your commit messages, run tests, lint code, etc... when you commit or push. supports C# scripts, gitflow hooks, Multiple file states (staged, lastCommit, glob)\n• Bonobo Git Server - Bonobo Git Server for Windows is a web application you can install on your IIS and easily manage and connect to your Git repositories. https://bonobogitserver.com/\n• GitLink - let's users step through their code hosted on GitHub or BitBucket\n• GitVersion - Generate a Semantic Version Number based on the state of your Git repository\n• LibGit2Sharp - LibGit2Sharp brings all the might and speed of libgit2, a native Git implementation, to the managed world of .NET and Mono.\n• GitRead.Net - GitRead.Net is a .NET Standard library which allows you to very easily interrogate a Git repository that you have on disk. It allows you to enumerate the commit log, count lines per file and list files changed by a commit.\n• NGit - NGit is a port of JGit to C#\n• Git Credential Manager for Windows - Helps solving issues of credentials, made by Microsoft\n• OpenTK - The Open Toolkit is an advanced, low-level C# library that wraps OpenGL, OpenCL and OpenAL\n• NGraphics - NGraphics is a cross-platform library for rendering vector graphics on .NET\n• Aspose.Drawing - Fully managed, cross-platform, complete 2D graphic library for drawing text, geometries, and images, with System.Drawing compatible API. [$]\n• ScottPlot - A plotting library to interactively displays large datasets. Line plots, bar charts, pie graphs, scatter plots, and more. It supports WinForms, WPF, Avalonia, Console.\n• Helix Toolkit - Helix Toolkit is a collection of 3D components for .NET\n• AssimpNet - A cross-platform .NET Standard wrapper for the Open Asset Importer (\"Assimp\"). The library enables importing, processing, and exporting of 3D models for rendering in graphics/game applications. Over 40 formats are supported for importing (e.g. OBJ, FBX, GLTF, 3DS, Collada) and a subset of those formats can be exported to (e.g. OBJ, GLTF, 3DS, Collada). Mesh processing features allow for mesh data to be generated or optimized for real-time rendering.\n• Silk.NET - A cross-platform, high-performance, low-level .NET Standard wrapper for many advanced APIs such as OpenGL, OpenCL, OpenAL, OpenXR, Assimp, GLFW, as well as many others. In addition to wrapping over Native APIs, it also comes with its own Windowing and Input abstraction. This makes game and application development with Silk.NET a breeze, and has pretty much everything a 3D application developer would need.\n• RealTimeGraphX - RealTimeGraphX is a data type agnostic, high performance plotting library for WPF, UWP and soon, Xamarin Forms.\n• VectSharp - .NET library to create vector graphics and text, and then export it to PDF, SVG and raster image formats.\n• HotChocolate - GraphQL server compatible to all GraphQL compliant clients like Strawberry Shake, Relay, Apollo Client, and various other clients and tools.\n• EntityGraphQL - library to build a GraphQL API on top of data model with the extensibility to easily bring multiple data sources together in the single GraphQL schema (EF is not a requirement - any ORM working with LinqProvider or an in-memory object will work).\n• ZeroQL - high-performance C#-friendly GraphQL client. It supports Linq-like syntax. It doesn't require Reflection.Emit or expressions. As a result, the runtime provides performance very close to a raw HTTP call.\n• HandyControl - Contains some simple and commonly used WPF controls\n• Lara - Lara Web Engine is a library for developing Web user interfaces in C#\n• Callisto - A control toolkit for Windows 8 XAML applications. Contains some UI controls to make it easier to create Windows UI style apps for the Windows Store in accordance with Windows UI guidelines.\n• ObjectListView - ObjectListView is a C# wrapper around a .NET ListView. It makes the ListView much easier to use and teaches it some new tricks\n• AvalonEdit - The WPF-based text editor component used in SharpDevelop\n• XWT - A cross-platform UI toolkit for creating desktop applications with .NET and Mono\n• Gtk# - Gtk# is a Mono/.NET binding to the cross platform Gtk+ GUI toolkit and the foundation of most GUI apps built with Mono\n• Eto.Forms - Cross-platform GUI framework for desktop and mobile applications in .NET and Mono\n• Dragablz - Dragable, tearable WPF tab control (similar to Chrome) which supports layouts and is full themeable, including themese compatible with MahApps and Material Design.\n• Fluent.Ribbon - Fluent Ribbon Control Suite is a library that implements an Office- and Windows 8-like Ribbon for WPF.\n• MaterialSkin - Theming .NET WinForms, C# or VB.Net, to Google's Material Design principles.\n• Xamarin.Forms - Build native UIs for iOS, Android and Windows from a single, shared C# codebase.\n• SciterSharp - Create .NET cross-platform desktop apps using not just HTML, but all features of Sciter engine: CSS3, SVG, scripting, AJAX, <video>... Sciter is free for commercial use\n• UWP Community Toolkit - The UWP Community Toolkit is a collection of helper functions, custom controls, and app services. It simplifies and demonstrates common developer tasks building UWP apps for Windows 10.\n• ScintillaNET - Windows Forms control for the Scintilla text editor component (Scintilla is used by Notepad++)\n• FastColoredTextBox - Fast Colored TextBox is text editor component for .NET. Allows you to create custom text editor with syntax highlighting. It works well with small, medium, large and very-very large files.\n• Avalonia - A multi-platform .NET UI framework (formerly known as Perspex).\n• Modern UI for WPF - MUI - Set of controls and styles to convert WPF applications into a great looking Modern UI apps.\n• WinApi - A simple, direct, ultra-thin CLR library for high-performance Win32 Native Interop with automation, windowing, DirectX, OpenGL and Skia helpers.\n• Neutronium - Build .NET desktop applications using HTML, CSS, javascript and MVVM bindings such as with WPF.\n• Ooui - A small cross-platform UI library that brings the simplicity of native UI development to the web\n• Windows UI Library - The Windows UI Library (WinUI) provides official native Microsoft UI controls and features for Windows UWP apps.\n• Ookii.Dialogs.Wpf - Enable WPF applications to access common Windows dialogs such as task dialogs, credential dialog, progress dialog, folder browser dialog, and more\n• Ookii.Dialogs.WinForms - Enable Windows Forms applications to access common Windows dialogs such as task dialogs, credential dialog, progress dialog, folder browser dialog, and more\n• UNO Platform - The only platform for building native mobile, desktop and WebAssembly with C#, XAML from a single codebase. Open source and professionally supported. Website: platform.uno\n• dotless - .NET port of the Ruby Less CSS lib http://www.dotlesscss.org\n• HtmlAgilityPack - an agile HTML parser that builds a read/write DOM and supports plain XPath or XSLT\n• LibSass Host - .NET wrapper around the libSass library with the ability to support a virtual file system\n• LtGt - lightweight HTML processor, can be used to parse and navigate DOM, handles CSS selectors, can convert to Linq2Xml, easily extensible, and more.\n• Refit - The automatic type-safe REST library for Xamarin and .NET\n• RestEase - Easy-to-use typesafe REST API client library, which is simple and customisable. Heavily inspired by Refit\n• WebApiClient An open source project based on the HttpClient. You only need to define the c# interface and modify the related features to invoke the client library of the remote http interface asynchronously.\n• Fluxzy.Core - A fully managed and fully streamed Man-On-The-Middle library to intercept, record and alter HTTP/1.1, H2, websocket traffic over plain or secure channels.\n• AvalonStudio - An extensible, cross platform IDE written in C# for Embedded C/C++, .NET Core, Avalonia and Typescript\n• MonoDevelop - MonoDevelop is a cross-platform IDE mostly aimed at Mono/.NET developers\n• Visual Studio Express - The free lightweight version of Visual Studio for .NET programming.\n• Waf DotNetPad - A simple and fast code editor that makes fun program with C# or Visual Basic.\n• Ionide - An Atom Editor and Visual Studio Code package suite for cross platform F# development.\n• Rider - A cross-platform C# IDE based on the IntelliJ platform and ReSharper\n• RoslynPad - A simple C# editor based on Roslyn and AvalonEdit.\n• Consulo - A cross-platform IDE with C# & Java support, fork of IntelliJ IDEA Community Edition\n• \n• CSharp Analyzer by MongoDB A free Visual Studio Extension for MongoDB users, helping translate your code into MongoDB queries\n• ImageResizer - Add commands to image URLs to get altered versions in milliseconds. Resizing, editing etc of images in real-time.\n• MetadataExtractor - Extracts Exif, IPTC, XMP, ICC and other metadata from image files.\n• SimpleITK - A simplified path to Insight. Open-source multi-dimensional image analysis in Python, R, Java, C#, Lua, Ruby, TCL and C++. Developed by the Insight Toolkit community for the biomedical sciences and beyond.\n• PixelViewer - Cross-platform (Windows/macOS/Linux) image viewer which supports reading raw Luminance/YUV/RGB/ARGB/Bayer pixels data from file and rendering it. 10/16-bit YUV and viewing image frame sequence are also supported (v1.99+).\n• TeximpNet - A cross-platform .NET Standard library for reading/manipulating/writing image files. The primary focus is to create 2D/3D/Cubemap textures for graphics/game applications, notably to convert images to GPU compressed formats and generate mipmaps. The library wraps the FreeImage native library to import/export over 30 common image formats, and wraps the Nvidia Texture Tools native library for GPU compression features. It also has a fully featured DDS format importer/exporter written in C#.\n• Imgix-CSharp - Easily update image urls to be fast and responsive. [$]\n• ColorHelper - Useful methods for work with colors.\n• Wix Toolset - The most powerful set of tools available to create your Windows installation experience\n• Squirrel - Squirrel is both a set of tools and a library, to completely manage both installation and updating your desktop Windows application.\n• Chocolatey - like or , but for Windows.\n• .NET Interactive - .NET Interactive takes the power of .NET and embeds it into your interactive experiences.\n• ResX Resource Manager - The most popular free tool to localize all kind of applications with resx-based resources.\n• CppSharp - Tools to surface C++ APIs to C#\n• Sharpen - Sharpen is an Eclipse plugin created by db4o that allows you to convert your Java project into C#\n• PInvoke Interop Assistant - Converts C to managed P/Invoke signatures or verse visa.\n• LegacyWrapper - LegacyWrapper uses a wrapper process to call DLLs from a process of the opposing architecture (x86 or AMD64).\n• Pyrolite - This library allows your Java or .NET program to interface very easily with the Python world. It uses the Pyro protocol to call methods on remote objects.\n• Castle Windsor - Castle Windsor is best of breed, mature Inversion of Control container available for .NET and Silverlight\n• Unity - Lightweight extensible dependency injection container with support for constructor, property, and method call injection\n• Spring.Net - Spring.NET is an open source application framework that makes building enterprise .NET applications easier\n• Lamar - A fast IoC container heavily optimized for usage within ASP.NET Core and other .NET server side applications.\n• Simple Injector - Simple Injector is an easy-to-use Dependency Injection (DI) library for .NET 4+ that supports Silverlight 4+, Windows Phone 8, Windows 8 including Universal apps and Mono.\n• VS MEF - Managed Extensibility Framework (MEF) implementation used by Visual Studio.\n• TinyIoC - An easy to use, hassle free, Inversion of Control Container for small projects, libraries and beginners alike.\n• ClearScript - A library that makes it easy to add scripting to your .NET applications. It currently supports JavaScript (via V8 and JScript) and VBScript.\n• Edge.js - Run .NET and Node.js code in-process on Windows, macOS, and Linux\n• Jint - JavaScript interpreter for .NET which provides full ECMA 5.1 compliance and can run on any .NET platform.\n• Jurassic - A implementation of the ECMAScript language and runtime. It aims to provide the best performing and most standards-compliant implementation of JavaScript for .NET.\n• YantraJS - JavaScript Runtime (Similar to NodeJS) for .NET Standard, compiles JavaScript to IL, support for many ES6 features, generators, CommonJS modules, CSX modules and expression compiler.\n• Essential Diagnostics - Extends the inbuilt features of System.Diagnostics namespace to provide flexible logging\n• Logary - Logary is a high performance, multi-target logging, metric, tracing and health-check library for Mono and .NET. .NET's answer to DropWizard. Supports many targets, built for micro-services.\n• Log4Net - The Apache log4net library is a tool to help the programmer output log statements to a variety of output targets\n• Rollbar.NET - Simplifies real-time remote error monitoring while using Rollbar.com. Open-source Rollbar Notifier SDK for any .NET-based technology stack. The SDK that can be used in any application built on the following .NET versions: .NET Core 2.0+, .NET Standard 2.0+, .NET Full Framework 4.5.1+, Mono, Xamarin, and, in general, any implementation of the .NET Standard 2.0+. It simplifies building data payloads based on exception data, tracing data, informational messages, and telemetry data and sends the payloads to the Rollbar API for remote monitoring and analysis of the hosting application's behavior.\n• Sejil - Capture, view and filter your ASP.NET Core app's logs right from your app. It supports structured logging, querying as well as saving log queries.\n• Sentry - .NET SDK for Sentry Open-source error tracking that helps developers monitor and fix crashes in real time..\n• Serilog - A no-nonsense logging library for the NoSQL era. Combines the best of traditional and structured diagnostic logging in an easy-to-use package.\n• StackExchange.Exceptional - Error handler used for the Stack Exchange network\n• Semantic Logging Application Block (SLAB) - Extends the inbuilt features of System.Diagnostics.Tracing namespace (EventSource class) to log to several sinks including Azure Tables, Databases, files (JSON, XML, text). Supports in-process and out-of-process logging through ETW, and Rx for real-time filtering/aggregating of events.\n• ULogViewer - Cross-Platform (Windows/macOS/Linux) Universal Log Viewer which supports reading and parsing various type of logs. You can also define your own profile to parse and show logs.\n• Foundatio - A fluent logging API that can be used to log messages throughout your application.\n• elmah.io - Cloud logging for .NET web applications using ELMAH. Find bugs before you go live. Powerful search, API, integration with Slack, GitHub, Visual Studio and more. [Free for OSS] [$]\n• BugSnag - Logs errors. Includes useful diagnostic info like stack trace, session, release, etc. Has a free tier. [Free for OSS][$]\n• ZeroLog - ZeroLog is a zero-allocation .NET logging library. It provides basic logging capabilities to be used in latency-sensitive applications, where garbage collections are undesirable.\n• AutoLoggerMessage - A source generator that automatically migrates all logging calls to high-performant version.\n• Infer.NET - A framework for running Bayesian inference in graphical models. It can also be used for probabilistic programming.\n• Accord.NET - Machine learning framework combined with audio and image processing libraries (computer vision, computer audition, signal processing and statistics).\n• AForge.NET - Framework for developers and researchers in the fields of Computer Vision and Artificial Intelligence (image processing, neural networks, genetic algorithms, machine learning, robotics).\n• Catalyst Cross-platform Natural Language Processing (NLP) library inspired by spaCy, with pre-trained models, out-of-the box support for training word and document embeddings, and flexible entity recognition models. Part of the SciSharp Stack\n• Deedle - Data frame and (time) series library for exploratory data manipulation with C# and F# support\n• FsLab - A collection of data science and machine learning libraries for F# and .NET\n• GeneticSharp - Multi-platform genetic algorithm library for .NET Core and .NET Framework. The library has several implementations of GA operators, like: selection, crossover, mutation, reinsertion and termination.\n• numl - Designed to include the most popular supervised and unsupervised learning algorithms while minimizing the friction involved with creating the predictive models.\n• R Provider - Type provider that exposes R packages and functions in a type-safe way to F# callers\n• F# Data - F# type providers for accessing XML, JSON, CSV and HTML files (based on sample documents) and for accessing WorldBank data\n• Spreads - Series and Panels for Real-time and Exploratory Analysis of Data Streams. Spreads library is optimized for performance and memory usage. It is several times faster than other open source projects.\n• SciSharp STACK - A rich machine learning ecosystem for .NET created by porting the most popular Python libraries to C#.\n• m2cgen - A CLI tool to transpile trained classic ML models into a native .NET (C#, F# or Visual Basic) code with zero dependencies.\n• MarkdownSharp - Open source C# implementation of Markdown processor, as featured on Stack Overflow.\n• F# Formatting - Tools for documenting F# and C# projects. The library contains extensible Markdown parser as a core component.\n• MailKit - A complete cross-platform mail stack including IMAP, POP3, SMTP, authentication and more. Built on top of MimeKit.\n• MailKitSimplified - A fully-featured fluent wrapper for MailKit that makes sending and receiving emails as simple as possible.\n• MimeKit - A cross-platform .NET MIME creation and parser library with support for S/MIME, PGP, TNEF and Unix mbox spools.\n• PreMailer.Net - C# library that moves your stylesheets to inline style attributes, for maximum compatibility with e-mail clients.\n• StrongGrid - Client for SendGrid's v3 API. Not only allows you to send emails, but also allows you to bulk import contacts, manage lists and segments, create custom fields for your lists, etc. Also includes a parser for SendGrid Webhooks.\n• MathNet - Math.NET is an open source initiative to build and maintain toolkits covering fundamental mathematics, targeting advanced but also every day needs of .NET developers\n• Microsoft Automatic Graph Layout - A set of tools for graph layout and viewing.\n• ALGLIB - ALGLIB is a cross-platform numerical analysis and data processing library. It supports several programming languages (C++, C#, Delphi) and several operating systems (Windows and POSIX, including Linux) [Proprietary] and [Free Edition]\n• AutoDiff - AutoDiff is a library for quickly computing gradients of functions defined by expressions. Mainly useful in numerical optimization\n• Rationals - Implementation of rational number arithmetic for .NET with arbitrary precision.\n• AngouriMath - An open-source symbolic/computer algebra library, made primarily for C# and F#. It covers a range of features and might be considered as an alternative to SymPy in .NET.\n• Vim.Math3d - A feature-rich cross-platform replacement for System.Numerics with support for consistent serialization and binary layout, and additional structures and algorithms for efficient 3D Math.\n• WPF-Math - a .NET library for rendering mathematical formulae using the LaTeX typesetting style, for the WPF framework\n• Jodo.Numerics - Provides extra number types (such as fixed-point and non-overflowing numbers) with full support for operators, math, string-parsing etc. Extensively tested, and cross-platform compatible.\n• CSCore - An advanced audio library, supporting playback/recording, decoding/encoding and processing of audio data in realtime (effects, visualizations, ...).\n• TagLib# - TagLib# (aka taglib-sharp) is a library for reading and writing metadata in media files, including video, audio, and photo formats\n• LibVLCSharp - Xamarin bindings for libvlc, the multimedia framework powering the VLC applications made by VideoLAN.\n• NAudio - Playback, decode and encode audio in a variety of file formats such as MP3, MP4, WAV, AIFF, Speex, etc.\n• Xabe.FFmpeg - .NET Standard wrapper for FFmpeg. It allows to process media without know how FFmpeg works, and can be used to pass customized arguments to FFmpeg from C# application. [$]\n• SeeShark - Cross-platform camera library for .NET using FFmpeg supporting over 190 pixel formats\n• C# StatsD Client - C# client for Etsy's StatsD\n• .NET Micro Framework Interpreter - Microsoft® .NET Micro Framework (NETMF) for developing embedded applications on small devices using Visual Studio\n• Microsoft Ajax Minifier - Contains JS and CSS minifiers which have a highest performance, because its have been specifically designed for .NET. Optionally produce Source Maps for JS code.\n• Web Markup Minifier - .NET library that contains a set of markup minifiers. The objective of this project is to improve the performance of web applications by reducing the size of HTML, XHTML and XML code.\n• CompressedStaticFiles - Send compressed static files to the browser without having to compress on demand, also has support for sending more advanced image formats when the browser indicates that i has support for it.\n• AzureCrawler - Take HTML Snapshots for your Angular, Ember, Durandal or any JavaScript applications\n• CSScript - CS-Script is a CLR based scripting system which uses C# as a programming language. CS-Script currently targets Microsoft implementation of CLR (.NET 2.0/3.0/3.5/4.0/4.5) with full support on Mono. Comes with many additional features, such as script hosting.\n• CsvHelper - Library to help reading and writing CSV files https://github.com/JoshClose/CsvHelper\n• RecordParser - Library to help reading and writing CSV and Flat files with zero heap allocation.\n• Hashids.net - Generate short unique ids from integers, as per https://hashids.org\n• FlatMapper - A library to import and export data from and to plain text files in a LINQ-compatible way.\n• FluentValidation - A small validation library for .NET that uses a fluent interface and lambda expressions for building validation rules.\n• FormHelper - Form & Validation Helper for ASP.NET Core. Form Helper helps you to create ajax forms and validations without writing any javascript code. (Compatible with Fluent Validation)\n• Validot - Validot is a performance-first, compact library for advanced model validation. Using a simple declarative fluent interface, it efficiently handles classes, structs, nested members, collections, nullables, plus any relation or combination of them. It also supports translations, custom logic extensions with tests, and DI containers.\n• Humanizer - Humanizer meets all your .NET needs for manipulating and displaying strings, enums, dates, times, timespans, numbers and quantities\n• LINQPad - a C#/VB/F# scratchpad that instantly executes any expression, statement block or program with rich output formatting and a wealth of features. Also lets you interactively query databases in LINQ. [$]\n• Polly - Express transient-exception-handling and resilience policies such as Retry, Wait-and-Retry, Circuit Breaker, and Bulkhead Isolation in a fluent manner. Fully thread-safe and full async support. (4.0 / 4.5 / .NET Core / .NET Standard / Xamarin).\n• ScriptCS - Write C# apps with a text editor, NuGet and the power of Roslyn!\n• MSBuild ILMerge task - MSBuild ILMerge task is a NuGet package allows you to use the famous ILMerge utility in automated builds and/or Visual Studio projects.\n• ReactJS.NET - ReactJS.NET is a library that makes it easier to use Babel along with Facebook's React and JSX from C#.\n• Streams - A lightweight F#/C# library for efficient functional-style pipelines on streams of data.\n• Warden - Define \"health checks\" for your applications, resources and infrastructure. Keep your Warden on the watch\n• ByteSize - ByteSize is a utility class that makes byte size representation in code easier by removing ambiguity of the value being represented. ByteSize is to bytes what System.TimeSpan is to time.\n• Jot - a library for persisting and restoring application state (a better alternative to .settings files).\n• HidLibrary - This library enables you to enumerate and communicate with Hid compatible USB devices in .NET.\n• SystemWrapper - SystemWrapper is .NET library for easier testing of system APIs.\n• YoutubeExplode - Ultimate library for extracting metadata and downloading Youtube videos and playlists.\n• DeviceId - Generate a 'device ID' that can be used to uniquely identify a computer.\n• DeviceDetector.NET - The Universal Device Detection library will parse any User Agent and detect the browser, operating system, device used (desktop, tablet, mobile, tv, cars, console, etc.), brand and model.\n• NaturalSort.Extension - Extension method for StringComparer that adds support for natural sorting (e.g. \"abc1\", \"abc2\", \"abc10\" instead of \"abc1\", \"abc10\", \"abc2\").\n• Coravel Near-zero config .NET Core library that makes Task Scheduling, Caching, Queuing, Mailing, Event Broadcasting (and more) a breeze!\n• Quickenshtein - An extremely quick and memory efficient Levenshtein Distance calculator with SIMD and Threading support\n• SystemTextJson.JsonDiffPatch - High-performance, low-allocating JSON object diff and patch extension for System.Text.Json. Support generating patch document in RFC 6902 JSON Patch format.\n• dotnet-exec - A command-line tool for executing C# program without a project file, and you can have your custom entry point other than Main method.\n• HiveMQtt - The HiveMQ C# MQTT client for .NET\n• MQTTNet - A high performance .NET library for MQTT based communication. It provides a MQTT client and a MQTT server (broker).\n• Community Toolkit - Collection of control & helper libraries and samples for various .NET technologies. Contains modern MVVM library, supported by Microsoft. Includes Windows Community Toolkit, MAUI Community Toolkit, and Dotnet Community Toolkit.\n• Caliburn.Micro - A small, yet powerful framework, designed for building applications across all XAML platforms. Its strong support for MV* patterns will enable you to build your solution quickly, without the need to sacrifice code quality or testability.\n• MVVM Light Toolkit - The main purpose of the toolkit is to accelerate the creation and development of MVVM applications in WPF, Silverlight, Windows Store (RT) and for Windows Phone\n• Catel - Catel is an application development platform with the focus on MVVM (WPF, Silverlight, Windows Phone and WinRT) and MVC (ASP.NET MVC). The core of Catel contains an IoC container, models, validation, memento, message mediator, argument checking, etc.\n• UpdateControls - Update Controls does not require that you implement or declare a . It connects controls directly to CLR properties. This makes it perfect for the Model/View/ViewModel pattern.\n• ReactiveUI - An MVVM framework for .NET that integrates the Reactive Extensions (Rx) framework, enabling developers to build elegant, testable applications using WPF, Windows Store Apps, WP8 or Xamarin.\n• Okra App Framework - An app centric MVVM framework for Windows 8.1 built with dependency injection in mind, including a full set of Visual Studio MVVM templates.\n• Win Application Framework (WAF) - A lightweight Framework that helps you to create well structured WPF and UWP Applications. It supports you in applying a Layered Architecture and the Model-View-ViewModel pattern.\n• MVVMCross - Cross-platform mvvm mobile development framework for WPF, Silverlight for WP7 and WP8, Mono for Android, MonoTouch for iOS, Windows Universal projects (WPA8.1 and Windows 8.1 Store apps). Makes extensive use of Portable Class Libraries (PCL) to provide maintainable cross platform C# native applications.\n• Stylet - Minimal MVVM framework inspired by Caliburn Micro, with good documentation, high test coverage, and its own IoC container\n• Gemini - IDE framework similar in concept to the Visual Studio Shell. Built on WPF, AvalonDock, and Caliburn Micro.\n• Toms Toolbox - Visual Composition framework to easily build modularized MVVM applications based on the Managed Extensibility Framework (MEF).\n• MVVM Dialogs - Framework simplifying the concept of opening dialogs from a view model when using MVVM in WPF or UWP.\n• Smaragd - A platform-independent, lightweight library for developing .NET applications using the MVVM architecture.\n• NetCoreServer - Ultra fast and low latency asynchronous socket server & client C# .NET Core library with support TCP, SSL, UDP, HTTP, HTTPS, WebSocket protocols and 10K connections problem solution (NETStandard).\n• SharpPcap - Fully managed, cross platform (Windows, Mac, Linux) .NET library for capturing packets from live and file based devices.\n• ExpressMapper - A lightweight, lighting fast .NET mapper to map one type of object(s) to another in automated and easy way. ExpressMapper relies completely on the expression trees.\n• ExcelDna - ExcelDna makes it easier to create and deploy Excel Add-Ins using C#, F# or VB .NET\n• ClosedXML - ClosedXML makes it easier for developers to create Excel 2007/2010 files\n• OfficeIMO - OfficeIMO makes it easier for developers to create/modify Word (docx) files without having Microsoft Word or Office installed\n• NPOI - This project is the .NET version of POI Java project at https://poi.apache.org/.\n• EPPlus - EPPlus is a .NET library that reads and writes Excel 2007/2010 files using the Open Office XML format (xlsx).\n• Open XML SDK - The Open XML SDK provides open-source libraries for working with Open XML Documents (DOCX, XLSX, and PPTX).\n• DocX - DocX is a .NET library that allows developers to manipulate Word 2007/2010/2013 files, it does not require Microsoft Word or Office to be installed.\n• ExcelDataReader - Lightweight and fast library written in C# for reading Microsoft Excel files (2.0-2007).\n• GemBox.Bundle - A package of .NET components that enable fast, simple and efficient processing of office files (Excel, Word, PowerPoint, PDF and emails). [$]****[Free Lite versions]\n• Outlook Redemption - Library to work with the Outlook Object Model and (Extended) MAPI. Supports Outlook 98 - 2019. Work with objects/mails/accounts/folders in Exchange and Outlook. [$]\n• ShapeCrawler - A fluent API for the processing of PowerPoint presentations without Microsoft Office installed.\n• Syncfusion .NET Word Framework - A high-performance .NET Word framework without Microsoft Office or interop dependencies. Create, read, and edit Word documents seamlessly. Utilize advanced editor components for easy viewing, editing, and printing. Effortlessly convert Word documents to PDF, HTML, RTF, ODT, and EPUB formats with powerful conversion APIs. [$] [Free for Individuals and Small Businesses]\n• Syncfusion .NET Excel Framework - A high-performance .NET Excel framework without Microsoft Office or interop dependencies. Create, read, and edit Excel documents seamlessly. Utilize Spreadsheet controls for creating, editing, and viewing easily. Effortlessly convert Excel files to PDF, images, and more with powerful conversion APIs. [$] [Free for Individuals and Small Businesses]\n• Syncfusion .NET PowerPoint Framework - A high-performance .NET PowerPoint framework without Microsoft Office or interop dependencies. Create, read, and edit PowerPoint files seamlessly. Effortlessly convert PowerPoint files to PDFs and images with powerful conversion APIs. [$] [Free for Individuals and Small Businesses]\n• Cledev.OpenAI - .NET SDK for OpenAI which includes ChatGPT, DALL-E and Whisper APIs and a Blazor Server playground.\n• Entity Framework 6 - Object-relational mapper that enables .NET developers to work with relational data using domain-specific objects\n• Entity Framework Core - Object-relational mapper that enables .NET developers to work with relational data using domain-specific objects\n• EntityFramework.Exceptions - Use typed Exceptions for Entity Framework Core when your SQL query violates database constraints in SqlServer, MySql, PostgreSQL or SQLite\n• EntityFrameworkCore.SqlServer.SimpleBulks - Simple library that can help to sync a large number of records in-memory into the database. Lambda Expression is supported.\n• EFCore.BulkExtensions - Entity Framework Core Bulk Extensions for super fast (BulkCopy) CRUD ops + SaveChanges on multiple DBs: SQL, PG, My, Lite.\n• Dapper Extensions - Small library that complements Dapper by adding basic CRUD operations (Get, Insert, Update, Delete) for your POCOs\n• Massive - A small, happy, data access tool that will love you forever.\n• LINQ to DB - The fastest LINQ database access library offering a simple, light, fast, and type-safe layer between your POCO objects and your database.\n• MicroLite ORM MicroLite ORM is a micro Object Relational Mapper for the .NET framework. It is designed to be easy to use, extensible and testable.\n• NPoco - Simple microORM that maps the results of a query onto a POCO object. Based on Schotime's branch of PetaPoco\n• Limebean - Hybrid ORM which uses SQL fragments and doesn't require Model Classes.\n• LLBLGen Pro - Entity Modeling solution for Entity Framework, NHibernate, Linq to SQL and its own ORM framework: LLBLGen Pro Runtime Framework. [$][Free Lite version]\n• DbExtensions - Data-access framework with a strong focus on query composition, granularity and code aesthetics.\n• Friflo.Json.Fliox - High performane ORM for Sqlite, MySql, SqlServer, PostgreSQL & NoSQL. Provides server with REST, GraphQL & WebSocket / PubSub API.\n• Cloudsmith - A fully managed package management SaaS, with support for NuGet, Npm, Docker and much more. [Free for Public/OSS] [$]\n• MyGet - Hosted Package Repository for NuGet, NPM, Bower and VSIX. Also provides CI as-a-Service. [$]\n• Paket - A package dependency manager for .NET with support for NuGet packages and GitHub repositories. https://fsprojects.github.io/Paket/\n• Sleet - A NuGet v3 static feed generator with support for AWS S3 and Azure Storage\n• QPdfSharp - A C# wrapper written around QPdf to allow for easy PDF manipulation that is tested for both linux and windows. QPdf is one of the only libraries capable of PDF linearization, and this wrapper ensures you keep up to date with the underlying improvements.\n• Cloudmersive PDF - Cloudmersive PDF is a native .NET Framework and .NET Core NuGet library and API service that can create, modify, encrypt or convert PDF documents at high scale and fidelity; and is free to use with no expiration [Free]\n• Docotic.Pdf - PDF library to create, read, edit, draw, and print PDF documents in .NET and .NET Core applications. 100% managed, without unsafe blocks. [$] [Free for OSS]\n• ITextSharp - iText is a PDF library that allows you to CREATE, ADAPT, INSPECT and MAINTAIN documents in the Portable Document Format (PDF)[$] [Free for OSS]\n• PdfiumViewer - PdfiumViewer is a PDF viewer based on the PDFium project.\n• WkhtmlToPdf - C# wrapper around wkhtmltopdf console utility. Allow to generate preety PDF using HTML and CSS.\n• Pdfium.Net SDK - Advanced C# PDF library for render, create, edit, merge, split, print, and view PDFs. Open source PDF Viewer is available on GitHub. A NuGet package is also available for easy inclusion into your projects.[$]\n• PdfPig - Read and create and extract text and other content from PDFs in C# (port of PdfBox)\n• QuestPDF - QuestPDF is an open-source, modern and battle-tested library that can help you with generating PDF documents by offering friendly, discoverable and predictable C# fluent API.\n• Kevsoft.PDFtk - A wrapper to drive the awesome pdftk binary, which can fill PDF forms, get field information, concatenate multiple documents or pages, split documents, add or replace stamps, and can attach files to or download files from pages.\n• IronPDF - High-performance C# PDF library with compatibility for various .NET versions, HTML to PDF conversion, content page conversion, file format support (e.g., DOCX, RTF, MD), responsive layouts, and robust PDF capabilities features ranging from compability, generating PDFs, formatting PDFs, and editing PDFs. [$] [Free trial available]\n• Syncfusion .NET PDF Framework - A high-performance .NET PDF framework with no Adobe dependencies. Create, read, and edit PDF files seamlessly. Utilize PDF viewer controls for easy viewing, reviewing, and printing. Effortlessly convert HTML, Word, Excel, PowerPoint files, and images to PDF with powerful conversion APIs. [$] [Free for Individuals and Small Businesses]\n• Glimpse - The open source diagnostics platform for the web\n• Unchase.FluentPerformanceMeter - An open-source and cross-platform .Net Standard 2.0 library that is designed for the method’s performance measurement.\n• SSH.NET - A Secure Shell (SSH) library for .NET, optimized for parallelism. Provides SSH commands, SFTP/SCP uploads and downloads, and SOCKS4/SOCKS5/HTTP proxies.\n• FluentFTP - An FTP and FTPS library for .NET, optimized for speed. Provides extensive FTP commands, file uploads/downloads and FTP proxies.\n• SharpSnmpLib - An open source SNMP implementation for .NET/Mono/Xamarin. Version 1, 2c, and 3 are supported.\n• DNS - A library for parsing and serializing DNS messages. Includes a basic DNS client and server.\n• DnsClient.NET - A simple yet very powerful and high performant open source library for the .NET Framework to do DNS lookups.\n• Tecan SiLA2 SDK - A library and code generator to develop SiLA2 clients and servers.\n• PushSharp - A server-side library for sending Push Notifications to iOS, OSX, Android, Chrome, Windows Phone, Windows 8, Blackberry, and Amazon devices.\n• SqlKata - Elegant SQL query builder, that supports complex queries, joins, sub queries, nested where conditions, vendor engine targets and more\n• CAP - An EventBus with local persistent message functionality for RabbitMQ or Kafka.\n• Cap.Outbox - Implementation of the Outbox pattern and OnceExecutor service that guarantees idempotence: the operation will be performed once\n• NServiceBus - The most popular service bus for .NET\n• Gofer.NET - Easy C# API for Distributed Background Tasks/Jobs for .NET Core. Inspired by celery for python.\n• Hangfire - Incredibly easy way to perform fire-and-forget, delayed and recurring tasks inside ASP.NET applications\n• RabbitMQ.NET - Implementation of an AMQP client library for C#, and a binding exposing AMQP services via WCF\n• NetMQ - NetMQ is 100% native C# port of ZeroMQ\n• MassTransit - MassTransit is lean service bus implementation for building loosely coupled applications using the .NET Framework.\n• Rebus - Rebus is a lean service bus implementation for .NET, similar in nature to NServiceBus and MassTransit, only leaner\n• EasyNetQ - An easy to use .NET API for RabbitMQ\n• Warewolf ESB - An easy to use service bus and microservices platform. Easily build applications and services in a visual IDE.\n• Silverback - A simple but feature-rich message bus for .NET core (supports Kafka, RabbitMQ and MQTT).\n• SlimMessageBus - Lightweight message bus with transports for popular messaging systems (Kafka, Redis, Azure Service Bus, and others) and in-memory communication.\n• gRPC An RPC library and framework for .NET Core. Read more about it on Docs Microsoft\n• CoreRPC - Extensible library for WCF-like RPC targeting netstandard1.3. Compatible with .NET, Mono and .NET Core.\n• BloomRPC - BloomRPC aims to provide the simplest and most efficient developer experience for exploring and querying your GRPC services.\n• gRPCurl - gRPCurl is a command-line tool that lets you interact with gRPC servers. It's basically curl for gRPC servers.\n• gRPC UI - gRPC UI is a command-line tool that lets you interact with gRPC servers via a browser. It's sort of like Postman, but for gRPC APIs instead of REST.\n• Rx.NET - The Reactive Extensions (Rx) is a library for composing asynchronous and event-based programs using observable sequences and LINQ-style query operators\n• ObsevableComputations - A cross-platform .NET library for computations whose arguments and results are objects that implement INotifyPropertyChanged and INotifyCollectionChanged (ObservableCollection) interfaces.\n• FluentScheduler - Task scheduler with fluent interface that runs automated jobs from your application\n• NCrontab - Class library for parsing & formatting crontab expressions as well as calculating occurrences of time based on a crontab schedule\n• Hangfire - An easy way to perform fire-and-forget, delayed and recurring tasks inside .NET apps\n• Chroniton - A simple, fully integrable, and customizable library for running strongly typed jobs (tasks) on schedules.\n• DurableTask - This framework allows users to write long running persistent workflows in C# using the async/await capabilities.\n• AWS SDK - The AWS SDK for .NET enables .NET developers to easily work with Amazon Web Services\n• Azure PowerShell - A set of PowerShell cmdlets for developers and administrators to develop, deploy and manage Microsoft Azure applications\n• Countly SDK for Windows - Windows SDK for Countly analytics and marketing platform for product and marketing managers\n• Dropbox.NET - Official .NET SDK for the Dropbox API\n• Getty Images API SDK - SDK for the Getty Images and iStock APIs\n• SolrExpress - A simple and lightweight query .NET library for Solr, in a controlled, buildable and fail fast way\n• Lucene.net - Lucene.Net is a port of the Lucene search engine library, written in C# and targeted at .NET runtime users\n• Ceras - Ceras is a binary serializer. It converts any object into a byte[] and back. It goes above and beyond in terms of features, speed, and comfort. Supports reference loops, large/complicated inheritance chains, splitting objects into parts and more.\n• Protobuf.NET - Protocol buffers is the name of the binary serialization format used by Google for much of their data communications\n• ServiceStack.Text - JSON, JSV and CSV Text Serializers used in servicestack.net\n• Jil - Fast .NET JSON serializer, built on Sigil (used by StackOverflow)\n• ProtoBuf - Generate C# code for protocol buffer serialization from a .proto specification.\n• F# Data - F# type providers for accessing XML, JSON, CSV and HTML files (based on sample documents) and for accessing WorldBank data\n• Bond - cross-platform framework for working with schematized data. It supports cross-language de/serialization and powerful generic mechanisms for efficiently manipulating data.\n• FileHelpers - free and easy to use .NET library to import or export data from fixed length or delimited records in files, strings or streams.\n• Utf8Json - Fast and Zero Allocation JSON Serializer for C#(.NET, .NET Core, Unity and Xamarin), this serializer write/read directly to UTF8 binary so boostup performance.\n• Twilio-csharp - A C#/.NET Library for sending and receiving phone calls and text messages with Twilio.\n• Automatonymous - A state machine library for .NET - allows you to write fluent style state machines\n• Pretzel - A site generation tool (and then some) for .NET platforms\n• Wyam - A simple to use, highly modular, and extremely configurable static content generator\n• Strong Namer - Automatically add strong names to referenced assemblies which do not already have a strong name. This will allow you to reference and use (NuGet packages with) assemblies which are not strong named from your projects that do use a strong name.\n• .NET Assembly Strong-Name Signer - Utility software to strong-name sign .NET assemblies, including assemblies you do not have the source code for.\n• C# Coding Conventions - Official MSDN C# code conventions\n• C# Async Guidance - list of problematic asynchronous patterns for .NET Core with an explanation of how to solve those issues\n• Stubble - Trimmed down {{mustache}} templates in .NET. Successor of Nustache.\n• DotLiquid - C# port of the Ruby Liquid templating language\n• Mustache Sharp - An extension of the mustache text template engine for .NET.\n• Scriban - A fast, powerful, safe and lightweight text templating language and engine for .NET\n• Morestachio - A full sized {{mustache}} like template engine with focus on extendibility.\n• Fluid - Fluid is an open-source .NET template engine based on the Liquid template language.\n• SmartFormat - A lightweight text templating library written in C# which can be a drop-in replacement for string.Format\n• ArchUnitNET - Simple library for checking the architecture of C# code with a fluent API.\n• NetArchTest - A fluent API for .Net Standard that can enforce architectural rules in unit tests.\n• AutoFixture - AutoFixture is an open source framework for .NET designed to minimize the 'Arrange' phase of your unit tests\n• BDDfy - BDDfy is the simplest BDD framework EVER!\n• Bogus - A simple and sane fake data generator for C#. Based on and ported from the famed faker.js.\n• ExpressionToCode - Use plain C# syntax in assertions that include both the expression expression and subexpression values in the failure message.\n• Fluent Assertions - A set of .NET extension methods that allow you to more naturally specify the expected outcome of a TDD or BDD-style test\n• Fuchu - A unit-testing library for F# with tests-as-values which makes DSLs extremely easy to create.\n• Machine.Specifications - Machine.Specifications (MSpec) is a context/specification framework that removes language noise and simplifies tests.\n• Moq - The most popular and friendly mocking framework for .NET\n• Moq.Contrib.HttpClient - A set of extension methods for mocking HttpClient and IHttpClientFactory with Moq.\n• NBomber - Very simple load testing framework for Pull and Push scenarios. It's 100% written in F# and targeting .NET Core and full .NET Framework.\n• NFluent - NFluent is an assertion library which aims to fluent your .NET TDD experience.\n• Testcontainers - A library to support tests with throwaway instances of Docker containers for all compatible .NET Standard versions.\n• SecTester - SecTester is a new tool that integrates Bright enterprise-grade scan engine directly into your integration or e2e tests. [Proprietary] [Free]\n• Shouldly - Shouldly is an assertion framework which focuses on giving great error messages when the assertion fails while being simple and terse.\n• xBehave.net - An xUnit.net extension for describing your tests using natural language.\n• Expecto - A smooth testing framework for F# with tests as values. Unit testing, property based testing, performance testing and stress testing.\n• Compare-Net-Objects - Perform a deep compare of any two .NET objects using reflection. Shows the differences between the two objects.\n• Verify - Verification tool to enable simple approval of complex models and documents.\n• CsCheck - Random testing library for C#. Including concurrency, causal profiling, regression and performance testing.\n• Downloader - Fast and reliable multipart downloader with asynchronous progress events for .NET applications.\n• Fiddler - The free web debugging proxy for any browser, system or platform\n• Open Live Writer - Blog writer which integrated with WordPress, Blogger, et. al. Open Live Writer makes it easy to write, preview, and post to your blog.\n• CodeHub - CodeHub is the best way to browse and maintain your GitHub repositories on any iOS device!\n• ShareX - ShareX is a free and open source program that lets you capture or record any area of your screen and share it with a single press of a key. It also allows uploading images, text or other types of files to over 80 supported destinations you can choose from.\n• Myrtille - A native HTML4/5 Remote Desktop Protocol client, HTTP gateway written in C# for .NET\n• CatLight - Build status notifications for TFS/Jenkins/Travis/Appveyor. Cross-platform desktop app based on .NET Core and Electron. [Free][Proprietary]\n• Mockaco - API mock server with fast setup, useful to simulate HTTP responses, leveraging ASP.NET Core features, built-in fake data generation and C# scripting engine powered by Roslyn scripting API.\n• Netling - A load tester client for easy web testing. It is extremely fast while using little CPU or memory.\n• Papercut - Papercut is an open source (.NET based) test email viewer that runs locally with a built-in SMTP server designed to receive and notify of test email messages.\n• Visual Studio Uninstaller - Uninstall and clean up all components of Visual Studio.\n• Fake JSON Server - Fake REST API for prototyping or as a CRUD Back End. No need to define types, uses dynamic typing. Data is stored to a single JSON file. Has authentication, WebSocket notifications, async long running operations, random generation for errors/delays and experimental GraphQL support.\n• AnyStatus - A desktop notifications app for monitoring CI/CD pipelines, servers, network, health and metrics. AnyStatus supports Azure DevOps, Jenkins, TeamCity, AppVeyor and more.\n• OctoLinker - Navigate through , , , , and C#/F#/VB.NET project files efficiently with the OctoLinker browser extension for GitHub.\n• YARP - YARP is a reverse proxy toolkit for building fast proxy servers in .NET using the infrastructure from ASP.NET and .NET.\n• JSON Formatter and Validator - A blazing fast JSON formatter and validator that won't share JSON with a server.\n• CSharpier - An opinionated code formatter for c# that is based on the Prettier printing process.\n• UnitsNet - Makes life working with units of measurement just a little bit better.\n• Another Redis Desktop Manager - A faster, better and more stable redis desktop manager [GUI client], compatible with Linux, Windows, Mac. What's more, it won't crash when loading massive keys.\n• OctaneEngine - A high performance multipart downloader with many features such as pause/resume support, asynchronous progress, and throttling.\n• FastCloner - Fast deep cloning library for .NET 8+. Zero-config, works out of the box.\n• Lean - Lean Engine is an open-source fully managed C# algorithmic trading engine built for desktop and cloud usage. https://www.quantconnect.com/lean/\n• Managed Windows API - Introspect and automate third-party Windows / VC++ applications without needing its source code.\n• FlaUI - FlaUI is a .NET library which helps with automated UI testing of Windows applications (Win32, WinForms, WPF, Store Apps, ...).\n• PuppeteerSharp - Puppeteer Sharp is a .NET port of the official Node.JS Puppeteer API.\n• PuppeteerSharp.Contrib - Contributions to Puppeteer Sharp that provides a convenient way to write readable and robust browser tests.\n• Web Essentials - Web Essentials extends Visual Studio with lots of new features that web developers have been missing for many years\n• Nuget Package Manager - NuGet is the package manager for the Microsoft development platform including .NET\n• SideWaffle - A collection of Item Templates for Visual Studio 2012/2013/2015 that makes any web developer's life much easier\n• CodeContracts - Source code for the CodeContracts tools for .NET\n• Git Diff Margin - Displays live Git changes of the currently edited file on Visual Studio margin and scroll bar\n• Productivity Power Tools - A set of extensions to Visual Studio Professional (and above) which improves developer productivity.\n• VSColorOutput - Color highlighting for Build, Find and Debug output windows. Custom match patterns and colors can be added.\n• OzCode - OzCode is a Visual Studio Extension which cuts down on debugging time and increases productivity by detecting and isolating bugs, making them easy to fix. [$]\n• ViEmu - very powerful Vi/vim emulator for Visual Studio supporting all basic and many advanced features of vi/vim. [$]\n• Roslynator - A collection of 500+ analyzers, refactorings and fixes for C#, powered by Roslyn\n• Unchase.Odata.Connectedservice - A Visual Studio Connected Service for generating API client code in C# or VB for OData web service.\n• Unchase.OpenAPI.Connectedservice - A Visual Studio 2017/2019 extension to generate C# (TypeScript) HttpClient (or C# Controllers) code for OpenAPI web service with NSwag.\n• SonarSource.sonarlint-visualstudio - SonarLint is a free, open source Visual Studio 2017, 2019 and 2022 extension that provides on-the-fly feedback to developers on new bugs and quality issues in C#, VB.NET, C/C++, TypeScript and JavaScript.\n• CefSharp - HTML5, CSS3 and JS web browser powered by Chromium, for WinForms and WPF\n• SharpBrowser - A full featured .NET web-browser built using C# and CefSharp\n• ASP.NET MVC - ASP.NET is a free web framework for building great web sites and applications\n• Coalesce - Coalesce is a framework for rapid-development of ASP.NET Core web applications.\n• NancyFx - Lightweight, low-ceremony, framework for building HTTP-based services on .NET and Mono\n• Suave.IO - Framework/library/web server that makes you cry tears of joy after finishing your project ahead-of-time when you look at the beautiful code you've written in F#.\n• DotVVM - MVVM framework for people who don't like to write JavaScript, with OWIN and ASP.NET Core support and a free extension for Visual Studio 2015 and 2017.\n• XSP - Mono's ASP.NET hosting server. This module includes an Apache Module, a FastCGI module that can be hooked to other web servers as well as a standalone server used for testing (similar to Microsoft's Cassini)\n• Fleck - Fleck is a WebSocket server implementation in C#. Branched from the Nugget project\n• SignalR - Library for ASP.NET developers that makes it incredibly simple to add real-time web functionality to your applications\n• Websocket-Sharp - A C# implementation of the WebSocket protocol client and server\n• Crossertech - Provides a great set of tools for you to build real-time applications on the Microsoft.NET plattform and much more. [$]\n• WampSharp - A C# implementation of The Web Application Messaging Protocol - a protocol that provides messaging patterns of Remote Procedure Calls and Publish/Subscribe over WebSockets.\n• Websocket.Client - A multiplatform wrapper over native C# class ClientWebSocket with built-in reconnection and error handling.\n• TopShelf - An easy service hosting framework for building Windows services using .NET\n• Data Grid Extensions - Modular extensions for the WPF DataGrid control, like filtering, additional column events, extended star-size column behavior, and more...\n• Extended WPF Toolkit™ - A rich collection of controls, components and utilities for creating WPF applications\n• Sprache - A simple, lightweight library for constructing parsers directly in C# code\n• Pidgin - A lightweight, fast and flexible parsing library for C#, developed at Stack Overflow\n• Parakeet - A recursive descent parsing library with operator overloading for C#.\n• CodegenCS - Code Generation Toolkit where templates are written using plain C#. Command-line tool, MSBuild task, Visual Studio Extension, and Roslyn Source Generator.\n• M31.FluentAPI - Effortlessly generate fluent APIs for your C# classes.\n• Supernova.Enum.Generators - A C# source generator to create an enumeration class from an enum type. With this package, you can work on enums very, very fast without using reflection.\n• List of Automated Testing Tools and Frameworks for .NET - List of Automated Testing (TDD/BDD/ATDD/SBE) Tools and Frameworks for .NET\n• awesome-LINQ - A curated collection of awesome LINQ libraries, tools, and more.\n• C# Algorithms, Data Structures - A list of algorithms and data structures implementations.\n• ASP.NET Core Library and Framework Support - A list of what .NET libraries and frameworks are currently supported by ASP.NET Core and .NET Core).\n• Awesome .NET Performance - A curated list of awesome .NET Performance books, courses, trainings, conference talks, blogs and most inspiring open source contributors.\n• .NET Open Source Developer Projects - This community maintained list showcases .NET open source projects that are useful for any aspect of the development process.\n• Awesome Microservices .NET Core - A collection of awesome training series, articles, videos, books, courses, sample projects, and tools for Microservices in .NET Core.\n• extra-awesome-dotnet - Sorted lists of awesome .NET repositories, with counts of stars, issues, and forks!\n• NuGet Trends - Check out NuGet packages adoption and what's trending on NuGet.\n• Weekly C# Digest - Weekly email newsletter with manually curated top 5 links from the .NET community."
    }
]