[
    {
        "link": "https://geeksforgeeks.org/fdisk-command-in-linux-with-examples",
        "document": "The ‘fdisk’ command in Linux, short for “format disk,” is a powerful, dialog-driven utility used for creating and manipulating the disk partition table. Essential for system administrators and users looking to manage their hard drive’s structure, ‘fdisk’ supports a range of operations such as creating, deleting, and resizing partitions.\n\nHere, we will learn how to use fdisk effectively across various scenarios.\n\nfdisk allows you to create a maximum of four primary partitions and the number of logical partitions depends on the size of the hard disk you are using. It allows the user:\n• None To Create space for new partitions.\n• None Copying or Moving data to new disks(partitions).\n\nHere’s a breakdown of some commonly used options in ‘fdisk’:\n• ‘-l’ : Lists the partition tables for specified disks or all disks if no disk is specified.\n• ‘-s ‘: Reports the size of a specified partition.\n• ‘-u ‘: Shows the exact data placement on the disk in units.\n• ‘-b’ : Allows specification of sector size, useful for disks with non-standard sector sizes.\n\nLet us look at some of the ways in which ‘fdisk’ command can be used in Linux.\n\nThe first thing to do before doing any thing with the disks and partition is to view basic details about all available partition in the system. The below command is used to list the partitions on your system and see their /dev names. For example ‘/dev/sda’, ‘/dev/sdb’ or ‘/dev/sdc’.\n\nBelow command is used to view all disk partitions on device ‘/dev/sda’.\n\nTo see all the command which are available under fdisk command you can use ‘/dev/sda’ partition with ‘fdisk’ command.\n\nNote: This will prompt for a command. Type ‘m’ for seeing all the operations which can perform on ‘/dev/sda’. After pressing m you will get:\n\nFor this go inside the hard drive partition that is the ‘/dev/sda’ partition, and use the following command:\n\nNow you have to type n to create new partition and then type ‘p’ for making a primary partition and ‘e’ for making an extended or logical partition depending on the type of partition to make.\n\nRun ‘w’ command to write the changes and reboot your system.\n\nTo delete a partition for the hard disk and free up space occupied by that partition for example ‘/dev/sdb’. Go to the command menu using following:\n\nand then type ‘d’ to go to the delete partition menu. It will prompt the partition number you want to delete(type the number).\n\nRun ‘w’ command to write the changes and reboot the system.\n\n6. How to view the size of your Partition\n• None To check for the manual page of ‘fdisk’ command, use the following command:\n• None To see the help message and listing of all options, use the following command option:\n\nWhat is the fdisk command used for in Linux?\n\nHow to create a new partition using fdisk?\n\nTo create a new partition using , follow these steps: Launch fdisk on the target disk: Replace with the actual device name of your disk (e.g., ). Enter to create a new partition: Follow the prompts to specify whether it’s a primary ( ) or extended ( ) partition. may ask for the partition number, starting and ending sectors, or size. Choose partition type (if necessary): For MBR, you may need to decide between primary and extended partitions. Most users will want primary unless they need more than four partitions. Write the changes: After configuring the partition, enter to write the changes to disk and exit .\n\nHow to list all partitions on a disk using fdisk?\n\nCan fdisk be used to format a partition?\n\nWhat are some common options for the fdisk command?"
    },
    {
        "link": "https://redhat.com/en/blog/partitions-fdisk",
        "document": "Lately, I have been doing a lot of research and writing around disk management utilities in Linux and the different options that we, as sysadmins and operators, have at our disposal to accomplish these types of tasks. Disk management has been and will most likely be one of the most crucial considerations for system administrators. Everything that we do is tied to a storage device in some way. Ensuring that our projects, backups, customer, and user data are all appropriately segmented and stored is absolutely essential.\n\nBecause of this, there have been multiple utilities developed to ease the burden of storage management. I wrote a series of articles on the popular Logical Volume Manager (LVM) recently, and it led me to explore the other options we have for creating and partitioning disks and volumes.\n\nI want to take a look specifically at the command suite .\n\nThe command suite is a classic disk partitioning utility that was developed in the early 1980s. It was released for a wide variety of operating systems. We are going to focus on it as a Linux tool here, however. It has a huge amount of functionality. From listing, creating, removing, and formating, can do it all. So let's take a look at how it works.\n\nThe command allows you to view all partitions on your system:\n\nNow that we know what partitions we have, we are going to create and format a new one.\n\nTo create a new partition with , you need to select a primary disk that has unused space. Once you decide on the disk you want to use, you will need to run the following (I have opted to work in ):\n\nYou will see that we first entered the command prompt for the disk we wanted to use . Use the option to create a new partition. We then have to decide if we are creating a primary partition or an extended partition. For this example, I created a primary partition (designated with the selection ). We will then label the partition using a partition number. If this is the first new partition you are creating, feel free to use the number . Otherwise, number appropriately. After we have made our selections, we need to designate the size of the partition we are creating. As the was only 1 GB, I have decided to keep it small here and only create a 250 KiB partition. I left the portion blank and entered . Partition created! Now let's format.\n\nAs doesn't have an internal format command, we are going to use the command.\n\nThe syntax is something like this:\n\nTo remove a partition using , you need to enter the command prompt for on the disk you are removing from. For example, to remove the partition I created in the previous example ( ), I need to enter the command line for . Then give the option for delete and select the partition number I wish to remove. As there is only one partition in it deleted the only existing one here without further input. Again, be sure to write your changes to the disk with the flag.\n\nI highly recommend that you check out the utility for yourself. There is no better practice than firing up a virtual machine and playing in the filesystem. If you mess up, you can just blow the VM away and start again. I also would urge you to compare your experience with that of LVM. I personally prefer the LVM utility as it is a bit more user friendly, however, that is subjective at best. If you are interested in my LVM series, you can find it at the bottom of the article. I will also be exploring the command in a future article, so keep an eye out for that!"
    },
    {
        "link": "https://tecmint.com/fdisk-commands-to-manage-linux-disk-partitions",
        "document": "fdisk stands (for “fixed disk or format disk“) is an most commonly used command-line based disk manipulation utility for a Linux/Unix systems. With the help of fdisk command you can view, create, resize, delete, change, copy and move partitions on a hard drive using its own user friendly text based menu driven interface.\n\nThis tool is very useful in terms of creating space for new partitions, organising space for new drives, re-organising an old drives and copying or moving data to new disks. It allows you to create a maximum of four new primary partition and number of logical (extended) partitions, based on size of the hard disk you have in your system.\n\nThis article explains 10 basic fdisk commands to manage a partition table in Linux based systems. You must be root user to run fdisk command, otherwise you will get a “command not found” error.\n\nCaution – Don’t Create, Delete or Modify Partitions. Unless you know what you are doing!\n\nThe following basic command list all existing disk partition on your system. The ‘-l‘ argument stand for (listing all partitions) is used with fdisk command to view all available partitions on Linux. The partitions are displayed by their device’s names. For example: /dev/sda, /dev/sdb or /dev/sdc.\n\nTo view all partitions of specific hard disk use the option ‘-l‘ with device name. For example, the following command will display all disk partitions of device /dev/sda. If you’ve different device names, simple write device name as /dev/sdb or /dev/sdc.\n\nIf you would like to view all commands which are available for fdisk. Simply use the following command by mentioning the hard disk name such as /dev/sda as shown below. The following command will give you output similar to below.\n\nType ‘m‘ to see the list of all available commands of fdisk which can be operated on /dev/sda hard disk. After, I enter ‘m‘ on the screen, you will see the all available options for fdisk that you can be used on the /dev/sda device.\n\nTo print all partition table of hard disk, you must be on command mode of specific hard disk say /dev/sda.\n\nFrom the command mode, enter ‘p‘ instead of ‘m‘ as we did earlier. As I enter ‘p‘, it will print the specific /dev/sda partition table.\n\n5. How to Delete a Partition in Linux\n\nIf you would like to delete a specific partition (i.e /dev/sda9) from the specific hard disk such as /dev/sda. You must be in fdisk command mode to do this.\n\nNext, enter ‘d‘ to delete any given partition name from the system. As I enter ‘d‘, it will prompt me to enter partition number that I want to delete from /dev/sda hard disk. Suppose I enter number ‘4‘ here, then it will delete partition number ‘4‘ (i.e. /dev/sda4) disk and shows free space in partition table. Enter ‘w‘ to write table to disk and exit after making new alterations to partition table. The new changes would only take place after next reboot of system. This can be easily understood from the below output.\n\nWarning : Be careful, while performing this step, because using option ‘d‘ will completely delete partition from system and may lost all data in partition.\n\n6. How to Create a New Partition in Linux\n\nIf you’ve free space left on one of your device say /dev/sda and would like to create a new partition under it. Then you must be in fdisk command mode of /dev/sda. Type the following command to enter into command mode of specific hard disk.\n\nAfter entering in command mode, now press “n” command to create a new partition under /dev/sda with specific size. This can be demonstrated with the help of following given output.\n\nWhile creating a new partition, it will ask you two options ‘extended‘ or ‘primary‘ partition creation. Press ‘e‘ for extended partition and ‘p‘ for primary partition. Then it will ask you to enter following two inputs.\n• First cylinder number of the partition to be create.\n• Last cylinder number of the partition to be created (Last cylinder, +cylinders or +size).\n\nYou can enter the size of cylinder by adding “+5000M” in last cylinder. Here, ‘+‘ means addition and 5000M means size of new partition (i.e 5000MB). Please keep in mind that after creating a new partition, you should run ‘w‘ command to alter and save new changes to partition table and finally reboot your system to verify newly created partition.\n\n7. How to Format a Partition in Linux\n\nAfter the new partition is created, don’t skip to format the newly created partition using ‘mkfs‘ command. Type the following command in the terminal to format a partition. Here /dev/sda4 is my newly created partition.\n\n8. How to Check Size of a Partition in Linux\n\nAfter formatting new partition, check the size of that partition using flag ‘s‘ (displays size in blocks) with fdisk command. This way you can check size of any specific device.\n\nIf you’ve deleted a logical partition and again recreated it, you might notice ‘partition out of order‘ problem or error message like ‘Partition table entries are not in disk order‘.\n\nFor example, when three logical partitions such as (sda4, sda5 and sda6) are deleted, and new partition created, you might expect the new partition name would be sda4. But, the system would create it as sda5. This happens because of, after the partition are deleted, sda7 partition had been moved as sda4 and free space shift to the end.\n\nTo fix such partition order problems, and assign sda4 to the newly created partition, issue the ‘x‘ to enter an extra functionality section and then enter ‘f‘ expert command to fix the order of partition table as shown below.\n\nAfter, running ‘f‘ command, don’t forget to run ‘w‘ command to save and exit from fdisk command mode. Once it fixed partition table order, you will no longer get error messages.\n\n10. How to Disable Boot Flag (*) of a Partition\n\nBy default, fdisk command shows the boot flag (i.e. ‘*‘) symbol on each partition. If you want to enable or disable boot flag on a specific partition, do the following steps.\n\nPress ‘p‘ command to view the current partition table, you see there is a boot flag (asterisk (*) symbol in orange color) on /dev/sda1 disk as shown below.\n\nNext enter command ‘a‘ to disable boot flag, then enter partition number ‘1‘ as (i.e. /dev/sda1) in my case. This will disable boot flag on the partition /dev/sda1. This will remove the asterisk (*) flag.\n\nI’ve tried my best to include almost all basic commands of fdisk commands, but still fdisk contains a variety of other expert commands you can use them by entering ‘x‘. For more detailed information, check out ‘man fdisk‘ command from the terminal. If I’ve missed any important command, please do share with me via comment section.\n• 10 Useful “du” Commands to Find Disk Usage of Files and Directories"
    },
    {
        "link": "https://man7.org/linux/man-pages/man8/fdisk.8.html",
        "document": "Pages that refer to this page: systemd-dissect(1), addpart(8), btrfs-filesystem(8), cfdisk(8), delpart(8), mkswap(8), parted(8), partx(8), resize2fs(8), resizepart(8), sfdisk(8)"
    },
    {
        "link": "https://ioflood.com/blog/fdisk-linux-command",
        "document": "Are you finding it challenging to manage disk partitions in Linux? You’re not alone. Many system administrators grapple with this task, but there’s a tool that can make this process a breeze.\n\nLike a skilled architect, the ‘fdisk’ command in Linux is a handy utility that can help you design and manage your disk partitions seamlessly. These partitions can be created, deleted, resized, and more, all with the help of the fdisk command.\n\nThis guide will walk you through the ins and outs of the fdisk command in Linux, from basic usage to advanced techniques. We’ll explore fdisk’s core functionality, delve into its advanced features, and even discuss common issues and their solutions.\n\nSo, let’s dive in and start mastering fdisk!\n\nTL;DR: How Do I Use the fdisk Command in Linux?\n\nIn this example, we use the command to list all the disk partitions on the system. The output provides detailed information about each partition, including its size, start and end points, blocks, ID, and system type.\n\nThe fdisk command in Linux is a powerful tool for managing disk partitions. Here’s a step-by-step guide to using fdisk to list, create, and delete disk partitions.\n\nTo start with, let’s try listing all the available disk partitions. You can do this by using the command.\n\nThis command lists all the disk partitions on your system, providing detailed information about each partition, including its size, start and end points, blocks, ID, and system type.\n\nNow let’s move on to creating a new partition. First, you need to use the command followed by the device name. For example, .\n\nThis will open the fdisk prompt. Here, you can press ‘n’ to create a new partition. Follow the prompts to specify the partition type (primary/extended), partition number, and the first and last sectors.\n\nTo delete a partition, you would use the ‘d’ option at the fdisk prompt. For instance, to delete the partition /dev/sdb1, you would do the following:\n\nThis will delete the specified partition. Remember, this action is not reversible, so ensure you’re deleting the correct partition.\n\nThese are the basics of using the fdisk command in Linux to manage disk partitions. As you can see, it’s a powerful tool that provides granular control over your disk space.\n\nOnce you’ve mastered the basics of the fdisk command, it’s time to delve into its more advanced features. These include resizing partitions, changing partition types, and more.\n\nBefore we dive deeper, let’s familiarize ourselves with some of the command-line arguments or flags that can modify the behavior of the fdisk command. Here’s a table with some of the most commonly used fdisk arguments.\n\nNow that we have a basic understanding of fdisk command line arguments, let’s dive deeper into the advanced use of fdisk.\n\nResizing a partition is a common task for system administrators. Here’s how you can do it with fdisk:\n\nIn this example, we first delete the partition using the ‘d’ command. We then create a new partition with the ‘n’ command, specifying the size as 200 MB. Finally, we write the changes to disk with the ‘w’ command.\n\nYou can also change the type of a partition using fdisk. Here’s an example:\n\nIn this example, we use the ‘t’ command to change the partition type, specifying the hex code for the Linux partition type (83). We then write the changes to disk with the ‘w’ command.\n\nThese are just a few examples of the advanced uses of the fdisk command in Linux. With a bit of practice, you’ll find that fdisk is a flexible and powerful tool for managing your disk partitions.\n\nWhile fdisk is a powerful tool for managing disk partitions in Linux, it’s not the only one. There are other commands like gdisk and parted that offer alternative ways to manage disk partitions. Let’s explore these alternatives, their advantages, disadvantages, and when to use them.\n\nGdisk is a disk partitioning tool designed for larger disks. It uses the GUID Partition Table (GPT) rather than the older Master Boot Record (MBR) partitioning scheme used by fdisk.\n\nHere’s an example of how to list partitions with gdisk:\n\nIn this example, we use the command to list all the disk partitions on the system. The output provides detailed information about each partition, including its size, code, name, and the start and end sectors.\n\nParted is another disk partitioning and partition resizing tool. It’s more modern and supports larger disks and partition sizes.\n\nHere’s an example of how to list partitions with parted:\n\nIn this example, we use the command to list all the disk partitions on the system. The output provides detailed information about each partition, including its size, file system, name, and flags.\n\nBoth gdisk and parted offer more features and support for modern hardware compared to fdisk. However, they might be a bit more complex to use. If you’re managing a modern system with large disks, gdisk and parted might be better choices. But if you’re working with older systems or smaller disks, fdisk should be more than adequate.\n\nLike any other command, fdisk can sometimes throw errors or behave unexpectedly. But don’t worry. We’ve got you covered with some of the most common issues you might face when using fdisk, along with their solutions.\n\nYou might encounter an error like when trying to write changes to a disk that’s currently in use.\n\nIn this case, the changes you made won’t take effect until you reboot your system. This is because the kernel needs to reload the partition table, and it can’t do this while the disk is in use.\n\nSometimes, you might see an error like when trying to save changes to a disk. This usually happens due to lack of permissions.\n\nTo resolve this, you need to run fdisk as root using the command.\n\nError: Partition does not end on cylinder boundary\n\nWhen creating a new partition, you might see a warning like Partition 1 does not end on cylinder boundary . This is because fdisk aligns partitions to cylinder boundaries by default, and your partition’s size might not be a multiple of the cylinder size.\n\nThis is usually not a problem with modern systems, but if you want to avoid this warning, you can use the option with fdisk to specify the size in sectors instead of cylinders.\n\nThese are just a few examples of the issues you might face when using the fdisk Linux command. Remember, the key to troubleshooting is understanding the error message and knowing the right command options to use.\n\nDisk partitioning is a crucial aspect of managing any Linux system. But why is it so important, and what are the related concepts you need to understand? Let’s dive into the basics of disk partitioning in Linux and explore related concepts like file systems and disk formats.\n\nDisk partitioning is the process of dividing a disk’s storage space into separate sections, known as partitions. Each partition functions as a separate disk, with its own file system. This separation has several benefits:\n• Organization: Different partitions can be used for different purposes, such as system files, user files, or backups. This makes the system more organized and easier to manage.\n• None Security: If one partition becomes corrupted or compromised, the others remain unaffected. This can help to protect your data and keep your system running.\n• None Performance: Different file systems can be optimized for different types of data, improving the performance of your system.\n• None Flexibility: Partitions can be resized, deleted, or reformatted as needed, providing flexibility in how you use your disk space.\n\nHere’s an example of how to view the partition table of a disk using the fdisk command:\n\nThis command lists all the partitions on the disk, along with information about their size, start and end points, blocks, ID, and system type. As you can see, each partition has a specific purpose and uses a specific file system.\n\nA file system is a way of organizing and storing data on a disk. It determines how files are named, stored, and retrieved. There are many different file systems, each with its own advantages and disadvantages. For example, the ext4 file system is commonly used in Linux systems due to its high performance and reliability.\n\nA disk format, on the other hand, is a way of preparing a disk for use with a certain file system. This includes creating a partition table and setting up the necessary data structures for the file system.\n\nIn conclusion, understanding the basics of disk partitioning, file systems, and disk formats is crucial for managing a Linux system effectively. With tools like the fdisk command, you can manage your disk partitions with ease and flexibility.\n\nDisk partitioning, as we have seen, is a crucial aspect of managing a Linux system. However, it’s just one piece of the larger picture of system administration in Linux. Understanding how it fits into this bigger picture can help you manage your system more effectively and efficiently.\n\nOnce you’ve partitioned your disk, the next step is to manage your file systems. This involves formatting your partitions with a specific file system, mounting and unmounting file systems, checking and repairing file systems, and more. Tools like mkfs, mount, umount, and fsck can help you with these tasks.\n\nHere’s an example of how to format a partition with the ext4 file system using the mkfs command:\n\nIn this example, we use the command to format the /dev/sda1 partition with the ext4 file system. The output provides information about the new file system, including its UUID, the locations of superblock backups, and the steps taken to create the file system.\n\nAnother important aspect of system administration is disk performance optimization. This involves monitoring disk usage, identifying bottlenecks, and implementing solutions to improve performance. Tools like iotop, hdparm, and iostat can help you monitor and optimize your disk performance.\n\nFurther Resources for Mastering Disk Management in Linux\n\nTo further your understanding and skills in disk management and system administration in Linux, here are some resources that you might find helpful:\n• The Linux System Administrator’s Guide: An in-depth guide to system administration in Linux, covering a wide range of topics including disk partitioning, file systems, and performance optimization.\n• None The Linux Command Line: A comprehensive resource for learning the Linux command line, including commands for disk management.\n• None GNU Parted Manual: The official manual for the GNU Parted command, a powerful tool for managing disk partitions.\n\nBy exploring these resources and practicing the commands and techniques discussed in this guide, you’ll be well on your way to mastering disk management and system administration in Linux.\n\nIn this comprehensive guide, we’ve delved deep into the world of the fdisk command in Linux, a powerful tool for managing disk partitions.\n\nWe embarked on our journey with the basics, learning how to use fdisk to list, create, and delete disk partitions. As we ventured further, we explored more advanced uses of fdisk, such as resizing partitions and changing partition types. We also tackled common issues you might encounter when using fdisk, providing you with solutions and insights to overcome these challenges.\n\nBeyond the fdisk command, we introduced you to alternative commands like gdisk and parted, expanding your toolkit for disk partitioning in Linux. These alternatives offer more features and support for modern hardware, albeit with a slightly steeper learning curve.\n\nWhether you’re just starting out with the fdisk command or you’re looking to level up your disk partitioning skills, we hope this guide has given you a deeper understanding of fdisk and its capabilities.\n\nWith the fdisk command and its alternatives at your disposal, you’re well equipped to manage disk partitions in Linux effectively and efficiently. Happy partitioning!"
    },
    {
        "link": "https://hopeness.medium.com/master-the-linux-mkfs-ext4-command-a-comprehensive-guide-a727c9a9e03",
        "document": "This guide presents a detailed walkthrough of the Linux ‘mkfs.ext4’ command aimed at beginners. It explores the history, usage, commonly used parameters, and real-world use cases of the command. Additionally, it delves into less common but powerful usage techniques and important points to be aware of.\n\nThe ‘mkfs.ext4’ command, as part of the larger ‘mkfs’ family of commands, has been a part of Unix and Unix-like operating systems since the early 2000s. It is specifically designed to create the fourth extended filesystem (ext4), which is a journaling file system for Linux, developed as the successor to ext3.\n\nWhen and why to use it\n\nThe ‘mkfs.ext4’ command comes into play when you need to create an ext4 file system, which is commonly used in Linux distributions. It’s useful when setting up new drives, repurposing old drives, or preparing a partition for data storage.\n\nHow to use it\n\nTo use ‘mkfs.ext4’, you would typically provide the device identifier. For instance, to create a new ext4 filesystem on the first partition of the first disk:\n• Specifies the block size for the filesystem.\n• Sets the percentage of blocks reserved for the super-user.\n\nOne of the most common use cases for ‘mkfs.ext4’ is formatting a new partition to prepare it for data storage.\n\nYou can use the ‘-E’ flag to pass an extended option to ‘mkfs.ext4’. For instance, to continue creating a filesystem even when an existing filesystem is detected, use the ‘nodiscard’ option.\n\nWhat needs to be noted\n• Using ‘mkfs.ext4’ on a device with existing data will destroy that data.\n\n‘mkfs.ext4’ is an essential tool for managing ext4 file systems on Linux. This guide provides a comprehensive overview of its usage, parameters, and real-world applications, helping beginners understand and utilize ‘mkfs.ext4’ effectively."
    },
    {
        "link": "https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/5/html/deployment_guide/s1-filesystem-ext4-create",
        "document": "After installation, it is sometimes necessary to create a new ext4 file system. For example, if you add a new disk drive to the system, you may want to partition the drive and use the ext4 file system.\n\nThe default options are optimal for most usage scenarios but if you need to set your ext4 file system in a specific way, see manual pages for the and commands for available options. Also, you may want to examine and modify the configuration file of , , if you plan to create ext4 file systems more often.\n\nThe steps for creating an ext4 file system are as follows:\n\nA valid block device could be one of two types of entries:\n\nFor striped block devices (for example RAID5 arrays), the stripe geometry can be specified at the time of file system creation. Using proper stripe geometry greatly enhances performance of an ext4 file system.\n\nWhen creating file systems on lvm or md volumes, chooses an optimal geometry. This may also be true on some hardware RAIDs which export geometry information to the operating system.\n\nTo specify stripe geometry, use the option of (that is, extended file system options) with the following sub-options:\n\nFor both sub-options, must be specified in file system block units. For example, to create a file system with a 64k stride (that is, 16 x 4096) on a 4k-block file system, use the following command:\n\nFor more information about creating file systems, refer to ."
    },
    {
        "link": "https://linux.die.net/man/8/mkfs.ext4",
        "document": ""
    },
    {
        "link": "https://geeksforgeeks.org/mkfs-command-in-linux-with-examples",
        "document": "The mkfs command stands for “make file system” and is utilized to create a file system, which organizes a hierarchy of directories, subdirectories, and files, on a formatted storage device. This can be a partition on a hard disk drive (HDD), a USB drive, or other storage media. A partition is a logically independent part of an HDD, and creating a file system involves formatting it to organize the data.\n• filesys: The name of a device file (e.g., /dev/hda3 for the third partition on the primary HDD) or the mount point for the new file system.\n• -t fstype: Specifies the type of file system to be created (default is ext2 if not specified).\n• -c: Checks the storage device for bad blocks before creating the file system.\n• -l: Reads the bad blocks list from a specified file.\n\nTo create a file system on a partition, you can run the following command:\n\nThis command creates an ext4 file system on the specified partition (/dev/sdb1).\n\nIt is a significant idea in file systems. The file system records the awaiting file keeps in touch with a diary. As each file is composed of, the diary is refreshed, and the unresolved setup accounts are refreshed. This permits the file system to fix broken, halfway composed files that have happened because of a disastrous occasion, for example, a power cut.\n\nA portion of the more seasoned file systems doesn’t uphold journaling. Those that don’t, keep in touch with the disk, less regularly in light of the fact that they don’t have to refresh the diary. They might give a faster performance, yet they are more inclined to harm because of interrupted file writes.\n• None In the modern era, the way of utilizing mkfs is to type “mkfs.” and then the name of the file system you wish to create.\n• None Now, in order to see all the file systems offered by the “mkfs” command, hit the Tab key twice.\n• None The list of all available file systems available in the Linux distribution being used will be displayed in the terminal window. The screenshot is from Ubuntu 18.04 LTS. Other distributions may have more or fewer options:\n\n1. Finding the required device on the OS through the terminal.\n\nType in the following command, and it will show all the disk nodes that are currently mounted. Be always sure in choosing the right disk or otherwise, you can remove the storage device and then again plug it in if the above command is not showing it in the list, thereafter again run the above command to list all the nodes.\n\nHere, our required disk is “/dev/sdb” which is of 3.7 GiB.\n\nUn-mounting the storage drive is necessary before performing the format. Run the following command, but remember to replace “sdb1″ with your USB drive’s partition label, and then press Enter.\n\n3. Erasing all the data on the drive (discretionary)\n\nYou can erase everything on the drive by entering the following command. But, remember to supplant “sdb” with your USB drive’s name.\n\nType in the following command, by replacing “sdb” with your USB drive’s label, and then press Enter.\n\nEnter the option “n” for creating a new partition.\n\nEnter “w” to write the table and exit.\n\n5. Execute the following command for viewing the partition.\n\nEnter the following command and press Enter for formatting the drive as ext4. Remember to, replace “sdb1” with your partition’s label:\n\nRun the following command in the terminal:\n\n8. Lastly, execute the following command for ejecting the drive when finished.\n\nWe have successfully formatted the USB storage device and have also created a file system with a partition.\n\nThe mkfs command is essential for creating file systems on various storage devices in Linux. Understanding its syntax and options allows users to format storage media effectively and ensure data organization.\n\nWhat does the mkfs command do?\n\nWhat file systems can I create with mkfs?\n\nHow can I check for bad blocks on a device?"
    },
    {
        "link": "https://tecmint.com/create-new-ext4-file-system-partition-in-linux",
        "document": "The ext4 or fourth extended filesystem is a widely-used journaling file system for Linux. It was designed as a progressive revision of the ext3 file system and overcomes a number of limitations in ext3.\n\nIt has significant advantages over its predecessor such as improved design, better performance, reliability, and new features. Although it is best suited for hard drives, it can also be used on removable devices.\n\nThis article will show you how to create a new ext4 file system (partition) in Linux. We will first of all look at how to create a new partition in Linux, format it with the ext4 file system and mount it.\n\nNote: For the purpose of this article:\n• We will assume that you have added a new hard drive to your Linux machine, in which you will create the new ext4 partition, and\n• If you are operating the system as an administrative user, use the sudo command to gain root privileges to run the commands shown in this article.\n\nList the partitions using the fdisk -l or parted -l commands to identify the hard drive you want to partition.\n\nLooking at the output in the screenshot above, we have two hard disks added on the test system and we will partition disk .\n\nNow use parted command to start creating the partition on the selected storage device.\n\nNow give the new disk a label using the mklabel command.\n\nThen create a partition using the mkpart command, give it additional parameters like “primary” or “logical” depending on the partition type that you wish to create. Then select ext4 as the file system type, set the start and end to establish the size of the partition:\n\nTo print the partition table on the device or detailed information about the new partition, run the print command.\n\nNow exit the program using the quit command.\n\nNext, you need to properly format the new partition with the ext4 file system type using the mkfs.ext4 or mke4fs command as follows.\n\nThen label the partition using the e4label command as follows.\n\nNext, create a mount point and mount the newly created ext4 partition file system.\n\nNow using the df command, you can list all file systems on your system together with their sizes in a human readable format , and their mount points and file system types :\n\nLastly, add the following entry in your /etc/fstab to enable persistent mounting of the file system, even after a reboot.\n\nYou might also like to read these following related articles:\n• How to Add New Disks Using LVM to an Existing Linux System\n• How to Add a New Disk to an Existing Linux Server\n• 10 Best File and Disk Encryption Tools for Linux\n• How to Create a Virtual HardDisk Volume Using a File in Linux\n\nThat’s all! In this article, we’ve explained how to create a new partition in Linux, format it with ext4 file system type and mount it as a filesystem. For more information or to share any queries with us, use the feedback form below."
    }
]