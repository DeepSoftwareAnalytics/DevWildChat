[
    {
        "link": "https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/ie-mode",
        "document": "Internet Explorer mode (IE mode) integrates with Microsoft Edge DevTools. IE mode allows enterprises to specify a list of websites that only work in Internet Explorer 11. When you navigate to these websites in Microsoft Edge, an instance of Internet Explorer 11 runs and renders the site in a tab.\n\nIE mode allows enterprises to manage compatibility with technologies that are currently not compatible with any modern web browsers.\n\nSupport for the following technologies is included in IE mode:\n\nIn IE mode, the rendering process is based on Internet Explorer 11. The Microsoft Edge process manager handles the lifetime of the rendering process. The rendering process is constrained to the lifetime of the tab for a specific site (or app). When a tab renders in IE mode, the IE mode indicator icon appears in the address bar for the specific tab.\n\nIE mode is available on Windows 10 Version 1903 (May 2019 Update), and is coming to all supported Windows platforms.\n\nThe IE mode indicator icon appears in the address bar if the Enterprise admin has configured the website to appear in IE mode. To view the compatibility mode of a website in IE mode, click the IE mode indicator icon in the address bar:\n\nIf a tab uses IE mode, the tab has the following limitations:\n• None Pressing F12 or Ctrl+Shift+I opens a blank instance of the Microsoft Edge DevTools and displays the following message: Developer Tools are not available in Internet Explorer mode. To debug the page, open the page in IEChoose.\n\nTo debug the content of an IE mode tab, use IEChooser to open Internet Explorer DevTools, as follows:\n• None In Windows, open the Run dialog. For example, press Windows logo key + R.\n• None Enter , and then click OK.\n• None In IEChooser, select the entry for the IE mode tab.\n\nLaunch Microsoft Edge with remote debugging turned on from the command-line interface. Microsoft Visual Studio, Microsoft Visual Studio Code, and other development tools typically run a command to launch Microsoft Edge. The following command launches Microsoft Edge with the remote debugging port set to .\n\nAfter you launch Microsoft Edge using a command-line argument, IE mode is unavailable. You can still navigate to websites (or apps) that are otherwise displayed in IE mode. The website (or app) content renders using Chromium, not Internet Explorer 11. Parts of the webpages that rely on Internet Explorer 11, such as ActiveX controls, might not render correctly. The IE mode indicator icon doesn't appear in the address bar.\n\nIE mode remains unavailable until you close and restart Microsoft Edge.\n\nIf you have an existing application that uses the InternetExplorer object to automate Internet Explorer 11, but the Internet Explorer 11 desktop application isn't available, your application won't work. Internet Explorer 11 will be retired on June 15, 2022. See The future of Internet Explorer on Windows 10 is in Microsoft Edge.\n\nMicrosoft Edge doesn't support automating IE mode through the object, so applications that rely on this object will need to be updated, by using one of the recommended alternatives below. Applications that use the WebBrowser control will continue to work, and won't be affected by the removal of Internet Explorer 11.\n\nIf your automation application doesn't require IE mode for the website (or app) content to function correctly, we recommend updating your application to use Microsoft Edge instead of Internet Explorer 11. Many available automation tools support Microsoft Edge, including WebDriver and Playwright.\n• To learn more about automating Microsoft Edge using WebDriver, see Use WebDriver to automate Microsoft Edge.\n• To learn more about using Playwright, see Use Playwright to automate and test in Microsoft Edge.\n\nApplications that require IE mode for the website (or app) content to function correctly should use the control. The control uses the Internet Explorer platform (MSHTML/Trident) to render web content, and will work even if the Internet Explorer 11 desktop application isn't available.\n• Fix web compatibility issues using document modes and the Enterprise Mode site list"
    },
    {
        "link": "https://learn.microsoft.com/en-us/deployedge/edge-ie-mode-faq",
        "document": "This article provides troubleshooting tips and FAQ for Microsoft Edge version 77 or later.\n\nWhat if I need help with setting up Microsoft Edge or Internet Explorer mode?\n\nWe offer various support options. If you have Microsoft Unified Support, you can reach out to that support service for help with the transition. There's also FastTrack, available at no extra charge to customers with 150 or more paid seats of Windows 10/11.\n\nWe also recommend our Microsoft Edge + Internet Explorer mode Getting Started guide and our IE mode blog series.\n\nYes, the Microsoft Virtual Agent provides a scenario-based guided walkthrough for troubleshooting IE mode.\n\nThere's also the next video, which provides IE mode troubleshooting tips and tricks.\n\nUse this section as a guide to help you troubleshoot and fix the two most common issues when moving to Microsoft Edge with IE mode. These issues are:\n\nThis section describes the symptoms and gives steps to diagnose and fix this issue.\n\nUsers will experience the following symptoms:\n• Sizing and positioning of page elements might be off or they might be missing\n• Some functionality might be lost or not work as expected. For example, buttons that worked with Internet Explorer don't do anything or return an error.\n\nHow to troubleshoot and fix\n\nThe general strategy is to duplicate the same settings that worked with Internet Explorer 11 for a specific site in our IE mode site list. Use the F12 Developer Toolbar's \"Emulation\" tab in IE 11, shown in the next screenshot to investigate the scenario you want to fix. To open the Developer toolbar, press the F12 key and then select Open DevTools.\n\nThe Emulation tab shows two pieces of information to focus on: the Document mode (1), and the text below the dropdown list (2). This information can help explain why we are in the 11 (Default) mode for the page or site we're looking at.\n\nThere are different messages that can be displayed for the Document mode, and in our example they are:\n\nThe two X-UA-Compatible options indicate that either the webpage or the web server where the site is hosted is showing the document mode that should be used by the browser.\n\nWe want to honor the document mode in nearly all cases. To do that, we need to select one of the following modes in the IE mode site list entry for the site:\n\nThese options respect the webpage or web server directives. Remember that we need to select an option that includes the specified document mode. In the screenshot example, because the specified document mode is 11, we'd select \"Default\" because IE8 Enterprise and IE7 Enterprise don't support IE 11 document mode.\n\nIf the Document mode indicates that one of the following compatibility views is needed for the site, the configuration setting is straightforward.\n\nBecause all the Compatibility View settings result in \"IE7 Enterprise\" behavior, choose this setting in the \"Compat Mode\" section of the IE mode site list entry.\n\nFor more information about the logic that Internet Explorer or IE mode uses to land in one doc mode over another, see the Deprecated document modes and Internet Explorer 11 article.\n\nThe general rule is to use the most current logic-based mode that allows a given site to work as expected. We'd start with the Default mode, move to IE8 Enterprise mode, and then to IE7 Enterprise mode if needed. This selection gives child pages the flexibility to use different Document modes as necessary via the built-in logic for their specific needs. As a result, all the website pages aren't locked in to one specific Document mode.\n\nThe following table lists the available document modes for these settings.\n\nThis section describes the symptoms and gives steps to diagnose and fix this issue.\n\nA page relies on SSO for authentication, but users are prompted multiple times for credentials, experience a looping redirect behavior, failed authentication errors, or some combination of these symptoms.\n\nHow to troubleshoot and fix\n\nBefore we start analyzing a failing workflow in Microsoft Edge, look at the address bar for the IE mode \"e\" logo, shown in the next screenshot.\n\nIf, during the SSO authentication process, we see the \"e\", but it disappears after a redirect, this behavior points to a missing neutral site. After Microsoft Edge drops into IE mode, we need to stay there to maintain session and cookie information. If the URL shows up in the address bar long enough to identify it, add it to the IE mode site list as a neutral site using the steps described in Configure neutral sites.\n\nOften, the redirect cycle happens so quickly that it's difficult to identify the missing neutral sites. To help with this analysis, we use a tool that's built into the Chromium engine: net-export.\n\nThe following steps describe how to troubleshoot a neutral site configuration.\n• Open a new tab in Microsoft Edge and go to edge://net-export.\n• Select Start Logging to Disk, and then pick a location where you want to save the resulting .json log. This log can safely be deleted after you finish troubleshooting.\n• Open another tab (keep the net-export tab open), and repeat the failing workflow.\n• After you finish, return to the net-export tab and select Stop Logging.\n• On the resulting page, select Choose File, and then pick the .json file you created in step 2.\n• After the log file is loaded, select Events from the left side menu.\n• Scroll through the network log and identify the starting URL. (You can also use the search function to find your starting point.)\n• From the starting point, scroll downward and look for URLs in the workflow that don't have an entry in your IE mode site list. Pay special attention to URLs with indicators for SSO, AUTH, LOGIN, and so on.\n• After you identify a candidate URL, add it to the IE mode site list as a neutral site by selecting None in the Open-in dropdown. Test the workflow again.\n\nIn some cases, multiple neutral site entries are needed, depending on the specific site architecture in place. If the workflow still fails after adding a new neutral site, repeat the process to capture a new net-export log and perform another pass.\n\nIn some rare instances, it may be necessary to configure specific shared cookies to ensure that required information gets to your IE mode sites. If you're aware of a specific cookie that's needed, you can configure cookie sharing using the steps described in Cookie sharing from Microsoft Edge to Internet Explorer.\n\nWhat if these steps don't fix the issue?\n\nThis article is designed to help troubleshoot the most common IE mode configuration issues, but it might not cover every possible scenario. If you run into an issue that you can't fix and need help with, contact App Assure at https://aka.ms/AppAssure and we'll help you with your problem.\n\nYou can get Internet Explorer mode diagnostic information on the Microsoft Edge Compatibility tab. To open this tab, go to edge://compat/iediagnostic. The \"Internet Explorer mode diagnostic information\" page might show diagnostic messages and you can export diagnostic data to an xml file. This diagnostic information page also provides configuration information for the following categories:\n• Registry key check. (Displayed only if the check fails.) Checks to see if Internet Explorer integration is set up correctly in the registry. If not, the user can select Fix it to resolve the problem.\n• Internet Explorer mode. Shows the API version that's used, based on the configuration and OS. If there's a problem, the user may be prompted to install a Windows Update.\n• Internet Explorer mode setting. Shows whether Internet Explorer mode is enabled, and how it's configured.\n• Command line. Shows the command-line string and switches used to start Microsoft Edge.\n• Group policy settings. Shows whether IE mode is configured using group policies, and the policies that are applied.\n\nError message: \"To open this page in Internet Explorer mode, reinstall Microsoft Edge with administrator privileges.\"\n\nYou might see this error if you don't have all required Windows Updates. See the prerequisites listed in About IE mode for the required versions of Windows and Microsoft Edge.\n\nIf you've already installed all required Windows Updates, you might see this error if:\n• You're using the Canary channel, which is installed at the user level by default.\n• You're using the Stable, Beta, or Dev channel, but when prompted for elevation when installing the elevation was canceled. When you cancel the elevation prompt, the installation will continue at the user level.\n• Internet Explorer 11 has been disabled in Windows Features.\n• Run the installer for any channel at the system level: .\n\nTo check if Microsoft Edge is installed at the systems level, type \"edge://version\" in the Microsoft Edge address bar. The Executable path will show a path starting with C:\\Program Files, which indicates a system install. If the Executable path begins with C:\\Users, uninstall and then reinstall Microsoft Edge with administrator privileges.\n\nError message \"To open this page in IE mode, try restarting Microsoft Edge.\"\n\nYou might see this error if there was an unexpected error in Internet Explorer. Restarting Microsoft Edge usually fixes this error.\n\nError message: \"Turn off remote debugging to open this site in IE mode otherwise it might not work as expected.\"\n\nYou might see this error if you're remote debugging and navigate to a web page configured to run in IE mode. You can continue, but the page will be rendered using Microsoft Edge.\n\nYou might see this error on the edge://compat/enterprise page indicating that the site list download failed. Starting with Microsoft Edge version 87, when cookies are blocked for third party requests using the BlockThirdPartyCookies policy, HTTP authentication also isn't allowed. You can allow cookies for the specific domain hosting your Enterprise Mode Site List using the CookiesAllowedForURLs policy to ensure that site list downloads are successful.\n\nError message: \"The connection for this site is not secure\"\n\nThis error may happen if you're trying to open a legacy website in IE mode and the site's configured to run in TLS 1.0 or TLS 1.1. These protocols are disabled by default in Microsoft Edge. For more information, see Plan for change: TLS 1.0 and TLS 1.1 soon to be disabled by default\n\nError message: \"This form cannot be opened in a web browser. To open this form, use Microsoft InfoPath\"\n\nCertain applications may require you to load the web page in IE mode. You can use the IE mode feature in Microsoft Edge.\n\nYou may also have to set the attribute in Enterprise Mode Site List to Default. For more information, see Enterprise Mode and the Enterprise Mode Site List.\n\nYes. The retired, out-of-support Internet Explorer 11 desktop application has been permanently disabled through a Microsoft Edge update on certain versions of Windows 10. For more information, see Internet Explorer 11 desktop app retirement FAQ.\n\nCan I use \"View in File Explorer\" in SharePoint Online on Microsoft Edge?\n\nStarting with Microsoft Edge version 95, you can enable the View in File Explorer capability for SharePoint Online Modern Document Libraries. For this experience to be visible and work for your users, you'll need to enable the Microsoft Edge \"Configure the View in File Explorer feature for SharePoint pages in Microsoft Edge\" policy and update your SharePoint Online tenant configuration. Learn more: View SharePoint files with File Explorer in Microsoft Edge - SharePoint in Microsoft 365 | Microsoft Docs.\n\nHowever, rather than use the View in File Explorer option, the recommended approach to managing files and folders outside of SharePoint is to Sync SharePoint and Teams files with your computer or Move or copy files in SharePoint.\n\nDoes IE mode on Microsoft Edge support the 'no-merge' option that was supported in Internet Explorer 11?\n\nThe recommended alternatives for the no-merge functionality in Microsoft Edge are one of the following actions:\n• Use Profiles in Microsoft Edge - Each profile maps to a different IE session for IE mode pages, so it behaves identically to the no-merge option.\n• Use the command line, but with a different path for each session. If needed, you can create a utility for the user to run that launches Microsoft Edge and changes the path for the session.\n\nIf neither of the previous options work for your scenario, starting in Microsoft Edge version 93, IE mode on Microsoft Edge will support no-merge. For an end user, when a new browser window is launched from an IE mode application, it will be in a separate session, like the no-merge behavior in IE11.\n\nFor each Microsoft Edge window, the first time an IE mode tab is visited within that window, if it's a designated \"no-merge\" site, that window is locked into a different \"no-merge\" IE session. This window stays locked from all other Microsoft Edge windows until the last IE mode tab is closed in the locked window. This follows previous behavior where users could launch IE with no-merge and launch Microsoft Edge without no-merge using other mechanisms. All sites opening in a new window (through window.open) will respect the merge nature of the parent process.\n\nYou can validate the no-merge behavior in Microsoft Edge version 93 or later by following these steps:\n• None Ensure that IE mode is enabled on Microsoft Edge version 93 or later.\n• None You can configure sites that need to prevent session sharing in the Enterprise Mode Site List by setting the value of the merge-type attribute to \"no-merge\". This attribute is not applicable only when the open-in element is set to Microsoft Edge. By default, all sites have a merge-type value of merge. (Note: The integrated site list manager tool available at edge://compat/sitelistmanager includes a No merge checkbox when you Add or Edit a site.)\n• None Navigate to any site configured as no-merge. The site should be in its own unmerged IE session. When you open another Microsoft Edge instance or window and navigate to the same site, it should be in its own IE session. Note that there are multiple iexplore.exe processes in Task Manager.\n\nIf you have any feedback, reach out through one of our feedback channels: Microsoft support or the TechCommunity forum.\n\nCan I save links as webpages in Internet Explorer mode?\n\nYes, you can enable the Save Target As option in the context menu for Internet Explorer mode in Microsoft Edge. To do this, configure the group policy \"Allow Save Target As in Internet Explorer mode\" located at Computer Configuration > Administrative Templates > Windows Components > Internet Explorer. The save mechanism works the same as it does in Internet Explorer and if the target is saved as an html file, reopening the file will render the page in Microsoft Edge.\n\nThe ability to save links as web pages requires the following minimum operating system updates:\n\nYes, you can enable the Ctrl+S shortcut for Internet Explorer (IE) mode in Microsoft Edge. To do this, configure the group policy \"Enable extended hot keys in Internet Explorer mode\" located at Computer Configuration > Administrative Templates > Windows Components > Internet Explorer.\n\nThe ability to use Ctrl+S in IE-Mode requires the following minimum operating system updates:\n\nIn addition to the shortcut Ctrl+S, the menuitem Save page as in Edge under Settings and more (the ellipses icon ...) > More Tools can be enabled in Edge 101 (and newer) via the following Group Policy: Allow Save page as in Internet Explorer mode located at Computer Configuration > Administrative Templates > Microsoft Edge. The ability to use the \"Save page as\" menuitem requires the following minimum operating system updates:\n\nCan I test a site in Microsoft Edge while it is configured to open IE mode in the Enterprise Mode Site List?\n\nYes, while you are modernizing your legacy sites, you can test IE mode configured applications on Microsoft Edge. To test these apps, you can configure the InternetExplorerModeTabInEdgeModeAllowed policy. If you enable this policy, your users can open IE mode sites in Microsoft Edge by selecting Settings and more (the ellipses icon ...) > More Tools > Open sites in Edge mode.\n\nHow can I debug my legacy application while using IE mode on Microsoft Edge?\n\nYou can use IEChooser to launch the Internet Explorer DevTools to debug the content of your IE mode tabs. To use IEChooser, follow these steps:\n• Open IEChooser.\n• Open the Run dialog box. For example, press the + .\n• Enter , and then select Ok.\n• In IEChooser, select the entry for the IE mode tab.\n\nMy application requires transferring POST data between IE mode and Microsoft Edge. Is this supported?\n\nStarting with Microsoft Edge Beta channel version 96, navigations that switch between Internet Explorer mode and Microsoft Edge will include form data by default. However, if form data includes file attachments, they will not be transferred between engines. You can choose what data types should be included in such navigations using the InternetExplorerIntegrationComplexNavDataTypes group policy.\n\nIn addition to Microsoft Edge version 96, you need to have the following Windows updates installed for this experience:\n• Windows 10 version 2004; Windows Server version 2004; Windows 10 version; Windows Server version 20H2 and Windows 10 version 21H1 - KB5006738 or later\n\nWhere can I find the \"Reload in Internet Explorer mode\" option?\n\nThis feature is available on Microsoft Edge version 92 or later. To enable this option, configure \"Allow sites to be reloaded in Internet Explorer mode settings\" in Microsoft Edge to \"Allow\". For more information, see Enable the local site list experience.\n\nWhere is the \"File > New session\" option in Microsoft Edge?\n\nA modern browser solution is available by using multiple profiles in Microsoft Edge. This feature allows you to create a new session with another account. The following resources provide information about the benefits of multiple profiles and how to use them.\n• Using multiple profiles at work and at home is now easier with Microsoft Edge\n\nWhy am I getting multiple authentication prompts when running a page in IE mode on Microsoft Edge?\n\nThe client certificate may be requested twice in IE mode. The first time around, the certificate selection dialog will be displayed in IE mode, and the second time around, the dialog will be displayed in Microsoft Edge. Both the frame process and the window process need to request authentication.\n\nAfter the favicon cache is created, you won't be asked for a client certificate again unless you delete the cache. Alternatively, you can set a rule in your server configuration, such as IIS, not to require a client certificate for the favicon.\n\nWhy are there rendering issues like text wrapping and content truncation when child windows are running in IE mode in Microsoft Edge?\n\nThe content area of a child window that renders in IE mode in Microsoft Edge is slightly different than what it is on Internet Explorer 11. If a web page has been designed with pixel-based alignments or positioning, you may experience incorrect rendering, text wrapping, and so on.\n\nTwo policy settings were added to Microsoft Edge version 95 that let you specify custom adjustments to the height and width of pop-up windows that are generated from IE mode sites via the method. You can use the following policies to adjust window size:\n• InternetExplorerIntegrationWindowOpenHeightAdjustment - This setting lets you specify a custom adjustment to the height of popup windows generated from the Internet Explorer mode site.\n• InternetExplorerIntegrationWindowOpenWidthAdjustment - This setting lets you specify a custom adjustment to the width of popup windows generated from the Internet Explorer mode site.\n\nWhy aren't pop-ups or redirected websites loading in IE mode or in Internet Explorer 11?\n\nAfter configuring IE mode, certain websites, especially those sites that create a new window or a site that gets redirected may not render in IE mode or open in Internet Explorer 11.\n\nFor this kind of redirected website, you can make use of the in the site list configuration. For more information, see Updated schema elements.\n\nWhy aren't websites loading in IE mode when I launch Microsoft Edge for the first time?\n\nMicrosoft Edge needs to download the IE mode site list before it can apply IE mode settings. This process may not finish when the browser is starts. A policy is available that can force the loading of the site list before a website is loaded. For more information, see the DelayNavigationsForInitialSiteListDownload policy.\n\nWhy can't I open files or pages that are found by using file:// URLs in Microsoft Edge?\n\nFor security reasons, Microsoft Edge doesn't allow access to file:// URLs from pages served by HTTP or HTTPS.\n\nIf you want this functionality, the following two workarounds are available:\n• You can use the IntranetFileLinksEnabled group policy to permit links from HTTPS pages to open Intranet Zone file shares in Windows Explorer.\n• Pages loaded from the Intranet Zone into Microsoft Edge's IE mode feature are permitted to navigate directly to URLs using the file:// protocol."
    },
    {
        "link": "https://superuser.com/questions/678497/where-is-ie-11-history-located-on-the-fs",
        "document": "Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers."
    },
    {
        "link": "https://stackoverflow.com/questions/12294440/how-to-enable-developer-tools-always-on-in-ie",
        "document": "12 Developer Tools could be disabled with group policy.\n\nSince you are using Windows 10 home edition, we may consider change the following registry to disable F12 Developer Tools under Internet Exploer 11:\n\nOn the right pane, create a REG_DWORD 32 bit value \"Disabled\", and set the value to \"0x00000001\".\n\nThen you would find the F12 developer tools is not listed under the Internet Settings list, and F12 is not function;\n\nTo disable F12 Tools under Microsoft Edge, open regedit.exe and navigate to the following path:\n\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\MicrosoftEdge\\F12 (If no such archive, create one)\n\nOn the right pane, add a REG_DWORD 32 bit value called \"AllowDeveloperTools\", set the value to \"0x00000000\"\n\nThis disables the F12 tools under Microsoft Edge."
    },
    {
        "link": "https://superuser.com/questions/1226278/physical-location-of-internet-explorer-v11-history",
        "document": "Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers."
    },
    {
        "link": "https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/ie-mode",
        "document": "Internet Explorer mode (IE mode) integrates with Microsoft Edge DevTools. IE mode allows enterprises to specify a list of websites that only work in Internet Explorer 11. When you navigate to these websites in Microsoft Edge, an instance of Internet Explorer 11 runs and renders the site in a tab.\n\nIE mode allows enterprises to manage compatibility with technologies that are currently not compatible with any modern web browsers.\n\nSupport for the following technologies is included in IE mode:\n\nIn IE mode, the rendering process is based on Internet Explorer 11. The Microsoft Edge process manager handles the lifetime of the rendering process. The rendering process is constrained to the lifetime of the tab for a specific site (or app). When a tab renders in IE mode, the IE mode indicator icon appears in the address bar for the specific tab.\n\nIE mode is available on Windows 10 Version 1903 (May 2019 Update), and is coming to all supported Windows platforms.\n\nThe IE mode indicator icon appears in the address bar if the Enterprise admin has configured the website to appear in IE mode. To view the compatibility mode of a website in IE mode, click the IE mode indicator icon in the address bar:\n\nIf a tab uses IE mode, the tab has the following limitations:\n• None Pressing F12 or Ctrl+Shift+I opens a blank instance of the Microsoft Edge DevTools and displays the following message: Developer Tools are not available in Internet Explorer mode. To debug the page, open the page in IEChoose.\n\nTo debug the content of an IE mode tab, use IEChooser to open Internet Explorer DevTools, as follows:\n• None In Windows, open the Run dialog. For example, press Windows logo key + R.\n• None Enter , and then click OK.\n• None In IEChooser, select the entry for the IE mode tab.\n\nLaunch Microsoft Edge with remote debugging turned on from the command-line interface. Microsoft Visual Studio, Microsoft Visual Studio Code, and other development tools typically run a command to launch Microsoft Edge. The following command launches Microsoft Edge with the remote debugging port set to .\n\nAfter you launch Microsoft Edge using a command-line argument, IE mode is unavailable. You can still navigate to websites (or apps) that are otherwise displayed in IE mode. The website (or app) content renders using Chromium, not Internet Explorer 11. Parts of the webpages that rely on Internet Explorer 11, such as ActiveX controls, might not render correctly. The IE mode indicator icon doesn't appear in the address bar.\n\nIE mode remains unavailable until you close and restart Microsoft Edge.\n\nIf you have an existing application that uses the InternetExplorer object to automate Internet Explorer 11, but the Internet Explorer 11 desktop application isn't available, your application won't work. Internet Explorer 11 will be retired on June 15, 2022. See The future of Internet Explorer on Windows 10 is in Microsoft Edge.\n\nMicrosoft Edge doesn't support automating IE mode through the object, so applications that rely on this object will need to be updated, by using one of the recommended alternatives below. Applications that use the WebBrowser control will continue to work, and won't be affected by the removal of Internet Explorer 11.\n\nIf your automation application doesn't require IE mode for the website (or app) content to function correctly, we recommend updating your application to use Microsoft Edge instead of Internet Explorer 11. Many available automation tools support Microsoft Edge, including WebDriver and Playwright.\n• To learn more about automating Microsoft Edge using WebDriver, see Use WebDriver to automate Microsoft Edge.\n• To learn more about using Playwright, see Use Playwright to automate and test in Microsoft Edge.\n\nApplications that require IE mode for the website (or app) content to function correctly should use the control. The control uses the Internet Explorer platform (MSHTML/Trident) to render web content, and will work even if the Internet Explorer 11 desktop application isn't available.\n• Fix web compatibility issues using document modes and the Enterprise Mode site list"
    },
    {
        "link": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-it-pro/internet-explorer-11/internet-explorer",
        "document": "This browser is no longer supported.\n\nUpgrade to Microsoft Edge to take advantage of the latest features, security updates, and technical support."
    },
    {
        "link": "https://learn.microsoft.com/en-us/previous-versions/windows/desktop/legacy/hh968260(v=vs.85)",
        "document": "This content refers to an older version of F12 developer tools. Please visit our latest F12 tools documentation.\n\nIf you're looking for the Tools menu or toolbars in Internet Explorer 11, try:\n• \"The menu bar and the toolbar are missing in Internet Explorer.\"\n\nIf you got here by clicking an error message and simply want to avoid error messages in the future, try:\n• What should you do about Internet Explorer script errors?\n• Question: I cannot turn off the automatic script debugger under explorer options.\n\nThis is a quick reference to the tools, commands, and menus available in F12 tools, built into Internet Explorer 10. Each element of the interface is identified and has a short description of what it does. For more information about using the Developer tools in Windows Internet Explorer 8, see Developer Tools User Interface Reference. For more on using F12 tools in Windows Internet Explorer 9, see How to use F12 Developer Tools to Debug your Webpages.\n\nF12 tools provide a set of tools that you can use to design, debug, or view webpage source code and behavior. F12 tools can be opened in a separate window or pinned to the bottom of the webpage that you're debugging. The tools range from a simple color picker to a full-featured script debugger for a debugging environment that's much like standalone development tools. The Profiler and Network capture tools can help you track down performance problems in your code or on the network. Each page you open in your browser can have its own F12 tools session, making it easy to work on multiple webpages at the same time. The Script debugger supports static and dynamic scripts for seamless debugging with HTML5 Web Workers threads.\n\nTo open F12 tools, press \"F12\" from the webpage you want to debug or inspect. To close F12 tools, press \"F12\" again.\n\nThis image shows a typical view of the main tools UI:\n\nThe following sections describe the details of each Menu item.\n\nNote Some submenu settings can only be changed if Internet Explorer Protected Mode is turned off. If you make changes to these settings, such as Disable scripts, and then turn Protected Mode on, you won't be able to make changes until Protected Mode is turned off again. To turn off Protected Mode, follow these steps:\n• In Internet Explorer, click Tools, and then click Internet options.\n• Click Security, and then clear the Enable Protected Mode check box.\n• Click OK, and then close and restart Internet Explorer.\n\nOn the File menu you can undo changes, choose your source viewer, view a Help link (this article), and close the tools.\n\nOn the Find menu, you can choose the \"Select element by click\" command from a menu. A faster way to do the same thing is to use the Select Element by click button available in any view.\n\nThese tools help you test how users experience your site based on their browser configuration. These commands toggle the features on and off (click to disable, and click again to enable).\n\nThe View menu contains settings that put information about elements, such as class and id attributes, visually on the page. Class and ID, link path, tab indexes, and access key information are shown as text label overlays on the webpage. Double-click a label to select the text, right-click and select Copy, or press Ctrl+C to copy the text to the clipboard.\n\nThe Source submenu provides access to various source views of a document. When selected, the requested source is displayed in a new window. To get the Element source with style and DOM (element) options, select an HTML element first. You can use the Select element by click command, or click an element in the HTML tree.\n\nThis menu provides information about images on a webpage. The options that show image dimensions, file size, paths, or alt text are shown as text label overlays on the webpage. You can double-click a label to select, and then right-click or press Ctrl+C to copy the text. The following shows an image with all information displayed.\n\nThese settings can help ensure your pages load into the browser as they exist on the server, and not from a local cached copy. This is helpful when you're regularly changing the source or testing the server response.\n\nThese settings provide tools that help you with common tasks. You can do things such as test a page in different resolutions, measure elements on the page, and capture the specific color of a point on the page.\n\nProvides a submenu with a list of predefined screen sizes, and a custom size option. When you pick a predefined screen size, the Internet Explorer window resizes to the new dimensions immediately. Preset screen sizes can be selected by using the shortcut keys shown in the submenu. You can create your own custom screen sizes. To Add a custom screen size, do the following:\n• Click Tools, click Resize, and then click Custom to open the Resize Browser dialog box.\n• Type the Width and Height you want, and click Add . This adds your custom screen size to the list.\n• To remove a custom size, select it in the list, and then click Delete. To use a custom size, open the Resize Browser dialog box, click a size, and then click Resize. The list of custom sizes persists across browser sessions until you delete them. New screen sizes aren't available to browser sessions that are already open when you add the custom size. Click Close or press ESC to close the Resize Browser dialog box. Lets you change the way Internet Explorer appears to a website by changing the user agent string (UA). A submenu lists versions of Internet Explorer on the PC and Windows Phone, as well as several other brands of browsers. The custom setting lets you add and set your own UA strings. The friendly name is shown on the list of available UA strings. The Default setting returns the browser to its current default setting. Lets you keep or clear console messages and the Network tab log when you navigate to a new webpage in a debugging session. By default, Internet Explorer clears all console messages, and the Network view capture logs when you leave a page. Lets you to measure objects on the screen. The command opens the Ruler dialog box with options and hints for using the tool. Multiple colors and rulers are supported. For better precision, press CTRL+M to toggle a magnifier on or off. After a ruler is drawn, it shows the (x-y) coordinates of each end of the ruler relative to where the points are on the screen. The ruler length is shown at the center of the ruler in pixels. This information is also shown at the bottom of the Ruler dialog box when you hover over a defined ruler. A ruler can be moved, resized, or re-angled. To remove a ruler, select it and press the Delete key. When done, click the X button at the upper-right corner to close the dialog box. When the dialog box is closed, all rulers are hidden. They reappear when you reopen the Ruler dialog box. The color picker tool can sample colors from any object on the page. The Color Picker dialog box shows the color sample, and the color's RGB and HEX values, that the picker is on. To see a color value used on a webpage, click the color of interest with the eyedropper cursor. To pick a different color sample, click the eyedropper icon on the dialog box and repeat the previous step. Click Copy and close to copy the HEX value to the clipboard for use in your webpage. Click the X button or Hide color picker on the Tools menu to close the dialog box. Helps you understand and debug page layout by making it easy to identify the size and position of elements. You can set a color to identify all elements of a certain element type. Use CSS selector syntax to specify elements on a webpage. For example, to highlight all paragraphs, use p in the selector field, and set a color. Elements are outlined after you close the dialog box. For more info about using selectors, see Understanding CSS Selectors.\n\nThis tool validates the current webpage or file using web-based validation services. You get a confirmation dialog box before sending your current page to the web, letting you cancel without sending. Validation reports open in a new window so you don't lose the page you're debugging.\n\nThe local HTML and CSS options open the validation website where you can manually enter a URL, browse for a local file, or paste in some code to validate.\n\nThe Browser Mode menu allows you to test how your page appears and behaves for users running Internet Explorer 10 and earlier versions of Internet Explorer.\n\nWhen you first load a webpage, F12 tools determines the default Browser Mode and selects the appropriate mode. A check mark appears next to the current mode of the document. Changing the mode causes the webpage to refresh. The page remains in this mode until another mode is chosen or you close the browser. For more info, see Testing Browser and Document Compatibility Modes with the Developer Tools, and IE10 Compat Inspector on the Internet Explorer blog.\n\nWith this tool you can modify the document mode of the current page without modifying the DOCTYPE or META tag in the source.\n\nWhen you first load a webpage, F12 tools determines the default Document Mode and selects the appropriate mode. The text Page default in parentheses indicates the default mode of the webpage. A check mark appears next to the current mode of the document. Changing the mode causes the webpage to refresh, and remains in this mode until another mode is chosen or the browser is closed. For more info, see the article on Testing Browser and Document Compatibility Modes with the Developer Tools.\n\nThe primary pane (left side) and details pane (right side) provide views of HTML, CSS, or Script source, or status and reports for the console, profiler, and network views. In HTML view you can edit the source in the left pane. You can resize the viewable area of the left and right pane by moving the divider bar between the two views.\n\nWhen the view changes, so does the toolbar and the details view. The following tables describe the views, details, and toolbars you can use.\n\nThe HTML tab lets you to inspect your document sources and to make changes to test their effect. These changes can then be saved into a text file that can be used to incorporate new or modified material into the main site.\n\nThis view contains the DOM structure of the HTML tree for the current document. When a page first loads, or the Refresh button is clicked, the tree view is collapsed. This view can be expanded or collapsed by clicking the plus (+) sign by an element or node. You can use the tree structure to drill down to the element you want to inspect, or use Select element by click to find the element within the document for you. You can click on any attribute name or value to edit it directly. When you click an element, the properties associated with it show in the right pane.\n\nThis toolbar provides commands you can use in the HTML tab.\n\nThe details view shows information about elements selected in the HTML view.\n\nThe CSS tab shows the content of the currently selected style sheet and helps you see the effect style sheets have on a webpage especially with multiple style sheets where rules can overlap. Use the View styles drop-down list to switch between style sheets. You can change styles in the CSS view and save them to a text file using the Save CSS button.\n\nThe check boxes let you to enable and disable specific properties or entire rules. When the style rule's check box is checked, all properties of that rule are enabled. When cleared, the all properties of that rule are disabled. Each property also has its own check box to turn that property on or off. Click a property name or value to edit it. Press \"Enter\" to accept and apply changes immediately.\n\nNote For numeric properties, you can click the value and use the up and down arrow keys to change the value like a spin control.\n\nIn the CSS tab, the toolbar changes to provide these commands:\n\nThe F12 tools console tab offers a full width view of the same information you see in Script view, where you see the Console view in the right pane. You can receive error messages from Internet Explorer, as well as send your own messages back from your code without having to break the flow of your execution.\n\nYou can also use the F12 toolsConsole view to immediately run script statements outside your program code.\n\nFor more info about using the Console view and APIs, see Using the F12 Tools Console to View Errors and Status. For a list of Console view errors, see F12 tools console error messages.\n\nThe Script tab lets you see and interact with the JavaScript source on the webpage . Click the View sources drop-down button to pick other script files. Script view shows line numbers and syntax coloring. Click the left margin or a line number to set or clear breakpoints. You can select text in this pane, and right click for a context menu that offers additional commands. For more info, see Using F12 Developer Tools to Debug JavaScript Errors.\n\nThe following image shows the toolbar command icons.\n\nThe following table describes each of the preceding commands in more detail.\n\nThe details pane in theScript view displays information about the code in the left pane. Click to choose one of the detailed views that include console and error messages, local variables, watch variables, function call stack, and the list of breakpoints.\n\nThe console receives error messages from Internet Explorer. Using the console API, your code can send messages to the console without having to break the flow of your execution. This is less intrusive than using the traditional alert() method or printing to the screen. The Console command line can run single and multi-line script statements outside your program code. Statements are executed immediately and results appear in the Console's pane. For more info about the console, see Using the F12 Tools Console to View Errors and Status. View variables from any scope. To add local or global variables and objects, do one of the following:\n• In the right pane, click the Click to add line and type a variable or object name.\n• Right-click a variable or object in the left pane and choose Add watch. This command requires that the debugger be started and execution be stopped at a breakpoint. When the debugger is running and execution stops at a breakpoint, you can view local variables within the scope of the current function. If you step into another function, the local variable view reflects the new current function. Trace the flow of function calls made by executing code. The current function is on top and the function that calls it is below it in the stack. You can double-click a function to go to that function definition in the source. This command requires the debugger to be started and execution be stopped at a breakpoint. Set breakpoints to stop execution at this point of the script in order to inspect the code. From the Script view pane, you can set breakpoints by doing one of the following:\n• Position the cursor on a line of code and press F9. Breakpoints can be set at any time. When a breakpoint is set, the line of code is highlighted and an icon appears next to the line number. You can also set a conditional breakpoint that stops execution when the condition is true, such as when an exception happens or a variable exceeds a specified value. To set a condition to a breakpoint, right-click a breakpoint in either the left or right pane, and select Condition. From the Breakpoints pane, you can view a list of all the breakpoints set that are related to the webpage or site you're debugging. You can double-click a breakpoint item to go to that breakpoint in the code. Right-click the pane for a context menu with more options. For more info, see Using the F12 Developer Tools to Debug JavaScript Errors.\n\nF12 tools provides a built-in script profiler that lets you to profile your running JavaScript code in Internet Explorer.\n\nThe Current view controls how profiled information is presented. Right-click anywhere in the viewable area, choose Add / Remove columns, and then click the column names you want in the report (any names preceded by a check mark should already be visible in the report list). Click the title of a column to sort the report based on that column. You can double-click an entry to open the Script view and display the code where this item is defined.\n\nThe profiler toolbar lets you change views, export data, start and stop profiling, and view profiling reports.\n\nFor more info about using the Profiler, see Using the Profiler Tool to analyze the performance of your code.\n\nThe Network tab can help you diagnose network-related issues by showing all the traffic that is related to a page and exposing details about individual connections. You can see the relative timing that each item on a webpage takes to load and render, so you can quickly see and solve problems.\n\nFor more info about the Network view, see Using Internet Explorer Developer Tools Network Capture\n\nThe Search box provides a way to quickly find specific text in the currently open file or report. Search is context-sensitive and what it can find is based on the currently selected view. For example, in the HTML view, the Search box displays the message \"Search HTML\" and searches in the HTML view. Likewise, in the CSS view, the box shows \"Search CSS\" and finds text in the CSS view.\n\nSearch highlights all matching words and next and previous buttons let you navigate the matches. As you traverse the list of matches, the current match is highlighted and brought into view.\n\nIn the HTML view, you can use W3C Selectors API syntax to search for specific elements. For example, use the keyword \"@div\" to find all the div elements in the page. You can search for CSS class names by \"@.myClassName\" to find all elements defined as \"myClassName\" . You can also narrow your search down by element. For example, \"@div.myClassName\" only finds div elements with \"myClassName\" defined. Search terms are case sensitive when searching for selector class names. For more info about CSS selectors read Understanding CSS Selectors.\n\nFor all other views, such as the CSS view, use regular text keywords. Search is not case sensitive in this case.\n\nEach Internet Explorer instance has its own instance of F12 tools. When working with multiple webpages, use the Pin feature to attach each instance of F12 tools to its associated Internet Explorer instance. When script debugging starts, F12 tools opens in a separate window.\n\nThe F12 tools window offers the normal Minimize, Maximize, Restore, and Close window controls, as well as additional pinning controls.\n• Click the Pin button to attach the F12 tools interface to the Internet Explorer session that opened it. This is useful when multiple instances of F12 tools are opened. However, when debugging is started in Script view, F12 tools always opens in its own window.\n• Click the Unpin button to detach F12 tools from the Internet Explorer instance.\n\nTo resize a pinned F12 tools session, stretch the upper edge of the window to size. Click the Minimize button or press Ctrl+M to minimize the pinned F12 tools session. In a minimized state, F12 tools remains attached to the window and only the Menu Bar is visible.\n\nHow to use F12 Developer Tools to Debug your Webpages\n\nTesting Browser and Document Compatibility Modes with the Developer Tools"
    },
    {
        "link": "https://learn.microsoft.com/en-us/shows/inside/event-viewer",
        "document": "The (Windows) Event Viewer shows the event of the system.\n\nThe \"Windows Logs\" section contains (of note) the Application, Security and System logs - which have existed since Windows NT 3.1.\n\nEvent Tracing for Windows (ETW) providers are displayed in the \"Applications and Services Log\" tree. Logging for individual components can be view, enabled/disabled - and are a great place to start troubleshooting a component."
    },
    {
        "link": "https://learn.microsoft.com/en-us/iis/configuration/system.webserver/httplogging",
        "document": "The element allows you to configure IIS to generate log entries for only successful requests, failed requests, or both. After you configure logging for each Web site at the server level, you can use this element to enable selective logging for individual URLs. By default, HTTP logging is enabled for all requests on Internet Information Services (IIS) 7.\n\nYou can view the log file for a site at any time to see which requests are failing and which requests are succeeding. When you no longer want IIS to log certain requests for a site, disable logging for that site.\n\nThe element is included in the default installation of IIS 7.\n\nHow to enable HTTP logging for a site or application\n• \n• None If you are using Windows Server 2012 or Windows Server 2012 R2:\n• On the taskbar, click Server Manager, click Tools, and then click Internet Information Services (IIS) Manager.\n• None If you are using Windows 8 or Windows 8.1:\n• Hold down the Windows key, press the letter X, and then click Control Panel.\n• None If you are using Windows Server 2008 or Windows Server 2008 R2:\n• On the taskbar, click Start, point to Administrative Tools, and then click Internet Information Services (IIS) Manager.\n• None If you are using Windows Vista or Windows 7:\n• On the taskbar, click Start, and then click Control Panel.\n• None In the Connections pane, expand the server name, expand Sites, and then navigate to the Web site or application for which you want to configure HTTP logging.\n• None In the Actions pane, click Enable to enable logging.\n• None Select the log file format you want to use for your site or application in the Format drop-down list, and, if you want to change the default location where IIS stores log files, type the path where you want to store the log files for the site or application in the Directory box.\n• None (Optional) If you selected W3C in the Format drop-down list in step 5, click Select Fields.\n• None (Optional) In the W3C Logging Fields dialog box, select the W3C fields you want to log, clear any W3C fields you do not want to log, and then click OK.\n\n\n\nYou can configure the element at the server level in the ApplicationHost.config file and at the site, application, or URL level in the appropriate Web.config file.\n\nThe following configuration example, when included in a Web.config file for a site or application, configures HTTP logging and specifies that IIS should only log requests that generate errors.\n\nThe following examples enable HTTP logging for a Web site named Contoso, and specify that IIS shouldn't log any requests."
    }
]