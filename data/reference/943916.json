[
    {
        "link": "https://gnu.org/s/parted/manual/parted.html",
        "document": "Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, with no Front-Cover Texts, and with no Back-Cover Texts. A copy of the license is included in the section entitled “GNU Free Documentation License”.\n\nThis file documents the use of GNU Parted, a program for creating and manipulating partition tables.\n\nThis document applies roughly to version 3.6 of GNU Parted.\n\nThe original version was written by Andrew Clausen in text format. Richard M. Kreuter translated it into Texinfo format in 2002, to be heavily edited by Leslie P. Polzer in 2006.\n\nNext: This manual’s history, Previous: Related information, Up: GNU Parted User Manual [Index] Copyright © 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n• PREAMBLE The purpose of this License is to make a manual, textbook, or other functional and useful document free in the sense of freedom: to assure everyone the effective freedom to copy and redistribute it, with or without modifying it, either commercially or noncommercially. Secondarily, this License preserves for the author and publisher a way to get credit for their work, while not being considered responsible for modifications made by others. This License is a kind of “copyleft”, which means that derivative works of the document must themselves be free in the same sense. It complements the GNU General Public License, which is a copyleft license designed for free software. We have designed this License in order to use it for manuals for free software, because free software needs free documentation: a free program should come with manuals providing the same freedoms that the software does. But this License is not limited to software manuals; it can be used for any textual work, regardless of subject matter or whether it is published as a printed book. We recommend this License principally for works whose purpose is instruction or reference.\n• APPLICABILITY AND DEFINITIONS This License applies to any manual or other work, in any medium, that contains a notice placed by the copyright holder saying it can be distributed under the terms of this License. Such a notice grants a world-wide, royalty-free license, unlimited in duration, to use that work under the conditions stated herein. The “Document”, below, refers to any such manual or work. Any member of the public is a licensee, and is addressed as “you”. You accept the license if you copy, modify or distribute the work in a way requiring permission under copyright law. A “Modified Version” of the Document means any work containing the Document or a portion of it, either copied verbatim, or with modifications and/or translated into another language. A “Secondary Section” is a named appendix or a front-matter section of the Document that deals exclusively with the relationship of the publishers or authors of the Document to the Document’s overall subject (or to related matters) and contains nothing that could fall directly within that overall subject. (Thus, if the Document is in part a textbook of mathematics, a Secondary Section may not explain any mathematics.) The relationship could be a matter of historical connection with the subject or with related matters, or of legal, commercial, philosophical, ethical or political position regarding them. The “Invariant Sections” are certain Secondary Sections whose titles are designated, as being those of Invariant Sections, in the notice that says that the Document is released under this License. If a section does not fit the above definition of Secondary then it is not allowed to be designated as Invariant. The Document may contain zero Invariant Sections. If the Document does not identify any Invariant Sections then there are none. The “Cover Texts” are certain short passages of text that are listed, as Front-Cover Texts or Back-Cover Texts, in the notice that says that the Document is released under this License. A Front-Cover Text may be at most 5 words, and a Back-Cover Text may be at most 25 words. A “Transparent” copy of the Document means a machine-readable copy, represented in a format whose specification is available to the general public, that is suitable for revising the document straightforwardly with generic text editors or (for images composed of pixels) generic paint programs or (for drawings) some widely available drawing editor, and that is suitable for input to text formatters or for automatic translation to a variety of formats suitable for input to text formatters. A copy made in an otherwise Transparent file format whose markup, or absence of markup, has been arranged to thwart or discourage subsequent modification by readers is not Transparent. An image format is not Transparent if used for any substantial amount of text. A copy that is not “Transparent” is called “Opaque”. Examples of suitable formats for Transparent copies include plain ASCII without markup, Texinfo input format, LaTeX input format, SGML or XML using a publicly available DTD, and standard-conforming simple HTML, PostScript or PDF designed for human modification. Examples of transparent image formats include PNG, XCF and JPG. Opaque formats include proprietary formats that can be read and edited only by proprietary word processors, SGML or XML for which the DTD and/or processing tools are not generally available, and the machine-generated HTML, PostScript or PDF produced by some word processors for output purposes only. The “Title Page” means, for a printed book, the title page itself, plus such following pages as are needed to hold, legibly, the material this License requires to appear in the title page. For works in formats which do not have any title page as such, “Title Page” means the text near the most prominent appearance of the work’s title, preceding the beginning of the body of the text. The “publisher” means any person or entity that distributes copies of the Document to the public. A section “Entitled XYZ” means a named subunit of the Document whose title either is precisely XYZ or contains XYZ in parentheses following text that translates XYZ in another language. (Here XYZ stands for a specific section name mentioned below, such as “Acknowledgements”, “Dedications”, “Endorsements”, or “History”.) To “Preserve the Title” of such a section when you modify the Document means that it remains a section “Entitled XYZ” according to this definition. The Document may include Warranty Disclaimers next to the notice which states that this License applies to the Document. These Warranty Disclaimers are considered to be included by reference in this License, but only as regards disclaiming warranties: any other implication that these Warranty Disclaimers may have is void and has no effect on the meaning of this License.\n• VERBATIM COPYING You may copy and distribute the Document in any medium, either commercially or noncommercially, provided that this License, the copyright notices, and the license notice saying this License applies to the Document are reproduced in all copies, and that you add no other conditions whatsoever to those of this License. You may not use technical measures to obstruct or control the reading or further copying of the copies you make or distribute. However, you may accept compensation in exchange for copies. If you distribute a large enough number of copies you must also follow the conditions in section 3. You may also lend copies, under the same conditions stated above, and you may publicly display copies.\n• COPYING IN QUANTITY If you publish printed copies (or copies in media that commonly have printed covers) of the Document, numbering more than 100, and the Document’s license notice requires Cover Texts, you must enclose the copies in covers that carry, clearly and legibly, all these Cover Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on the back cover. Both covers must also clearly and legibly identify you as the publisher of these copies. The front cover must present the full title with all words of the title equally prominent and visible. You may add other material on the covers in addition. Copying with changes limited to the covers, as long as they preserve the title of the Document and satisfy these conditions, can be treated as verbatim copying in other respects. If the required texts for either cover are too voluminous to fit legibly, you should put the first ones listed (as many as fit reasonably) on the actual cover, and continue the rest onto adjacent pages. If you publish or distribute Opaque copies of the Document numbering more than 100, you must either include a machine-readable Transparent copy along with each Opaque copy, or state in or with each Opaque copy a computer-network location from which the general network-using public has access to download using public-standard network protocols a complete Transparent copy of the Document, free of added material. If you use the latter option, you must take reasonably prudent steps, when you begin distribution of Opaque copies in quantity, to ensure that this Transparent copy will remain thus accessible at the stated location until at least one year after the last time you distribute an Opaque copy (directly or through your agents or retailers) of that edition to the public. It is requested, but not required, that you contact the authors of the Document well before redistributing any large number of copies, to give them a chance to provide you with an updated version of the Document.\n• MODIFICATIONS You may copy and distribute a Modified Version of the Document under the conditions of sections 2 and 3 above, provided that you release the Modified Version under precisely this License, with the Modified Version filling the role of the Document, thus licensing distribution and modification of the Modified Version to whoever possesses a copy of it. In addition, you must do these things in the Modified Version:\n• Use in the Title Page (and on the covers, if any) a title distinct from that of the Document, and from those of previous versions (which should, if there were any, be listed in the History section of the Document). You may use the same title as a previous version if the original publisher of that version gives permission.\n• List on the Title Page, as authors, one or more persons or entities responsible for authorship of the modifications in the Modified Version, together with at least five of the principal authors of the Document (all of its principal authors, if it has fewer than five), unless they release you from this requirement.\n• State on the Title page the name of the publisher of the Modified Version, as the publisher.\n• Preserve all the copyright notices of the Document.\n• Add an appropriate copyright notice for your modifications adjacent to the other copyright notices.\n• Include, immediately after the copyright notices, a license notice giving the public permission to use the Modified Version under the terms of this License, in the form shown in the Addendum below.\n• Preserve in that license notice the full lists of Invariant Sections and required Cover Texts given in the Document’s license notice.\n• Include an unaltered copy of this License.\n• Preserve the section Entitled “History”, Preserve its Title, and add to it an item stating at least the title, year, new authors, and publisher of the Modified Version as given on the Title Page. If there is no section Entitled “History” in the Document, create one stating the title, year, authors, and publisher of the Document as given on its Title Page, then add an item describing the Modified Version as stated in the previous sentence.\n• Preserve the network location, if any, given in the Document for public access to a Transparent copy of the Document, and likewise the network locations given in the Document for previous versions it was based on. These may be placed in the “History” section. You may omit a network location for a work that was published at least four years before the Document itself, or if the original publisher of the version it refers to gives permission.\n• For any section Entitled “Acknowledgements” or “Dedications”, Preserve the Title of the section, and preserve in the section all the substance and tone of each of the contributor acknowledgements and/or dedications given therein.\n• Preserve all the Invariant Sections of the Document, unaltered in their text and in their titles. Section numbers or the equivalent are not considered part of the section titles.\n• Delete any section Entitled “Endorsements”. Such a section may not be included in the Modified Version.\n• Do not retitle any existing section to be Entitled “Endorsements” or to conflict in title with any Invariant Section. If the Modified Version includes new front-matter sections or appendices that qualify as Secondary Sections and contain no material copied from the Document, you may at your option designate some or all of these sections as invariant. To do this, add their titles to the list of Invariant Sections in the Modified Version’s license notice. These titles must be distinct from any other section titles. You may add a section Entitled “Endorsements”, provided it contains nothing but endorsements of your Modified Version by various parties—for example, statements of peer review or that the text has been approved by an organization as the authoritative definition of a standard. You may add a passage of up to five words as a Front-Cover Text, and a passage of up to 25 words as a Back-Cover Text, to the end of the list of Cover Texts in the Modified Version. Only one passage of Front-Cover Text and one of Back-Cover Text may be added by (or through arrangements made by) any one entity. If the Document already includes a cover text for the same cover, previously added by you or by arrangement made by the same entity you are acting on behalf of, you may not add another; but you may replace the old one, on explicit permission from the previous publisher that added the old one. The author(s) and publisher(s) of the Document do not by this License give permission to use their names for publicity for or to assert or imply endorsement of any Modified Version.\n• COMBINING DOCUMENTS You may combine the Document with other documents released under this License, under the terms defined in section 4 above for modified versions, provided that you include in the combination all of the Invariant Sections of all of the original documents, unmodified, and list them all as Invariant Sections of your combined work in its license notice, and that you preserve all their Warranty Disclaimers. The combined work need only contain one copy of this License, and multiple identical Invariant Sections may be replaced with a single copy. If there are multiple Invariant Sections with the same name but different contents, make the title of each such section unique by adding at the end of it, in parentheses, the name of the original author or publisher of that section if known, or else a unique number. Make the same adjustment to the section titles in the list of Invariant Sections in the license notice of the combined work. In the combination, you must combine any sections Entitled “History” in the various original documents, forming one section Entitled “History”; likewise combine any sections Entitled “Acknowledgements”, and any sections Entitled “Dedications”. You must delete all sections Entitled “Endorsements.”\n• COLLECTIONS OF DOCUMENTS You may make a collection consisting of the Document and other documents released under this License, and replace the individual copies of this License in the various documents with a single copy that is included in the collection, provided that you follow the rules of this License for verbatim copying of each of the documents in all other respects. You may extract a single document from such a collection, and distribute it individually under this License, provided you insert a copy of this License into the extracted document, and follow this License in all other respects regarding verbatim copying of that document.\n• AGGREGATION WITH INDEPENDENT WORKS A compilation of the Document or its derivatives with other separate and independent documents or works, in or on a volume of a storage or distribution medium, is called an “aggregate” if the copyright resulting from the compilation is not used to limit the legal rights of the compilation’s users beyond what the individual works permit. When the Document is included in an aggregate, this License does not apply to the other works in the aggregate which are not themselves derivative works of the Document. If the Cover Text requirement of section 3 is applicable to these copies of the Document, then if the Document is less than one half of the entire aggregate, the Document’s Cover Texts may be placed on covers that bracket the Document within the aggregate, or the electronic equivalent of covers if the Document is in electronic form. Otherwise they must appear on printed covers that bracket the whole aggregate.\n• TRANSLATION Translation is considered a kind of modification, so you may distribute translations of the Document under the terms of section 4. Replacing Invariant Sections with translations requires special permission from their copyright holders, but you may include translations of some or all Invariant Sections in addition to the original versions of these Invariant Sections. You may include a translation of this License, and all the license notices in the Document, and any Warranty Disclaimers, provided that you also include the original English version of this License and the original versions of those notices and disclaimers. In case of a disagreement between the translation and the original version of this License or a notice or disclaimer, the original version will prevail. If a section in the Document is Entitled “Acknowledgements”, “Dedications”, or “History”, the requirement (section 4) to Preserve its Title (section 1) will typically require changing the actual title.\n• TERMINATION You may not copy, modify, sublicense, or distribute the Document except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, or distribute it is void, and will automatically terminate your rights under this License. However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, receipt of a copy of some or all of the same material does not give you any rights to use it.\n• FUTURE REVISIONS OF THIS LICENSE The Free Software Foundation may publish new, revised versions of the GNU Free Documentation License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. See https://www.gnu.org/licenses/. Each version of the License is given a distinguishing version number. If the Document specifies that a particular numbered version of this License “or any later version” applies to it, you have the option of following the terms and conditions either of that specified version or of any later version that has been published (not as a draft) by the Free Software Foundation. If the Document does not specify a version number of this License, you may choose any version ever published (not as a draft) by the Free Software Foundation. If the Document specifies that a proxy can decide which future versions of this License can be used, that proxy’s public statement of acceptance of a version permanently authorizes you to choose that version for the Document.\n• RELICENSING “Massive Multiauthor Collaboration Site” (or “MMC Site”) means any World Wide Web server that publishes copyrightable works and also provides prominent facilities for anybody to edit those works. A public wiki that anybody can edit is an example of such a server. A “Massive Multiauthor Collaboration” (or “MMC”) contained in the site means any set of copyrightable works thus published on the MMC site. “CC-BY-SA” means the Creative Commons Attribution-Share Alike 3.0 license published by Creative Commons Corporation, a not-for-profit corporation with a principal place of business in San Francisco, California, as well as future copyleft versions of that license published by that same organization. “Incorporate” means to publish or republish a Document, in whole or in part, as part of another Document. An MMC is “eligible for relicensing” if it is licensed under this License, and if all works that were first published under this License somewhere other than this MMC, and subsequently incorporated in whole or in part into the MMC, (1) had no cover texts or invariant sections, and (2) were thus incorporated prior to November 1, 2008. The operator of an MMC Site may republish an MMC contained in the site under CC-BY-SA on the same site at any time before August 1, 2009, provided the MMC is eligible for relicensing. ADDENDUM: How to use this License for your documents To use this License in a document you have written, include a copy of the License in the document and put the following copyright and license notices just after the title page: Copyright (C) . Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. A copy of the license is included in the section entitled ``GNU Free Documentation License''. If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts, replace the “with…Texts.” line with this: with the Invariant Sections being , with the Front-Cover Texts being , and with the Back-Cover Texts being . If you have Invariant Sections without Cover Texts, or some other combination of the three, merge those two alternatives to suit the situation. If your document contains nontrivial examples of program code, we recommend releasing these examples in parallel under your choice of free software license, such as the GNU General Public License, to permit their use in free software."
    },
    {
        "link": "https://gnu.org/software/parted/manual",
        "document": "This manual (parted) is available in the following formats:\n• HTML (112K bytes) - entirely on one web page.\n• HTML - with one web page per node.\n• HTML compressed (28K gzipped characters) - entirely on one web page.\n• HTML compressed (32K gzipped tar file) - with one web page per node.\n\nYou can buy printed copies of some manuals (among other items) from the Free Software Foundation; this helps support FSF activities."
    },
    {
        "link": "https://wiki.archlinux.org/title/Parted",
        "document": "GNU Parted is a program for creating and manipulating partition tables. GParted is a GUI frontend.\n\nInstall one of the following packages:\n\nParted has two modes: command line and interactive. Parted should always be started with:\n\nwhere is block device name like , , , etc. If you omit the argument, parted will attempt to guess which device you want.\n\nIn command line mode, this is followed by one or more commands. For example:\n\nNote: Options (like ) can only be specified on the command line.\n\nInteractive mode simplifies the partitioning process and reduces unnecessary repetition by automatically applying all partitioning commands to the specified device.\n\nIn order to start operating on a device, execute:\n\nYou will notice that the command-line prompt changes from a hash ( ) to : this also means that the new prompt is not a command to be manually entered when running the commands in the examples.\n\nTo see a list of the available commands, enter:\n\nWhen finished, or if wishing to implement a partition table or scheme for another device, exit from parted with:\n\nAfter exiting, the command-line prompt will change back to .\n\nIf you do not give a parameter to a command, Parted will prompt you for it. For example:\n\nSince many partitioning systems have complicated constraints, Parted will usually do something slightly different to what you asked. (For example, create a partition starting at 10.352Mb, not 10.4Mb) If the calculated values differ too much, Parted will ask you for confirmation. If you know exactly what you want, or to see exactly what Parted is doing, it helps to specify partition endpoints in sectors (with the \"s\" suffix) and give the \"unit s\" command so that the partition endpoints are displayed in sectors.\n\nAs of parted-2.4, when you specify start and/or end values using IEC binary units like “MiB”, “GiB”, “TiB”, etc., parted treats those values as exact, and equivalent to the same number specified in bytes (i.e., with the “B” suffix), in that it provides no “helpful” range of sloppiness. Contrast that with a partition start request of “4GB”, which may actually resolve to some sector up to 500MB before or after that point. Thus, when creating a partition, you should prefer to specify units of bytes (“B”), sectors (“s”), or IEC binary units like “MiB”, but not “MB”, “GB”, etc.\n\nWarning: If you create a new partition table on a disk with data on it, it will erase all the data on the disk. Make sure this is what you want to do.\n\nYou need to (re)create the partition table of a device when it has never been partitioned before, or when you want to change the type of its partition table. Recreating the partition table of a device is also useful when the partition scheme needs to be restructured from scratch.\n\nOpen each device whose partition table must be (re)created with:\n\nTo then create a new GUID Partition Table, use the following command:\n\nTo create a new Master Boot Record/MS-DOS partition table instead, use:\n\nYou can decide the number and size of the partitions the devices should be split into, and which directories will be used to mount the partitions in the installed system (also known as mount points). See Partitioning#Partition scheme for the required partitions.\n\nThe following command will be used to create partitions:\n• is interpreted differently based on the partition table:\n• MBR: the parameter is interpreted as , which can be one of , or .\n• GPT: the parameter is interpreted as , which sets the PARTLABEL attribute of the partition. To avoid setting a partition label, pass an empty quoted string ( ). Note: Many tutorials on the web use commands which start with even for GPT. They are wrong, this would set \"primary\" as the partition label.\n• is an identifier chosen among those listed by entering as the closest match to the file system that you will use. The mkpart command does not actually create the file system: the parameter will simply be used by parted to set partition type GUID for GPT partitions or partition type ID for MBR partitions. Tip:\n• parted maps types named after Linux native file systems to the same \"Linux filesystem\" partition type (GUID or ID ), so it is perfectly safe to e.g. use for an ext4-formatted partition.\n• When using GPT, it is advised to follow the Discoverable Partitions Specification since systemd-gpt-auto-generator can automount them. The EFI system partition, XBOOTLDR partition, swap partition and home partition types can be changed using the set command, while for the root partition and others, you will need to specify the partition type UUID manually with the command.\n• is the beginning of the partition from the start of the device. It consists of a number followed by a unit, for example means start at 1 MiB.\n• is the end of the partition from the start of the device (not from the value). It has the same syntax as , for example means end at the end of the device (use all the remaining space).\n\nThe following command will be used to flag the partition that contains the directory as bootable:\n• is the number of the partition to be flagged (see the output of the command).\n• is an alias for on GPT. [2]\n• sets the Legacy BIOS Bootable attribute. This attribute is used by syslinux[3] and other software that has a traditional PC-AT BIOS firmware implementation.[4]\n\nIn every instance, a special bootable EFI system partition is required.\n\nIf creating a new EFI system partition, use the following commands (the recommended size is at least 1 GiB):\n\nThe remaining partition scheme is entirely up to you. For one root partition using 100% of remaining space:\n\nFor separate swap (4 GiB) and (all remaining space) partitions:\n\nAnd for separate swap (4 GiB), (32 GiB) and (all remaining space) partitions:\n\nFor a minimum single primary partition using all available disk space, the following command would be used:\n\nIn the following instance, a 4 GiB swap partition will be created, followed by a partition using all the remaining space:\n\nIn the final example below, separate (1 GiB), swap (4 GiB), (32 GiB), and (all remaining space) partitions will be created:\n\nWarning: ext2/3/4 partitions that are being resized must be unmounted and not in use. It is difficult and hazardous to try to edit the root filesystem on a running OS; use a live media/rescue system instead.\n\nIf you are growing a partition, you have to first resize the partition and then resize the filesystem on it, while for shrinking the filesystem must be resized before the partition to avoid data loss.\n\nWhere is the number of the partition you are growing, and is the new end of the partition (which needs to be larger than the old end).\n\nThen, to grow the (ext2/3/4) filesystem on the partition (if is not specified, it will default to the size of the partition):\n\nWhere stands for the mount point of the partition you are growing, and in the form or is the new size or modification of the partition. Use to fill the remaining space on the partition.\n\nTo shrink an ext2/3/4 filesystem on the partition:\n\nWhere stands for the mount point of the partition you are shrinking, and is the new size of the partition.\n\nThen shrink the partition (in parted interactive mode):\n\nWhere is the number of the partition you are shrinking, and is the new end of the partition (which needs to be smaller than the old end).\n\nWhen done, use the resizepart command from util-linux to tell the kernel about the new size:\n\nWhere is the device that holds the partition, is the number of the partition and is the new size of the partition, in 512-byte sectors.\n\nParted will always warn you before doing something that is potentially dangerous, unless the command is one of those that is inherently dangerous (e.g. rm, mklabel and mkpart).\n\nWhen creating a partition, parted might warn about improper partition alignment but does not hint about proper alignment. For example:\n\nThe warning means the partition start is not aligned. Enter \"Ignore\" to go ahead anyway, print the partition table in sectors to see where it starts, and remove/recreate the partition with the start sector rounded up to increasing powers of 2 until the warning stops. As one example, on a flash drive with 512B sectors, Parted wanted partitions to start on sectors that were a multiple of 2048, which is 1 MiB alignment.\n\nIf you want parted to attempt to calculate the correct alignment for you, specify the start position as 0% instead of some concrete value. To make one large ext4 partition, your command would look like this:\n\nOn an already partitioned disk, you can use parted to verify the alignment of a partition on a device. For instance, to verify alignment of partition 1 on :\n• How to align partitions for best performance using parted"
    },
    {
        "link": "https://man7.org/linux/man-pages/man8/parted.8.html",
        "document": "Pages that refer to this page: addpart(8), btrfs-filesystem(8), cfdisk(8), delpart(8), partprobe(8), partx(8), resizepart(8), sfdisk(8)"
    },
    {
        "link": "http://gnu.ist.utl.pt/software/parted/manual/parted.pdf",
        "document": ""
    },
    {
        "link": "https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/8/html/managing_file_systems/partition-operations-with-parted_managing-file-systems",
        "document": "is a program to manipulate disk partitions. It supports multiple partition table formats, including MS-DOS and GPT. It is useful for creating space for new operating systems, reorganizing disk usage, and copying data to new hard disks.\n\nDisplay the partition table of a block device to see the partition layout and details about individual partitions. You can view the partition table on a block device using the utility.\n• None Start the utility. For example, the following output lists the device :\n• None Optional: Switch to the device you want to examine next: For a detailed description of the print command output, see the following: The file path to the block device and the storage capacity. The partition number. For example, the partition with minor number 1 corresponds to . The location on the device where the partition starts and ends. The file system type. If the field of a device shows no value, this means that its file system type is unknown. The utility cannot recognize the file system on encrypted devices. Lists the flags set for the partition. Available flags are , , , , , , or .\n\nUse the utility to format a block device with a partition table more easily. Formatting a block device with a partition table deletes all data stored on the device.\n• None Determine if there already is a partition table on the device: If the device already contains partitions, they will be deleted in the following steps.\n• None\n• None Replace table-type with with the intended partition table type: To create a GPT table on the disk, use: The changes start applying after you enter this command.\n• None View the partition table to confirm that it is created:\n\nAs a system administrator, you can create new partitions on a disk by using the utility. The required partitions are , , and .\n• If the partition you want to create is larger than 2TiB, format the disk with the .\n• None View the current partition table to determine if there is enough free space:\n• Resize the partition in case there is not enough free space.\n• None\n• The start and end points of the new partition.\n• On MBR, what partition type it should be.\n• None\n• Replace with with , , or . This applies only to the MBR partition table.\n• Replace with an arbitrary partition name. This is required for GPT partition tables.\n• Replace with , , , , , , , , , , or . The parameter is optional. Note that the utility does not create the file system on the partition.\n• Replace and with the sizes that determine the starting and ending points of the partition, counting from the beginning of the disk. You can use size suffixes, such as , , or . The default size is in megabytes. To create a primary partition from 1024MiB until 2048MiB on an MBR table, use: The changes start applying after you enter the command.\n• None View the partition table to confirm that the created partition is in the partition table with the correct partition type, file system type, and size:\n• None Verify that the kernel recognizes the new partition:\n\nUsing the utility, you can remove a disk partition to free up disk space. Removing a partition deletes all data stored on the partition.\n• None\n• Replace with the path to the device where you want to remove a partition: for example, .\n• None View the current partition table to determine the minor number of the partition to remove:\n• None\n• Replace with the minor number of the partition you want to remove. The changes start applying as soon as you enter this command.\n• None Verify that you have removed the partition from the partition table:\n• None Verify that the kernel registers that the partition is removed:\n• Remove the partition from the file, if it is present. Find the line that declares the removed partition, and remove it from the file.\n• None Regenerate mount units so that your system registers the new configuration:\n• None If you have deleted a swap partition or removed pieces of LVM, remove all references to the partition from the kernel command line:\n• None List active kernel options and see if any option references the removed partition:\n• None Remove the kernel options that reference the removed partition:\n• None To register the changes in the early boot system, rebuild the file system:"
    },
    {
        "link": "https://unix.stackexchange.com/questions/373063/auto-expand-last-partition-to-use-all-unallocated-space-using-parted-in-batch-m",
        "document": "Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers."
    },
    {
        "link": "https://tecmint.com/parted-command-create-linux-partitions",
        "document": "Parted is a renowned command-line utility designed to facilitate the management of hard disk partitions in a user-friendly manner.\n\nWith Parted, you can effortlessly perform tasks such as adding, deleting, shrinking, and extending disk partitions, while also managing the file systems associated with them.\n\nOver time, Parted has undergone significant development and evolution, introducing various enhancements and changes to its functionality. Certain features have been retired, while new capabilities have been introduced, rendering it a versatile tool for partition management.\n\nThis tutorial aims to provide a comprehensive introduction to Parted, covering its fundamental concepts and demonstrating practical examples. If you are new to Parted, it is essential to note that any modifications made using Parted are immediately written to the disk.\n\nTherefore, it is crucial to exercise caution while attempting to modify your disk partitions to avoid unintended consequences or data loss. Throughout this tutorial, we will guide you step-by-step, ensuring that you grasp the basics of Parted and understand the potential implications of your actions when working with disk partitions.\n\nIf you intend to experiment with Parted, it is recommended to utilize a virtual machine or an old computer/laptop that does not contain any critical data. When making modifications to a disk partition, it is crucial that the partition is not actively in use.\n\nIn the case of primary partitions, you may consider booting into rescue mode, which provides a safe environment for performing partition-related tasks without interference from the running operating system. This precautionary approach ensures the integrity of your valuable data and minimizes the risk of unintended consequences during partition manipulation.\n\nNote: You will need to have root access to the machine you will be working on in order to use parted.\n\nHow to Install Parted on Linux\n\nOn many Linux distributions, parted comes pre-installed. If it is not included in your distro, you can install it with:\n\nOnce you have made sure that parted is installed, you can proceed further to check out some real-world examples of parted command in the rest of this article.\n\nTo observe a similar message as depicted in the image below, execute the following command. Please note that the output may differ slightly depending on your specific version of Parted. By default, Parted will operate on your primary drive, typically identified as , unless otherwise specified.\n\nIf you want to exit parted, simply type:\n\nNow that parted is started, let’s list the partitions of the selected hard disk. As mentioned earlier, parted chooses your first drive by default. To see the disk partitions run .\n\nWhen running , it will also display the hard disk information and model. Here is an example from a real hard disk (not virtual as shown in the image above) :\n\nIn the example above, you can see the disk model, capacity sector size, and partition table.\n\nIf you have more than one hard disk, you can easily switch between disks, by using the “ ” command. In the example below, I will switch from to which is a secondary drive on my system.\n\nTo easily switch between disks you can use:\n\nChange with the letter of the disk to which you wish to switch.\n\nThe parted can be used to create primary and logical disk partitions. In this example, I will show you how to create a primary partition, but the steps are the same for logical partitions.\n\nTo create a new partition, parted uses “ “. You can give it additional parameters like or depending on the partition type that you wish to create.\n\nBefore you start creating partitions, it’s important to make sure that you are using (you have selected) the right disk.\n\nAs shown in the above image, we are using a virtual drive of 34 GB. First, we will give the new disk a label and then create a partition and set a file system on it.\n\nNow the first step is to give the new disk a label name with:\n\nNow create the new partition with . The listed units are in megabytes (MB). We will create a 10 GB partition starting from 1 to 10000:\n\nNext, exit parted with command. We will format our new partition in the ext4 file system using . To make this happen run the following command:\n\nNote: It’s important to select the right disk and partition when executing the above command!\n\nNow let’s verify our results, by printing the partition table on our secondary disk. Under file system column, you should see ext4 or the file system type that you have decided to use for your partition:\n\nParted includes multiple useful functions and one of them is . As you have probably figured this out by now, helps you resize a partition.\n\nIn the example below, you will see how to resize an existing partition. For the purpose of this example, we will be using the earlier created partition.\n\nFirst, you will need to know the number of the partition that you will be resizing. This can be easily found by using :\n\nIn our example, the partition number is . Now run the resizepart command:\n\nYou will be asked for the number of the partition that you will resize. Enter its number. After that, you will be asked to set the new ending point for this partition. Remember that by default the units are in MB. In our example, we have set the new partition size to 15 GB:\n\nNow verify the results with :\n\nThe next thing you will learn is how to delete a partition from your hard drive. To do this, you will need to use the rm command within parted. To delete a disk partition you will need to know its number.\n\nAs mentioned earlier, you can easily obtain this number by using . In our example, we will delete the partition with a number from our secondary drive :\n\nVerify the results by printing the partitions table:\n\nParted supports a “ utility that helps you recover a lost partition between a starting and ending point. If a partition is found within that range, it will attempt to restore it.\n\nHere is an example:\n\nUsing parted, you can change the state of a flag for disk partitions. The supported flags are:\n\nThe states can be either or . To change a flag simply run command within parted:\n\nThe above command sets flag to on for the second partition. Verify the results with :\n\nParted is a useful and powerful utility that can help you manage your disk partitions in Linux systems. As always, when working with disk partitions you need to be extra careful.\n\nIt is strongly recommended to go through parted man pages to learn how you can customize its output and find more information about its capabilities.\n\nIf you have any questions or comments, please do not hesitate to use the comment section below."
    },
    {
        "link": "https://serverfault.com/questions/870594/resize-partition-to-maximum-using-parted-in-non-interactive-mode",
        "document": "Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers."
    },
    {
        "link": "https://gcore.com/learning/manage-disk-partitions-linux-parted-command",
        "document": "If you’re new to Linux, it’s important to understand how to manage your disks. In this guide, we’ll delve into the details of disk partition management in Linux using parted command, helping you to efficiently plan, modify, and optimize your storage. Whether you’re setting up a new system or reorganizing an existing one, knowing how to manage partitions is crucial.\n\nManaging disk partitions is a crucial aspect of system administration and overall computer management for several reasons:\n• Optimal Performance. Properly managed partitions can improve the speed and responsiveness of a system. For instance, segregating operating system files from user data or placing frequently accessed data on faster sections of a disk can enhance performance.\n• Data Organization. Partitioning allows users to segregate data based on types, purposes, or importance. For example, system files, personal data, and backup files can be placed in separate partitions to ensure better organization and faster data retrieval.\n• Data Security. By isolating sensitive or critical data in its own partition, you reduce the risk of it being affected by system crashes, malware, or corrupted software on other partitions.\n• Backup and Recovery. Partitioning makes backing up data more straightforward. Instead of backing up an entire drive, one can focus on specific partitions. This makes the recovery process faster and more targeted in the event of data loss.\n• Dual Booting and System Upgrades. For those wanting to run multiple operating systems or test new software versions, separate partitions are vital. This allows users to have multiple OS versions or setups without interfering with their primary system.\n\nIn the following section, we’ll explore how to utilize the command for managing disk partitions.\n\nHow to Use the parted Command in Linux\n\nHere’s a guide on managing disk partitions using the command in Linux, complete with descriptions and sample outputs.\n\nThis command opens the parted interface for the specific disk you want to work on.\n\nReplace with the appropriate letter for your disk, like .\n\nDisplays the existing partitions on the disk using this command:\n\nTo create a new partition, use the command:\n\nThis command creates a primary partition that starts at 1GB and ends at 5GB.\n\nTo delete a specific partition, use the command:\n\nHere, is the partition number. Replace it with the appropriate number for the partition you wish to delete.\n\nTo resize a partition, use the command:\n\nThis resizes partition number to a size of .\n\nTo set flags (like bootable) for a partition, use the command:\n\nTo set or change the disk label type (like msdos), use the command:\n\nTo exit the tool, simply use:\n• Make sure you’re working on the correct disk and partition to avoid data loss.\n• If you’re not familiar with disk partitioning, it’s a good idea to first familiarize yourself with the basics or consult documentation.\n\nBy mastering the command, you can efficiently manage and organize your disk partitions on Linux. However, remember that disk operations can be destructive, so always proceed with caution and ensure you have backups of important data.\n\nLooking to deploy Linux in the cloud? With Gcore Cloud, you can choose from Basic VM, Virtual Instances, or VPS/VDS suitable for Linux:\n• Virtual Instances are virtual machines with a variety of configurations and an application marketplace"
    },
    {
        "link": "https://redhat.com/en/blog/partitions-fdisk",
        "document": "Lately, I have been doing a lot of research and writing around disk management utilities in Linux and the different options that we, as sysadmins and operators, have at our disposal to accomplish these types of tasks. Disk management has been and will most likely be one of the most crucial considerations for system administrators. Everything that we do is tied to a storage device in some way. Ensuring that our projects, backups, customer, and user data are all appropriately segmented and stored is absolutely essential.\n\nBecause of this, there have been multiple utilities developed to ease the burden of storage management. I wrote a series of articles on the popular Logical Volume Manager (LVM) recently, and it led me to explore the other options we have for creating and partitioning disks and volumes.\n\nI want to take a look specifically at the command suite .\n\nThe command suite is a classic disk partitioning utility that was developed in the early 1980s. It was released for a wide variety of operating systems. We are going to focus on it as a Linux tool here, however. It has a huge amount of functionality. From listing, creating, removing, and formating, can do it all. So let's take a look at how it works.\n\nThe command allows you to view all partitions on your system:\n\nNow that we know what partitions we have, we are going to create and format a new one.\n\nTo create a new partition with , you need to select a primary disk that has unused space. Once you decide on the disk you want to use, you will need to run the following (I have opted to work in ):\n\nYou will see that we first entered the command prompt for the disk we wanted to use . Use the option to create a new partition. We then have to decide if we are creating a primary partition or an extended partition. For this example, I created a primary partition (designated with the selection ). We will then label the partition using a partition number. If this is the first new partition you are creating, feel free to use the number . Otherwise, number appropriately. After we have made our selections, we need to designate the size of the partition we are creating. As the was only 1 GB, I have decided to keep it small here and only create a 250 KiB partition. I left the portion blank and entered . Partition created! Now let's format.\n\nAs doesn't have an internal format command, we are going to use the command.\n\nThe syntax is something like this:\n\nTo remove a partition using , you need to enter the command prompt for on the disk you are removing from. For example, to remove the partition I created in the previous example ( ), I need to enter the command line for . Then give the option for delete and select the partition number I wish to remove. As there is only one partition in it deleted the only existing one here without further input. Again, be sure to write your changes to the disk with the flag.\n\nI highly recommend that you check out the utility for yourself. There is no better practice than firing up a virtual machine and playing in the filesystem. If you mess up, you can just blow the VM away and start again. I also would urge you to compare your experience with that of LVM. I personally prefer the LVM utility as it is a bit more user friendly, however, that is subjective at best. If you are interested in my LVM series, you can find it at the bottom of the article. I will also be exploring the command in a future article, so keep an eye out for that!"
    },
    {
        "link": "https://tecmint.com/fdisk-commands-to-manage-linux-disk-partitions",
        "document": "fdisk stands (for “fixed disk or format disk“) is an most commonly used command-line based disk manipulation utility for a Linux/Unix systems. With the help of fdisk command you can view, create, resize, delete, change, copy and move partitions on a hard drive using its own user friendly text based menu driven interface.\n\nThis tool is very useful in terms of creating space for new partitions, organising space for new drives, re-organising an old drives and copying or moving data to new disks. It allows you to create a maximum of four new primary partition and number of logical (extended) partitions, based on size of the hard disk you have in your system.\n\nThis article explains 10 basic fdisk commands to manage a partition table in Linux based systems. You must be root user to run fdisk command, otherwise you will get a “command not found” error.\n\nCaution – Don’t Create, Delete or Modify Partitions. Unless you know what you are doing!\n\nThe following basic command list all existing disk partition on your system. The ‘-l‘ argument stand for (listing all partitions) is used with fdisk command to view all available partitions on Linux. The partitions are displayed by their device’s names. For example: /dev/sda, /dev/sdb or /dev/sdc.\n\nTo view all partitions of specific hard disk use the option ‘-l‘ with device name. For example, the following command will display all disk partitions of device /dev/sda. If you’ve different device names, simple write device name as /dev/sdb or /dev/sdc.\n\nIf you would like to view all commands which are available for fdisk. Simply use the following command by mentioning the hard disk name such as /dev/sda as shown below. The following command will give you output similar to below.\n\nType ‘m‘ to see the list of all available commands of fdisk which can be operated on /dev/sda hard disk. After, I enter ‘m‘ on the screen, you will see the all available options for fdisk that you can be used on the /dev/sda device.\n\nTo print all partition table of hard disk, you must be on command mode of specific hard disk say /dev/sda.\n\nFrom the command mode, enter ‘p‘ instead of ‘m‘ as we did earlier. As I enter ‘p‘, it will print the specific /dev/sda partition table.\n\n5. How to Delete a Partition in Linux\n\nIf you would like to delete a specific partition (i.e /dev/sda9) from the specific hard disk such as /dev/sda. You must be in fdisk command mode to do this.\n\nNext, enter ‘d‘ to delete any given partition name from the system. As I enter ‘d‘, it will prompt me to enter partition number that I want to delete from /dev/sda hard disk. Suppose I enter number ‘4‘ here, then it will delete partition number ‘4‘ (i.e. /dev/sda4) disk and shows free space in partition table. Enter ‘w‘ to write table to disk and exit after making new alterations to partition table. The new changes would only take place after next reboot of system. This can be easily understood from the below output.\n\nWarning : Be careful, while performing this step, because using option ‘d‘ will completely delete partition from system and may lost all data in partition.\n\n6. How to Create a New Partition in Linux\n\nIf you’ve free space left on one of your device say /dev/sda and would like to create a new partition under it. Then you must be in fdisk command mode of /dev/sda. Type the following command to enter into command mode of specific hard disk.\n\nAfter entering in command mode, now press “n” command to create a new partition under /dev/sda with specific size. This can be demonstrated with the help of following given output.\n\nWhile creating a new partition, it will ask you two options ‘extended‘ or ‘primary‘ partition creation. Press ‘e‘ for extended partition and ‘p‘ for primary partition. Then it will ask you to enter following two inputs.\n• First cylinder number of the partition to be create.\n• Last cylinder number of the partition to be created (Last cylinder, +cylinders or +size).\n\nYou can enter the size of cylinder by adding “+5000M” in last cylinder. Here, ‘+‘ means addition and 5000M means size of new partition (i.e 5000MB). Please keep in mind that after creating a new partition, you should run ‘w‘ command to alter and save new changes to partition table and finally reboot your system to verify newly created partition.\n\n7. How to Format a Partition in Linux\n\nAfter the new partition is created, don’t skip to format the newly created partition using ‘mkfs‘ command. Type the following command in the terminal to format a partition. Here /dev/sda4 is my newly created partition.\n\n8. How to Check Size of a Partition in Linux\n\nAfter formatting new partition, check the size of that partition using flag ‘s‘ (displays size in blocks) with fdisk command. This way you can check size of any specific device.\n\nIf you’ve deleted a logical partition and again recreated it, you might notice ‘partition out of order‘ problem or error message like ‘Partition table entries are not in disk order‘.\n\nFor example, when three logical partitions such as (sda4, sda5 and sda6) are deleted, and new partition created, you might expect the new partition name would be sda4. But, the system would create it as sda5. This happens because of, after the partition are deleted, sda7 partition had been moved as sda4 and free space shift to the end.\n\nTo fix such partition order problems, and assign sda4 to the newly created partition, issue the ‘x‘ to enter an extra functionality section and then enter ‘f‘ expert command to fix the order of partition table as shown below.\n\nAfter, running ‘f‘ command, don’t forget to run ‘w‘ command to save and exit from fdisk command mode. Once it fixed partition table order, you will no longer get error messages.\n\n10. How to Disable Boot Flag (*) of a Partition\n\nBy default, fdisk command shows the boot flag (i.e. ‘*‘) symbol on each partition. If you want to enable or disable boot flag on a specific partition, do the following steps.\n\nPress ‘p‘ command to view the current partition table, you see there is a boot flag (asterisk (*) symbol in orange color) on /dev/sda1 disk as shown below.\n\nNext enter command ‘a‘ to disable boot flag, then enter partition number ‘1‘ as (i.e. /dev/sda1) in my case. This will disable boot flag on the partition /dev/sda1. This will remove the asterisk (*) flag.\n\nI’ve tried my best to include almost all basic commands of fdisk commands, but still fdisk contains a variety of other expert commands you can use them by entering ‘x‘. For more detailed information, check out ‘man fdisk‘ command from the terminal. If I’ve missed any important command, please do share with me via comment section.\n• 10 Useful “du” Commands to Find Disk Usage of Files and Directories"
    },
    {
        "link": "https://phoenixnap.com/kb/linux-create-partition",
        "document": "Partitioning splits a secondary storage device, such as a hard disk or an SSD, into multiple independent parts. Disk partitions allow users to set up multiple file systems on the same machine, simplify the backup procedure, and improve system security.\n\nIn this step-by-step tutorial, you will learn how to create a partition in Linux using the and commands.\n\nfdisk is a command-line disk partitioning tool that is part of the util-linux utility package. It enables users to create, manage, and delete disk partitions via a dialog-driven interface.\n\nFollow the steps below to partition a disk in Linux using fdisk.\n\nInspect the current drive structure before making changes to the system's partition table. Run the following command to list all existing disks and partitions:\n\nThe example output below shows two disks, /dev/sda and /dev/sdb. The first storage disk, /dev/sda, has been formatted already and contains the operating system. The second disk, /dev/sdb, contains unallocated space only.\n\nChoose an unpartitioned disk on your system and proceed with the next step.\n\nTo select the storage disk for partitioning, run the following command, replacing [disk-name] with the actual storage disk name.\n\nThe fdisk utility displays a welcome message and opens a shell prompt.\n\nThe fdisk shell prompt accepts one-letter commands that perform disk management functions or start a dialog for multi-step procedures. To create a new partition on an empty storage disk, proceed with the steps below.\n\n2. Select the partition number. If unsure which number to select, proceed with the default option.\n\n3. Enter the first sector of the partition. Typing the default number ensures that the partition starts at the beginning of the disk or where the previous partition ends.\n\n4. Type the last sector of the partition. The partition size can also be expressed in megabytes or gigabytes. For example, type to create a 2GB partition.\n\nA message appears confirming that the partition is created.\n\nExecuting the procedure described in the last step creates the partition, but the changes must still be written onto the disk. To write the changes, run the w command.\n\nThe output confirms that the partition table has been altered.\n\nVerify that the partition is created by entering:\n\nThe new /dev/sdb1 partition is now visible in the partition list.\n\nParted is a GNU utility for creating and manipulating partition tables, an alternative to fdisk. Follow the steps below to partition a disk in Linux by using the command.\n\nBefore starting the partitioning process, list available storage devices to identify the disk to partition. Run the following command to list storage devices:\n\nThe example below shows two storage devices (/dev/sda and /dev/sdb):\n\nThe terminal prints the following information about each device:\n• Name and size of the disk.\n• The logical and physical size of the memory sectors. Not to be confused with available disk space.\n• Partition list with information on size, type, file system, and flags.\n\nSelect the storage disk to partition by running the following command:\n\nFor example, to partition /dev/sdb, type:\n\nCreate a partition table before partitioning the disk. A partition table is located at the start of a storage drive, and it contains data about the size and location of each partition.\n\nThe partition table types are aix, amiga, bsd, dvh, gpt, mac, msdos, pc98, sun, and loop. The two most commonly used types are gpt and msdos. The recommended choice is gpt, which supports up to 9.4 zettabytes (9.4 billion terabytes) of partition space and up to 128 partitions.\n\nTo create a partition table, enter the following:\n\nFor example, to create a gpt partition table, use:\n\nType Yes when prompted to apply the change.\n\nRun the command to review the changes. The output displays information about the storage device:\n\nParted requires the user to specify the partition type, the file system, and the partition size to create a partition. Partitions in Linux can be of the following types:\n• Primary. Holds the operating system files. Only four primary partitions can be created.\n• Extended. A type of partition in which more than the four primary partitions can be created.\n\nTo create a new partition, enter the following command:\n\nFor example, the command below creates a new primary 1854MB partition using the ext4 file system with the assigned disk starting at 1MB and ending at 1855MB:\n\nRun the command to review information on the newly created partition. Locate the information in the Disk Flags section:\n\nTo save your actions and quit, enter the command. Parted saves changes automatically.\n\nThe \"You may need to update /etc/fstab file\" message suggests that the partition can be automatically mounted at boot with /etc/fstab.\n\nAfter creating a partition using the or command, format it before use. To format a partition, run the following command:\n\nFor example, to partition the /dev/sdb1 partition with the ext4 file system, type the following:\n\nThe mkfs utility formats the partition and confirms the success of the operation.\n\nThe formatted partition is unusable until you mount it. To begin interacting with the disk, create a mount point and mount the partition to it:\n\n1. Create a mount point in the mnt directory by running the following command:\n\n2. After that, mount the partition by entering:\n\nFor example, to mount the /dev/sdb1 partition to the /mnt/sdb1 directory, type:\n\nThe terminal does not print an output if the operation is successful.\n\n3. Verify if the partition is mounted by using the following command:\n\nAfter following this step-by-step tutorial, you should better understand how to partition a disk in Linux by using the or command. The article also described the procedure for formatting and mounting partitions in Linux.\n\nNext, learn how to delete a partition in Linux.\n\nFor more Linux commands, see our Linux Commands Cheat Sheet."
    },
    {
        "link": "https://gcore.com/learning/manage-disk-partitions-linux-parted-command",
        "document": "If you’re new to Linux, it’s important to understand how to manage your disks. In this guide, we’ll delve into the details of disk partition management in Linux using parted command, helping you to efficiently plan, modify, and optimize your storage. Whether you’re setting up a new system or reorganizing an existing one, knowing how to manage partitions is crucial.\n\nManaging disk partitions is a crucial aspect of system administration and overall computer management for several reasons:\n• Optimal Performance. Properly managed partitions can improve the speed and responsiveness of a system. For instance, segregating operating system files from user data or placing frequently accessed data on faster sections of a disk can enhance performance.\n• Data Organization. Partitioning allows users to segregate data based on types, purposes, or importance. For example, system files, personal data, and backup files can be placed in separate partitions to ensure better organization and faster data retrieval.\n• Data Security. By isolating sensitive or critical data in its own partition, you reduce the risk of it being affected by system crashes, malware, or corrupted software on other partitions.\n• Backup and Recovery. Partitioning makes backing up data more straightforward. Instead of backing up an entire drive, one can focus on specific partitions. This makes the recovery process faster and more targeted in the event of data loss.\n• Dual Booting and System Upgrades. For those wanting to run multiple operating systems or test new software versions, separate partitions are vital. This allows users to have multiple OS versions or setups without interfering with their primary system.\n\nIn the following section, we’ll explore how to utilize the command for managing disk partitions.\n\nHow to Use the parted Command in Linux\n\nHere’s a guide on managing disk partitions using the command in Linux, complete with descriptions and sample outputs.\n\nThis command opens the parted interface for the specific disk you want to work on.\n\nReplace with the appropriate letter for your disk, like .\n\nDisplays the existing partitions on the disk using this command:\n\nTo create a new partition, use the command:\n\nThis command creates a primary partition that starts at 1GB and ends at 5GB.\n\nTo delete a specific partition, use the command:\n\nHere, is the partition number. Replace it with the appropriate number for the partition you wish to delete.\n\nTo resize a partition, use the command:\n\nThis resizes partition number to a size of .\n\nTo set flags (like bootable) for a partition, use the command:\n\nTo set or change the disk label type (like msdos), use the command:\n\nTo exit the tool, simply use:\n• Make sure you’re working on the correct disk and partition to avoid data loss.\n• If you’re not familiar with disk partitioning, it’s a good idea to first familiarize yourself with the basics or consult documentation.\n\nBy mastering the command, you can efficiently manage and organize your disk partitions on Linux. However, remember that disk operations can be destructive, so always proceed with caution and ensure you have backups of important data.\n\nLooking to deploy Linux in the cloud? With Gcore Cloud, you can choose from Basic VM, Virtual Instances, or VPS/VDS suitable for Linux:\n• Virtual Instances are virtual machines with a variety of configurations and an application marketplace"
    },
    {
        "link": "https://redswitches.com/blog/disk-partition-in-linux",
        "document": "Creating or resizing disk partitions is an important activity when installing any Linux distribution.\n\nPartitioning your system’s disk allows you to divide it into separate sections, each functioning as its own independent storage unit.\n\nIt is also a crucial system administration task where the admin optimizes the usage of storage space by creating partitions that the system OS, applications, and users can use without worrying about running out of storage or unused disk space.\n\nIn a multi-OS environment, you need disk partitions to allocate space to each OS on the disk. In this case, disk partitioning is an essential activity for ensuring system performance and supporting user applications.\n\nIn this comprehensive guide, we will walk you through the process of creating a Linux partition. In particular, we will show you how to create a disk partition with parted and fdisk, two of the most popular disk partition management utilities.\n\nHow to Create a Disk Partition in Linux\n\nLet’s go ahead and see how we can create a disk partition in Linux. We will cover parted and fdisk, two utilities that get the job done within minutes!\n\nBefore you try out either of the utilities, make sure you have the following:\n• None You have a user account with sudo or root permissions for administrative tasks.\n\nOption #1: Use the parted Utility to Partition a Disk\n\nGNU parted (Partition Editor) is a popular disk partitioning utility that’s usually present in many Linux distributions.\n\nWe recommend the following steps to partition a disk in Linux with the parted utility.\n\nStart by listing all the current storage devices and their partitions to identify which one you wish to partition.\n\nExecute this command with sudo privileges to see a list of storage devices and current partitions:\n\nThis will display information for each storage device, including:\n• Model : The make of the storage device.\n• Disk : The device identifier and its total capacity.\n• Sector size: The logical and physical sector sizes are different from the disk’s free space.\n• Partition Table : The format of the partition table, which could be one of several types, such as msdos, gpt, and others.\n• Disk Flags: Any specific flags set for the disk’s partitions, detailing their size, disk type, filesystem, and other attributes.\n\nNote that partitions in a Linux environment can be one of these types:\n• Primary : These partitions typically contain operating system files. A maximum of four primary partitions is allowed.\n• Extended : This type allows the creation of more than four partitions on a single disk.\n• Logical: These are partitions within an extended partition.\n\nTypically, the primary storage disk (labeled as dev/sda or dev/vda) houses the operating system. Attempting to partition this disk could render your system unbootable. It’s safer to perform partitioning tasks on additional storage disks, such as dev/sdb, dev/sdc, dev/vdb, or dev/vdc, to avoid disrupting your system’s functionality.\n\nFor instance, you can see that our test system has two storage devices listed as /dev/sda and /dev/sdb.\n\nTo begin partitioning, you need to access the storage disk you identified for partitioning in the previous step. Now, run the parted command with the device’s name:\n\nAlways specify the storage device you intend to work with when using parted. If you omit the disk name, the utility may select a disk at random, which could lead to unintended changes and potential data loss.\n\nHowever, you can switch to the intended device with the select command. For instance, we used the following command to switch to the /dev/sda disk:\n\nNow you can work directly with the /dev/sda disk.\n\nBefore you proceed with creating partitions, it’s necessary to set up a partition table. This table resides at the beginning of the hard drive and contains information about the dimensions and locations of the partitions.\n\nThe gpt and msdos are the most frequently utilized types of partition tables. msdos can accommodate up to sixteen partitions and manage disk spaces up to 16TB. On the other hand, gpt can handle disk spaces as large as 9.4ZB and supports up to 128 partitions.\n\nUse the following command syntax to initiate a new partition table:\n\nFor instance, run the following command to set up a gpt partition table:\n\nConfirm your action by typing Yes when prompted to proceed.\n\nBefore proceeding to the actual partitioning, inspecting the newly created partition table to confirm the type and disk details is critical. For this, execute the print command.\n\nNow, we’ll create a new partition with a size of 2000MB, formatted with the ext4 file system. This partition will start at 1MB and extend to 2000MB.\n\nTo set up this partition, use the mkpart command:\n\nGenerally, you won’t see any status message about the success or failure of the process. That’s why we strongly recommend rerunning the print command again to check the details of the partition you’ve just created.\n\nLook for the new partition information under the Disk Flags section.\n\nWhen working with a gpt partition table, it’s essential to note that the partition type actually refers to the name you assign to the partition. For instance, on our test system, the word primary serves as the name for the partition rather than indicating its type.\n\nTo finalize your changes and exit the parted utility, simply enter quit. This action will automatically save any modifications you’ve made.\n\nIn some cases, you may see the message You may need to update /etc/fstab file. This indicates that the new partition can be set up to mount automatically whenever the system boots. You can make relevant entries in the file to set up automatic mount.\n\nfdisk has been around since the 1980s. These days, it is part of the Linux kernel utilities (more specifically, the util-linux package).\n\nWe recommend the following steps to partition a disk in Linux using the fdisk utility.\n\nStart by viewing the available disks and partitions with the following command:\n\nAs you can see, our test system has the following storage drives and partitions.\n\nIdentify and select the storage disk where you intend to create new partitions. Next, invoke the fdisk utility with the following command:\n\nThis command will line up the /dev/sda for partitioning.\n\nWe can now start working on creating the partition. This process has the following steps:\n• None Start the process by entering the n new partition\n• None When prompted to choose a partition number, you can simply press Enter to accept the default value suggested (for example, 2).\n• None Next, you’ll be asked to specify the starting and ending sectors for the partition. It’s usually safe to go with the default values provided by the utility, which you can accept by pressing Enter\n• None Finally, you’ll decide on the size of the new partition. You have the flexibility to specify this in sectors, megabytes (M), or gigabytes (G). To create a 2GB partition, for instance, you would type +2G\n\nUpon completion, you’ll see a confirmation message indicating that the new partition has been successfully created.\n\nStep #4: Save Changes to the Disk\n\nNote that while the partition has been created, the modifications have not yet been applied to the disk.\n\nWe recommend the w (write) command to permanently write these changes to the disk:\n\nThis action will save the changes you’ve made to the disk.\n\nAfter writing the partition details, we recommend confirming that the partition was successfully created and the information written on the disk. For this, execute the following command:\n\nThis will list all partitions, and you should be able to see the newly created partition (/dev/sda2) in the output, indicating that your partitioning was successful.\n\nAfter successfully creating a partition using either the parted or fdisk, the next step is to format it to prepare it for use.\n\nWe recommend the ext4 filesystem to format the newly created partition with the following mkfs command:\n\nThis command initializes the partition at /dev/sda1 with the ext4 filesystem, making it ready to store data.\n\nFormatting disk partitions is a critical step in using the disk partitions. We recommend our guide to formatting disk partitions in Linux for comprehensive coverage of the topic.\n\nTo start using the new disk space, you’ll need to establish a mount point and attach the partition to it.\n\nFirst, create a directory to serve as your mount point with the mkdir command:\n\nNext, mount the partition to this newly created directory by executing the following command:\n\nThe terminal typically won’t display any status message. So, you need to confirm that the partition is indeed mounted with the following df command that lists all mounted filesystems, including your newly mounted partition:\n\nHere is the output of the command on our test system:\n\nThe Linux mount command is versatile and you can use it for more than simply mounting partitions. We have a comprehensive tutorial\n\nPartitioning in Linux is a powerful tool for managing your disk space, improving performance, and organizing data. Whether you prefer a graphical interface with gparted or the command-line approach with fdisk or gdisk, Linux offers the flexibility to suit your needs. Remember to back up your data and plan your partition layout before making any changes.\n\nQ. What is the fdisk utility in Linux, and how is it used to create a disk partition?\n\nThe fdisk command in Linux is a disk utility that is used to manipulate disk partition tables. To create a disk partition using fdisk, you can run the command “fdisk /dev/sdX” where “sdX” is the device name of the disk you want to partition.\n\nQ. Can you explain how to create a disk partition in Ubuntu using fdisk?\n\nTo create a disk partition in Ubuntu using fdisk, you can follow these steps: 1. Open a terminal window. 2. Run the command “sudo fdisk /dev/sdX” where “sdX” is the device name of the disk you want to partition. 3. Use the fdisk commands to create a new partition, set the partition type, and write the changes to the disk.\n\nQ. What is the parted command in Linux, and how does it differ from fdisk?\n\nThe parted command in Linux is another disk partitioning utility that allows for more advanced partitioning options than fdisk. Parted supports a wider range of partition table types and can work on disks larger than 2TB, which is a limitation of fdisk.\n\nQ. How can I create a disk partition in Linux using the parted command?\n\nTo create a disk partition in Linux using the parted command, you can run the command “sudo parted /dev/sdX mkpart primary xFs 0% 100%” where “sdX” is the device name of the disk and “xFs” is the file system type of the partition you want to create.\n\nQ. What are some common file system types that can be used when creating partitions in Linux?\n\nSome common file system types that can be used when creating partitions in Linux include ext4, xFs, btrfs, and NTFS. The choice of file system type depends on factors such as compatibility and performance requirements.\n\nQ. Can I mount the partition after creating it in Linux?\n\nAfter creating a partition in Linux, you can mount it to a specific directory in the file system using the “mount” command. This allows you to access and use the partition for storing data or running applications.\n\nQ. What is the difference between creating a primary partition and a logical partition in Linux?\n\nIn Linux, primary partitions are used to boot operating systems and usually have a limit of four partitions per disk. Logical partitions, on the other hand, are used to extend the number of partitions beyond the four-primary partition limit by creating an extended partition that can hold multiple logical partitions.\n\nQ. What is a GPT disk, and how does it differ from MBR?\n\nA GPT (GUID Partition Table) disk is a standard for the layout of partition tables on a physical hard disk, enabling more flexible disk management. Unlike MBR (Master Boot Record), which is limited to four primary partitions and a total disk size of 2TB, GPT supports up to 128 partitions by default and can accommodate disks larger than 2TB, up to 9.4ZB.\n\nA logical disk, or logical partition, is created within an extended partition on an MBR disk, allowing for more than four partitions.\n\nQ. How do I determine the appropriate partition size when partitioning a disk?\n\nThe appropriate partition size depends on your specific needs, such as the operating system requirements, applications, data storage, and future expansion plans."
    }
]