[
    {
        "link": "https://support.microsoft.com/en-us/office/sumif-function-169b8c99-c05c-4483-a712-1697a653039b",
        "document": "The SUMIF function syntax has the following arguments:\n• range Required. The range of cells that you want evaluated by criteria. Cells in each range must be numbers or names, arrays, or references that contain numbers. Blank and text values are ignored. The selected range may contain dates in standard Excel format (examples below).\n• criteria Required. The criteria in the form of a number, expression, a cell reference, text, or a function that defines which cells will be added. Wildcard characters can be included - a question mark (?) to match any single character, an asterisk (*) to match any sequence of characters. If you want to find an actual question mark or asterisk, type a tilde (~) preceding the character. For example, criteria can be expressed as 32, \">32\", B5, \"3?\", \"apple*\", \"*~?\", or TODAY(). Important: Any text criteria or any criteria that includes logical or mathematical symbols must be enclosed in double quotation marks (\"). If the criteria is numeric, double quotation marks are not required.\n• sum_range Optional. The actual cells to add, if you want to add cells other than those specified in the range argument. If the sum_range argument is omitted, Excel adds the cells that are specified in the range argument (the same cells to which the criteria is applied). Sum_range should be the same size and shape as range. If it isn't, performance may suffer, and the formula will sum a range of cells that starts with the first cell in sum_range but has the same dimensions as range. For example:"
    },
    {
        "link": "https://w3schools.com/excel/excel_sumif.php",
        "document": ""
    },
    {
        "link": "https://support.microsoft.com/en-us/office/sumifs-function-c9e748f5-7ea7-455d-9406-611cebce642b",
        "document": "The SUMIFS function, one of the math and trig functions, adds all of its arguments that meet multiple criteria. For example, you would use SUMIFS to sum the number of retailers in the country who (1) reside in a single zip code and (2) whose profits exceed a specific dollar value.\n\nThe range of cells to sum. The range that is tested using Criteria1. Criteria_range1 and Criteria1 set up a search pair whereby a range is searched for specific criteria. Once items in the range are found, their corresponding values in Sum_range are added. The criteria that defines which cells in Criteria_range1 will be added. For example, criteria can be entered as 32, \">32\", B4, \"apples\", or \"32\". Additional ranges and their associated criteria. You can enter up to 127 range/criteria pairs.\n\nTo use these examples in Excel, drag to select the data in the table, right-click the selection, and pick Copy. In a new worksheet, right-click cell A1 and pick Match Destination Formatting under Paste Options. Adds the number of products that begin with A and were sold by Tom. It uses the wildcard character * in Criteria1, \"=A*\" to look for matching product names in Criteria_range1 B2:B9, and looks for the name \"Tom\" in Criteria_range2 C2:C9. It then adds the numbers in Sum_range A2:A9 that meet both conditions. The result is 20. Adds the number of products that aren't bananas and are sold by Tom. It excludes bananas by using <> in the Criteria1, \"<>Bananas\", and looks for the name \"Tom\" in Criteria_range2 C2:C9. It then adds the numbers in Sum_range A2:A9 that meet both conditions. The result is 30.\n\n0 (Zero) is shown instead of the expected result. Make sure Criteria1,2 are in quotation marks if you are testing for text values, like a person's name. The result is incorrect when Sum_range has TRUE or FALSE values. TRUE and FALSE values for Sum_range are evaluated differently, which may cause unexpected results when they're added. Cells in Sum_range that contain TRUE evaluate to 1. Those that contain FALSE evaluate to 0 (zero).\n\nUsing wildcard characters like the question mark (?) and asterisk (*) in criteria1,2 can help you find matches that are similar but not exact. A question mark matches any single character. An asterisk matches any sequence of characters. If you want to find an actual question mark or asterisk, type a tilde (~) in front of the question mark. For example, =SUMIFS(A2:A9, B2:B9, \"=A*\", C2:C9, \"To?\") will add all instances with name that begin with \"To\" and ends with a last letter that could vary. Understand the difference between SUMIF and SUMIFS. The order of arguments differ between SUMIFS and SUMIF. In particular, the sum_range argument is the first argument in SUMIFS, but it is the third argument in SUMIF. This is a common source of problems using these functions. If you're copying and editing these similar functions, make sure you put the arguments in the correct order. Use the same number of rows and columns for range arguments. The Criteria_range argument must contain the same number of rows and columns as the Sum_range argument."
    },
    {
        "link": "https://exceljet.net/functions/sumif-function",
        "document": ""
    },
    {
        "link": "https://ablebits.com/office-addins-blog/excel-sumifs-multiple-criteria",
        "document": "This tutorial explains the difference between the SUMIF and SUMIFS functions in terms of their syntax and usage, and provides a number of formula examples to sum values with multiple AND / OR criteria in Excel 365, 2021, 2019, 2016, 2013, 2010, and lower.\n\nAs everyone knows, Microsoft Excel provides an array of functions to perform various calculations with data. A few articles ago, we explored COUNTIF and COUNTIFS, which are designed for counting cells based on a single condition and several conditions, respectively. Last week we covered Excel SUMIF that adds values meeting the specified criteria. Now it's time to go over the plural version of SUMIF - Excel SUMIFS that allows summing values by multiple criteria.\n\nThose who are familiar with the SUMIF function might think that converting it to SUMIFS takes just an extra \"S\" and a few additional criteria. This would seem quite logical… but \"logical\" it's not always the case when dealing with Microsoft : )\n\nThe SUMIF function is used to conditionally sum values based on a single criteria. We discussed the SUMIF syntax in detail in the previous article, and here's just a quick refresher.\n• range - the range of cells to be evaluated by your criteria, required.\n• criteria - the condition that must be met, required.\n• sum_range - the cells to sum if the condition is met, optional. As you see, the syntax of the Excel SUMIF function allows for one condition only. And still, we say that Excel SUMIF can be used to sum values with multiple criteria. How can that be? By adding the results of several SUMIF functions and by using SUMIF formulas with array criteria, as demonstrated in the examples that follow.\n\n\n\nAnd now, let's have a look at the Excel SUMIFS formula with two conditions. Suppose, you have a table listing the consignments of fruit from different suppliers. You have the fruit names in column A, suppliers' names in column B, and quantity in column C. What you want is to find out a sum of amounts relating to a given fruit and supplier, e.g. all apples supplied by Pete.\n\n When you're learning something new, it's always a good idea to start with simple things. So, to begin with, let's define all the arguments for our SUMIFS formula: Now assemble the above parameters, and you will get the following SUMIFS formula: To refine the formula further, you can replace the text criteria \"apples\" and \"Pete\" with cell references. In this case, you won't have to change the formula to calculate the quantity of other fruit from a different supplier: Note. Both the SUMIF and SUMIFS functions are case-insensitive by nature. To get them to recognize the text case, please see Case-sensitive SUMIF and SUMIFS formula in Excel.\n\nSince the aim of this tutorial is to cover all possible ways to sum values by several conditions, we will discuss formula examples with both functions - Excel SUMIFS and SUMIF with multiple criteria. To use them correctly, you need to clearly understand what these two functions have in common and in what way they are different. While the common part is clear (similar purpose and parameters), the differences are not so obvious, though very essential. There are 4 major differences between SUMIF and SUMIFS:\n• Number of conditions. SUMIF can evaluate just one condition at a time while SUMIFS can check for multiple criteria.\n• Syntax. With SUMIF, the sum_range is the last and optional argument - if not defined, the values in the range argument are summed. With SUMIFS, sum_range is the first and required argument.\n• Size of ranges. In SUMIF formulas, sum_range does not necessarily have to be of the same size and shape as range, as long as you have the top left cell right. In Excel SUMIFS, each criteria_range must contain the same number of rows and columns as the sum_range argument. For example, SUMIF(A2:A9,F1,C2:C18) will return the correct result because the leftmost cell in the sum_range argument (C2) is right. So, Excel will make the correction automatically and include as many columns and rows in sum_range as there are in range. A SUMIFS formula with unequally sized ranges will return a #VALUE! error.\n• Availability. SUMIF is available in all Excel versions, from 365 through 2000. SUMIFS is available in Excel 2007 and higher. Alright, enough strategy (i.e. theory), let's get into the tactics (i.e. formula examples : )\n\n\n\nHow to use SUMIFS in Excel - formula examples A moment ago, we discussed a simple SUMIFS formula with two text criteria. In the same manner, you can use Excel SUMIFS with multiple criteria expressed by numbers, dates, logical expressions, and other Excel functions. In our fruit suppliers table, suppose, you want to sum all deliveries by Mike with Qty. 200 or more. To do this, you use the comparison operator \"greater than or equal to\" (>=) in criteria2 and get the following SUMIFS formula: Note. Please pay attention that in Excel SUMIFS formulas, logical expressions with comparison operators should always be enclosed in double quotes (\"\"). We covered all possible comparison operators in detail when discussing Excel SUMIF function, the same operators can be used in SUMIFS criteria. For example, the following formula with return the sum of all values in cells C2:C9 that are greater than or equal to 200 and less than or equal to 300. Example 2. Using Excel SUMIFS with dates In case you want to sum values with multiple criteria based on the current date, use the TODAY() function in your SUMIFS criteria, as demonstrated below. The following formula sums values in column D if a corresponding date in column C falls within the last 7 days, including today: Note. When you use another Excel function together with a logical operator in the criteria, you have to use the ampersand (&) to concatenate a string, for example \"<=\"&TODAY(). In a similar fashion, you can use the Excel SUMIF function to sum values in a given date range. For example, the following SUMIFS formula adds the values in cells C2:C9 if a date in column B falls between 1-Oct-2014 and 31-Oct-2014, inclusive. The same result can be achieved by calculating the difference of two SUMIF functions, as demonstrated in this example - How to use SUMIF to sum values in a given date range. However, Excel SUMIFS is much easier and more understandable, isn't it?\n\n Example 3. Excel SUMIFS with blank and non-blank cells When analyzing reports and other data, you may often need to sum values corresponding either to empty or non-empty cells. Sum values corresponding to blank cells that contain absolutely nothing - no formula, no zero length string. =SUMIFS(C2:C10, A2:A10, \"=\", B2:B10, \"=\") Sum values in cells C2:C10 if the corresponding cells in columns A and B are absolutely empty. Sum values corresponding to \"visually\" blank cells including those that contain empty strings returned by some other Excel function (for example, cells with a formula like =\"\"). =SUMIFS(C2:C10, A2:A10, \"\", B2:B10, \"\") Sum values in cells C2:C10 with the same conditions as the above formula, but includes empty strings. Sum values corresponding to non-empty cells, including zero length strings. =SUMIFS(C2:C10, A2:A10, \"<>\", B2:B10, \"<>\") Sum values in cells C2:C10 if the corresponding cells in columns A and B are not empty, including cells with empty strings. Sum values corresponding to non-empty cells, not including zero length strings. =SUM(C2:C10) - SUMIFS(C2:C10, A2:A10, \"\", B2:B10, \"\") Sum values in cells C2:C10 if the corresponding cells in columns A and B are not empty, cells with zero length strings are not included. And now, let's see how you can use a SUMIFS formula with \"blank\" and \"non-blank\" criteria on real data. Suppose, you have an order date in column B, delivery date in column C and Qty. in column D. How do you find the total of products that have not been delivered yet? That is, you want to know the sum of values corresponding to non-empty cells in column B and empty cells in column C. The solution is to use the SUMIFS formula with 2 criteria:\n\nUsing Excel SUMIF with multiple OR criteria As noted in the beginning of this tutorial, the SUMIFS function is designed with AND logic. But what if you need to sum values with multiple OR criteria, i.e. when at least one of the conditions is met? The simplest solution is to sum the results returned by several SUMIF functions. For example, the following formula demonstrates how to find the total of products delivered by Mike and John: As you see, the first SUMIF function adds the quantities corresponding to \"Mike\", the other SUMIF function returns the amounts relating to \"John\" and then you add these 2 numbers.\n\n Example 2. SUM & SUMIF with an array argument The above solution is very simple and may get the job done quickly when there are only a couple of criteria. But a SUMIF + SUMIF formula may grow up enormously if you want to sum values with multiple OR conditions. In this case, a better approach is using an array criteria argument in the SUMIF function. Let's examine this approach now. You can start by listing all of your conditions separated by commas and then enclose the resulting comma-separated list in {curly brackets}, which is technically called an array. In the previous example, if you want to sum the products delivered by John, Mike and Pete, your array criteria will look like {\"John\",\"Mike\",\"Pete\"}. And the complete SUMIF function is . The array argument consisting of 3 values forces your SUMIF formula to return three separate results, but since we write the formula in a single cell, it would return the first result only - i.e. the total of products delivered by John. To get this array-criteria approach to work, you have to use one more little trick - enclose your SUMIF formula in a SUM function, like this: As you see, an array criteria makes the formula much more compact compared to SUMIF + SUMIF, and lets you add as many values as you like in the array. This approach works with numbers as well as with text values. For instance, if instead of the suppliers' names in column C, you had supplier IDs like 1, 2, 3 etc., then your SUMIF formula would look similar to this: Unlike text values, numbers needn't be enclosed in double quotes in array arguments.\n\n In case, your preferred way is to list the criteria in some cells rather that specify them directly in the formula, you can use SUMIF in conjunction with the SUMPRODUCT function that multiplies components in the given arrays, and returns the sum of those products. Where G2:G4 are the cells containing your criteria, the suppliers' names in our case, as illustrated in the screenshot below. But of course, nothing prevents you from listing the values in an array criteria of your SUMIF function if you want to: The result returned by both formulas will be identical to what you see in the screenshot:\n\n \n\n\n\nIf you want to conditionally sum values in Excel not simply with multiple OR conditions, but with several sets of conditions, you will have to use SUMIFS instead of SUMIF. The formulas will be very similar to what we've just discussed. As usual, an example might help to illustrate the point better. In our table of fruit suppliers, let's add the Delivery Date (column E) and find the total quantity delivered by Mike, John and Pete in October. The formula produced by this approach includes a lot of repetition and looks cumbersome, but it is easy to understand and, most importantly, it works : ) As you see, you write a separate SUMIFS function for each of the suppliers and include two conditions - equal to or greater than Oct-1 (\">=10/1/2014\",) and less than or equal to Oct 31 (\"<=10/31/2014\"), and then you sum the results.\n\n \n\n Example 2. SUM & SUMIFS with an array argument I've tried to explain the essence of this approach in the SUMIF example, so now we can simply copy that formula, change the order of arguments (as you remember it is different in SUMIF and SUMIFS) and add additional criteria. The resulting formula is more compact than SUMIFS + SUMIFS: The result returned by this formula is exactly the same as you see in the screenshot above.\n\n As you remember, the SUMPRODUCT approach differs from the previous two in the way that you enter each of your criteria in a separate cell rather that specify them directly in the formula. In case of several criteria sets, the SUMPRODUCT function won't suffice and you will have to employ ISNUMBER and MATCH as well. So, assuming that the Supplies Names are in cells H1:H3, Start Date is in cell H4 and End Date in cell H5, our SUMPRODUCT formula takes the following shape: Many people wonder why use double dash (--) in SUMPRODUCT formulas. The point is that Excel SUMPRODUCT ignores all but numeric values, while the comparison operators in our formula return Boolean values (TRUE / FALSE), which are non-numeric. To convert these Boolean values to 1's and 0's, you use the double minus sign, which is technically called the double unary operator. The first unary coerces TRUE/FALSE to -1/0, respectively. The second unary negates the values, i.e. reverses the sign, turning them into +1 and 0, which the SUMPRODUCT function can understand. I hope the above explanation makes sense. And even if it doesn't, just remember this rule of thumb - use the double unary operator (--) when you are using comparison operators in your SUMPRODUCT formulas.\n\n\n\nAs you remember, Microsoft implemented the SUMIFS function in Excel 2007. If someone still uses Excel 2003, 2000 or earlier, you will have to use a SUM array formula to add values with multiple AND criteria. Naturally, this approach works in modern versions of Excel 2013 - 2007 too, and can be deemed an old-fashioned counterpart of the SUMIFS function. In the SUMIF formulas discussed above, you have already used array arguments, but an array formula is something different. Example 1. Sum with multiple AND criteria in Excel 2003 and earlier Let's get back to the very first example where we found out a sum of amounts relating to a given fruit and supplier:\n\n As you already know, this task is easily accomplished using an ordinary SUMIFS formula:\n\n And now, let's see how the same task can be fulfilled in early \"SUMIFS-free\" versions of Excel. First off, you write down all the conditions that should be met in the form of range=\"condition\". In this example, we have two range/condition pairs: Then, you write a SUM formulas that \"multiplies\" all of your range/condition pairs, each enclosed in brackets. The last multiplier is the sum range, C2:C9 in our case: As illustrated in the screenshot below, the formula perfectly works in the latest Excel 2013 version.\n\n Note. When entering any array formula, you must press Ctrl + Shift + Enter. Once you do this, your formula gets enclosed in {curly braces}, which is a visual indication that an array formula is entered correctly. If you try typing the braces manually, your formula will be converted to a text string, and it won't work. Even in modern versions of Excel, the power of the SUM function should not be underestimated. The SUM array formula is not simply gymnastics of the mind, but has a practical value, as demonstrated in the following example. Suppose, you have two columns, B and C, and you need to count how many times column C is greater than column B, when a value in column C is greater or equal to 10. An immediate solution that comes to mind is using the SUM array formula: Don't see any practical application to the above formula? Think about it in another way : ) Suppose, you have the orders list like shown in the screenshot below and you want to know how many products have not been delivered in full by a given date. Translated into Excel's language, we have the following conditions: Condition 1: A value in column B (Ordered items) is greater than 0 Condition 2: A value in column C (Delivered) in less than in column B Condition 3: A date in column D (Due date) is less than 11/1/2014. Putting the three range/condition pairs together, you get the following formula:\n\nWell, the formula examples discussed in this tutorial have only scratched the surface of what Excel SUMIFS and SUMIF functions can really do. But hopefully, they have helped pointing you in the right direction and now you can sum values in your Excel workbooks no matter how many intricate conditions you have to consider."
    },
    {
        "link": "https://datacamp.com/tutorial/visualizing-data-in-excel",
        "document": ""
    },
    {
        "link": "https://libguides.umn.edu/c.php?g=921727&p=6643004",
        "document": ""
    },
    {
        "link": "https://stephanieevergreen.com/how-to",
        "document": ""
    },
    {
        "link": "https://reddit.com/r/excel/comments/16uto3h/i_built_a_free_data_visualization_tool_for_excel",
        "document": "You upload your sheets, ask questions in plain English, and get back interactive and customizable visualizations. Here's some sample reports I created using it:\n\nUnder the hood, it's using SQL and GPT to generate the visualizations and it also lets users correct and edit the underlying SQL query for cases where the AI messes up.\n\nStill super early and we're looking to get y'alls thoughts on the tool: what it does well and what it doesn't do so well. If you create charts in Excel or do data analysis in Excel, we'd be stoked if you gave it a try.\n\nEDIT:\n\nUnfortunately, we decided to scrap working on DeepDive and took down the website due to costs, apologies.\n\nwe did open source the code and the repo: https://github.com/bkdevs/deepdive-server\n\ndoes require some coding know-how to get up and running, but should all be there"
    },
    {
        "link": "https://journalofaccountancy.com/issues/2024/oct/10-types-of-excel-charts-for-data-visualization",
        "document": "Q. My supervisor wants me to include more data visualizations in my projects. Do you have any suggestions?\n\nA. Data visualization transforms raw data into graphical representations, making complex financial information more accessible and understandable. This is particularly important in accounting, where stakeholders must quickly interpret financial trends and make informed decisions based on accurate data. Microsoft has several tools to do this, but I suggest starting with Excel charts. You may think you already know all about them, but Excel keeps adding more, including some that can handle complex information.\n\nTo experience the breadth of Excel’s data visualization offerings, let’s take a tour of some of the most useful charts, starting with the basic ones and moving to the more advanced. To follow along, view a video demonstration of Excel chart creation at the bottom of this page.\n\nNote that the content below is based on Microsoft Excel 365 for Pcs. Other versions of Excel may work differently. All the charts and underlying data are available in this Excel file.\n\nAs you probably already know, to create a chart, you select the data you want visualized and go to the Insert tab on the ribbon. In the Charts group, select the type of chart you want to create. From there, give your chart a name. You can also do any additional formatting you would like, including choosing from more than a dozen types of charts. Here are 10 I recommend trying.\n\nBar and column charts are essential tools in financial analysis. They help present data clearly and visually. Bar charts show data with horizontal bars, while column charts use vertical bars. These charts are great for comparing different datasets or monitoring changes over time. See below for an example of both a bar and a column chart displaying the quarterly revenue for each quarter for each department.\n\nLine charts help you spot long-term trends by connecting data points with straight lines. This is particularly helpful for tracking revenue, expenses, and profit margins over months or years. Line charts can also help compare multiple datasets on a single chart by using different lines for each set. This allows you to see how different financial metrics relate to one another over time. The screenshot below shows an example of a line chart visualizing the monthly amounts for revenue, expenses, and profit.\n\nWhen you need to show how different categories contribute to a total, pie charts provide a clear picture. For instance, you can illustrate the distribution of expenses across various departments in your organization. Displaying percentages through pie charts helps in situations where understanding the share of each component is crucial; for example, presenting the market share of products in your portfolio. See below for an example of a pie chart displaying the expenses distribution for each of our departments.\n\nCombo charts in Excel are a powerful way to combine different types of charts into one. You can merge bar and column charts, line charts, and even pie charts to create a single, cohesive visual representation of your data. This versatility makes combo charts ideal for a financial analysis requiring multiple data points to be compared simultaneously. The screenshot below shows a combo chart for the revenue and profit margin for each month and for each category of revenue and profit margin this company maintains.\n\nWaterfall charts, also known as bridge charts, help you visualize the cumulative effect of sequentially introduced positive or negative values. This is especially useful for understanding how individual items contribute to a total, such as analyzing profit margins or cost breakdowns. See below for a screenshot of a waterfall chart showing the addition of revenue in December, then the reduction from cost of goods sold, and the subtotal of gross profit, all in a visual sense. It then shows the reduction due to operating expenses and, finally, the total net income.\n\nIf your data contains values considered as subtotals or totals, like Cost of Goods Sold or Net Income, you can anchor these values to start from zero on the horizontal axis, preventing them from “floating.” To do this, click on a data point in the chart, right-click, and choose Format Data Point to open the task pane. Then, check the Set as total box, as shown below.\n\nFunnel charts are ideal for visualizing stages in a process, like sales pipelines or customer acquisition funnels. By showing the progressive reduction of data at each stage, these charts help you identify bottlenecks and areas for improvement. The screenshot below shows an example of a funnel chart displaying the reduction in amounts between prospects and the qualified leads we get from those prospects. That leads us to the proposals set, then negotiations, and, finally, closed deals.\n\nHistogram charts offer a way to display the distribution of numerical data by dividing it into bins or intervals. This type of chart is excellent for displaying frequency distributions, making it easier to understand the underlying patterns in your financial data. The screenshot below shows a histogram chart for the frequencies of certain dollar amounts of sales. For example, the sales amounts between $473 and $549 are the most frequent.\n\nBox and whisker charts provide a visual summary of one or more sets of data highlighting their distribution and spread. They are useful for identifying outliers and understanding the dispersion and skewness of your data, which can be particularly beneficial in risk assessment. Below is an example of a box and whisker chart depicting the dispersion of revenue by product line.\n\nTo better illustrate the graphics in this chart, I created another box and whisker chart for this same dataset that shows the numbers.\n\nTreemap charts use nested rectangles to show hierarchical data as a proportion of a whole. This type of chart is ideal for displaying large amounts of hierarchical information, such as organizational structures or portfolio allocations. See below for an example of a treemap chart showing the revenue contribution for each electronics area and its products.\n\nSunburst charts are another way to visualize hierarchical data. They represent each level with concentric circles, making it easy to see the contribution of individual components within the hierarchy. This can be used effectively for displaying multilevel financial metrics. See the screenshot below for an example of a sunburst chart depicting the revenue distribution of an electronics store.\n\nKelly L. Williams, CPA, Ph.D., MBA, is an associate professor of accounting at the Jones College of Business at Middle Tennessee State University.\n\nDo you have technology questions for this column? Or, after reading an answer, do you have a better solution? Send them to jofatech@aicpa.org."
    }
]