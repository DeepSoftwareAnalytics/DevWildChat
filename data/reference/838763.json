[
    {
        "link": "https://docs.aiogram.dev/en/v3.18.0/utils/keyboard.html",
        "document": "Note that if you have static markup, it‚Äôs best to define it explicitly rather than using builder, but if you have dynamic markup configuration, feel free to use builder as you wish.\n\nFor example you want to generate inline keyboard with 10 buttons\n\nthen adjust this buttons to some grid, for example first line will have 3 buttons, the next lines will have 2 buttons\n\nalso you can attach another builder to this one\n\nor you can attach some already generated markup\n\nand finally you can export this markup to use it in your message\n\nReply keyboard builder has the same interface"
    },
    {
        "link": "https://docs.aiogram.dev/en/stable/utils/keyboard.html",
        "document": "# Bot token can be obtained via https://t.me/BotFather # All handlers should be attached to the Router (or Dispatcher) # Most event objects have aliases for API methods that can be called in events' context # For example if you want to answer to incoming message you can use `message.answer(...)` alias # and the target chat will be passed to :ref:`aiogram.methods.send_message.SendMessage` Handler will forward receive a message back to the sender By default, message handler will handle all message types (like a text, photo, sticker etc.) # But not all the types is supported to be copied so need to handle it # Initialize Bot instance with default bot properties which will be passed to all API calls"
    },
    {
        "link": "https://docs.aiogram.dev/en/latest/api/types/inline_keyboard_button.html",
        "document": "This object represents one button of an inline keyboard. Exactly one of the optional fields must be used to specify type of the button.\n\nOptional. HTTP or tg:// URL to be opened when the button is pressed. Links can be used to mention a user by their identifier without using a username, if this is allowed by their privacy settings.\n\nOptional. Description of the Web App that will be launched when the user presses the button. The Web App will be able to send an arbitrary message on behalf of the user using the method . Available only in private chats between a user and the bot. Not supported for messages sent on behalf of a Telegram Business account.\n\nOptional. If set, pressing the button will prompt the user to select one of their chats, open that chat and insert the bot‚Äôs username and the specified inline query in the input field. May be empty, in which case just the bot‚Äôs username will be inserted. Not supported for messages sent on behalf of a Telegram Business account.\n\nOptional. If set, pressing the button will insert the bot‚Äôs username and the specified inline query in the current chat‚Äôs input field. May be empty, in which case only the bot‚Äôs username will be inserted.\n\nOptional. If set, pressing the button will prompt the user to select one of their chats of the specified type, open that chat and insert the bot‚Äôs username and the specified inline query in the input field. Not supported for messages sent on behalf of a Telegram Business account."
    },
    {
        "link": "https://stackoverflow.com/questions/74233530/how-to-get-callbackquery-from-an-inline-button-with-url",
        "document": "now I want to catch the moment of pressing this button:\n\nbut this method is never called when I press this button in telegram. Then I've tried to use a method like this:\n\nand it's not called, too. Although other buttons without links work properly. It seems like the problem is with the link, maybe there are some other ways to catch the the moment of pressing buttons with links?\n\nHere is the whole code:"
    },
    {
        "link": "https://stackoverflow.com/questions/76243596/how-do-i-make-an-inline-picture-button-using-python-aiogram",
        "document": "I tried a few things but while I'm able to display an inline button, I'm unable to get a picture button with a local icon stored in a folder within the script directory. Any advice?\n\nThe error I get is pretty clear:\n\nI've tried other examples I found but, I found nothing that displays a local picture inside a button. Any advice?"
    },
    {
        "link": "https://docs.aiogram.dev/en/v3.18.0/utils/callback_answer.html",
        "document": "Helper for callback query handlers, can be useful in bots with a lot of callback handlers to automatically take answer to all requests.\n\nFor use, it is enough to register the inner middleware in dispatcher or specific router: After that all handled callback queries will be answered automatically after processing the handler.\n\nIn some cases you need to have some non-standard response parameters, this can be done in several ways: Change default parameters while initializing middleware, for example change answer to mode and text ‚ÄúOK‚Äù: Look at to get all available parameters By using flags you can change the behavior for specific handler Flag arguments is the same as in with additional one to disable answer. It is not always correct to answer the same in every case, so there is an option to change the answer inside the handler. You can get an instance of object inside handler and change whatever you want. Note that is impossible to change callback answer attributes when you use mode. Combine that all at once¬∂ For example you want to answer in most of cases before handler with text ‚Äúü§î‚Äù but at some cases need to answer after the handler with custom text, so you can do it:"
    },
    {
        "link": "https://stackoverflow.com/questions/76436100/handling-text-input-exception-instead-of-button-click-in-callback-query-aiogram",
        "document": "Friends, I am learning to create simple bots. And I'm myself looking for a solution to problems on the Internet. But now I can not do without your experience and I hope for help! :)\n‚Ä¢ By the start command, we launch the bot.\n‚Ä¢ A message appears: \"Hello from the bot!\" and under it there is a button: \"Select a city\"\n‚Ä¢ When you press the button: \"Select a city\", the inscription appears: \"Your city:\" and a number of buttons with the names of cities.\n‚Ä¢ The user clicks on one of the buttons with the name of the city.\n\n5.After that, the buttons with the cities disappear and the text sent to the chat appears with the name of the city button pressed.\n\n6.TOTAL: In the code variable we get the name of the city.\n\nProblem: After step 3, in addition to clicking on any of the buttons with the city, the user can enter something in the text field. Then the buttons are collapsed, and if something other than the name of the cities indicated on the buttons is entered, the process will stop, since the name of the city is the parameter needed later to send the request.\n\nSolution: Need to catch any text input after the 3rd step, other than the name of the specified buttons, and if the text != the name of one of the buttons => you need:\n‚Ä¢ display a message that you need to select a city!\n‚Ä¢ display the buttons with the name of the cities again.\n‚Ä¢ catch and write to the variable the correct name, obtained either by clicking on the button, or by entering the exact match of the city name in the text field by the user.\n\nRegarding the expected result, everything worked out for me, but I can‚Äôt handle the problem - incorrect input or accidental clicking by the user in the text field... I tried wrapping it in a While Loop, but I'm having trouble getting the correct response. Please tell me how can solve this problem?"
    },
    {
        "link": "https://stackoverflow.com/questions/71916541/telegram-bot-on-aiogram-pass-message-from-message-handler-to-callback-handler",
        "document": "I am making a telegram bot on aiogram. Can't pass variables from message.handler to callback.handler. I use FSM, in message.handler state = \"waiting_for_address\".\n\nThe algorithm is => in message.handler, the bot sends inline_keyboard with the \"Take\" button to the GROUP. When the button is clicked, a callback is sent and the bot visits callback.handler. The state (state = \"waiting_for_address\") is saved, but only for the user who used the bot. But when we click the button, another user appears and has no state set. If I manually set the state in callback.handler, then the bot stops working.\n\nTell me, please, how to do it right?"
    },
    {
        "link": "https://docs.aiogram.dev/en/latest/utils/callback_answer.html",
        "document": "Helper for callback query handlers, can be useful in bots with a lot of callback handlers to automatically take answer to all requests.\n\nFor use, it is enough to register the inner middleware in dispatcher or specific router: After that all handled callback queries will be answered automatically after processing the handler.\n\nIn some cases you need to have some non-standard response parameters, this can be done in several ways: Change default parameters while initializing middleware, for example change answer to mode and text ‚ÄúOK‚Äù: Look at to get all available parameters By using flags you can change the behavior for specific handler Flag arguments is the same as in with additional one to disable answer. It is not always correct to answer the same in every case, so there is an option to change the answer inside the handler. You can get an instance of object inside handler and change whatever you want. Note that is impossible to change callback answer attributes when you use mode. Combine that all at once¬∂ For example you want to answer in most of cases before handler with text ‚Äúü§î‚Äù but at some cases need to answer after the handler with custom text, so you can do it:"
    },
    {
        "link": "https://github.com/aiogram/aiogram/discussions/1289",
        "document": "To see all available qualifiers, see our documentation .\n\nSaved searches Use saved searches to filter your results more quickly\n\nWe read every piece of feedback, and take your input very seriously.\n\nYou signed in with another tab or window. Reload to refresh your session.\n\nYou signed out in another tab or window. Reload to refresh your session.\n\nYou switched accounts on another tab or window. Reload to refresh your session."
    },
    {
        "link": "https://stackoverflow.com/questions/67277025/how-to-avoid-making-new-connections-in-aiosqlite",
        "document": "I was using till now for my discord bot. In that case I could simply make a global variable of database connection and use it everywhere in the code.\n\nBut now in the case of I can't create a global variable because is a coroutine and I can only use it inside an async function.\n\nThe problem is that I call that function often and making new connections over and over again, Is it a good practice? Won't it cause database issues? How can I store a connection and use it everywhere"
    },
    {
        "link": "https://stackoverflow.com/questions/67026615/multiple-connections-with-aiosqlite",
        "document": "I have a discord bot that uses an sqlite db to read/write data to my db using aiosqlite\n\nI have written multiple functions to read/write, and each of these functions establishes a separate connection to the database.\n\nthen in my bot commands I have:\n‚Ä¢ Is creating a separate connection each time is a good practice?\n‚Ä¢ Can this cause inconsistency in the data ?\n‚Ä¢ If the answer to 2. is yes, how can I solve this?"
    },
    {
        "link": "https://github.com/omnilib/aiosqlite",
        "document": "It replicates the standard module, but with async versions of all the standard connection and cursor methods, plus context managers for automatically closing connections and cursors:\n\nIt can also be used in the traditional, procedural manner:\n\naiosqlite also replicates most of the advanced features of :\n\naiosqlite is compatible with Python 3.8 and newer. You can install it from PyPI:\n\naiosqlite allows interaction with SQLite databases on the main AsyncIO event loop without blocking execution of other coroutines while waiting for queries or data fetches. It does this by using a single, shared thread per connection. This thread executes all actions within a shared request queue to prevent overlapping actions.\n\nConnection objects are proxies to the real connections, contain the shared execution thread, and provide context managers to handle automatically closing connections. Cursors are similarly proxies to the real cursors, and provide async iterators to query results.\n\naiosqlite is copyright Amethyst Reese, and licensed under the MIT license. I am providing code in this repository to you under an open source license. This is my personal repository; the license you receive to my code is from me and not from my employer. See the LICENSE file for details."
    },
    {
        "link": "https://sqldocs.org/sqlite-database/aiosqlite-python",
        "document": "SQLite is one of the most widely used database engines in the world. Its lightweight, file-based architecture makes it perfect for embedded databases in desktop and mobile applications. However, Python‚Äôs standard SQLite library blocks the event loop while executing queries, hurting performance in asynchronous programs.\n\nEnter AioSQLite ‚Äì an elegant asynchronous library interacting with SQLite from Python‚Äôs asyncio event loop without blocking. Let‚Äôs learn how AioSQLite makes SQLite fully non-blocking and explore some real-world use cases through examples.\n\nAioSQLite is an asynchronous, non-blocking SQLite driver for Python. It allows you to access SQLite databases from asyncio coroutines without blocking the main event loop thread.\n\nHere are some key things to know about AioSQLite:\n‚Ä¢ It provides an async version of the SQLite Python API, replicating nearly all the features of\n‚Ä¢ Uses a background thread per connection to talk to SQLite without blocking asyncio event loop\n‚Ä¢ Lets you access SQLite using async/await instead of callbacks\n\nInstalling AioSQLite is as simple as:\n\nThat‚Äôs it! Now, let‚Äôs look at how to use it.\n\nThe API for AioSQLite mirrors , but with async methods instead of synchronous ones.\n\nFor example, here is how to connect to an SQLite database file, insert data, and query it:\n\nThere are a few key things to notice here:\n‚Ä¢ Executing SQL happens via , using\n‚Ä¢ Getting query results uses an async cursor that returns rows via\n\nThis allows the database code to run non-blockingly within an asyncio event loop.\n\nA key feature of AioSQLite is the use of async context managers to manage connections and cursors automatically:\n\nThis takes care of opening and closing connections for you.\n\nAioSQLite replicates most other advanced features of too:\n\nThe API supports nearly everything you can do in standard SQLite.\n\nHere is an example of using AioSQLite with a real-world data analytics database containing user analytics events:\n\nThis allows storing analytic event data from users in SQLite by leveraging AioSQLite‚Äôs non-blocking API!\n\nHere are some of the major benefits you get from using AioSQLite:\n‚Ä¢ Avoid callback hell by using instead\n‚Ä¢ Replicates nearly all functionality of module\n‚Ä¢ Enables real-time analytics, streaming, and more use cases by removing SQLite blocking behavior\n\nIf you need to use SQLite from an asyncio app, AioSQLite is currently the best way to go about it while avoiding bottlenecks.\n\nAs you can see, AioSQLite retains nearly all the underlying SQLite functionality while adding async capabilities.\n\nAioSQLite brings the simplicity and ubiquity of SQLite to the world of asyncio and Python async programming. With its async API using , context managers, non-blocking behavior, and Python 3.7+ support, AioSQLite is the go-to choice for accessing SQLite from an asyncio application.\n\nWhether you need real-time analytics, streaming processing, or just a simple offline data store, AioSQLite takes the blocking factor out of SQLite. This lets you build highly concurrent database-backed programs without the headaches of callback hell or stalling the event loop.\n\nIf you found this useful, be sure to check out the AioSQLite documentation to learn more!"
    },
    {
        "link": "https://aiosqlite.omnilib.dev",
        "document": "It replicates the standard module, but with async versions of all the standard connection and cursor methods, plus context managers for automatically closing connections and cursors:\n\nIt can also be used in the traditional, procedural manner:\n\naiosqlite also replicates most of the advanced features of :\n\naiosqlite allows interaction with SQLite databases on the main AsyncIO event loop without blocking execution of other coroutines while waiting for queries or data fetches. It does this by using a single, shared thread per connection. This thread executes all actions within a shared request queue to prevent overlapping actions. Connection objects are proxies to the real connections, contain the shared execution thread, and provide context managers to handle automatically closing connections. Cursors are similarly proxies to the real cursors, and provide async iterators to query results.\n\naiosqlite is copyright Amethyst Reese, and licensed under the MIT license. I am providing code in this repository to you under an open source license. This is my personal repository; the license you receive to my code is from me and not from my employer. See the LICENSE file for details."
    }
]