[
    {
        "link": "https://ablebits.com/office-addins-blog/excel-iferror-vlookup",
        "document": "In this tutorial, we will be looking at how to use IFERROR and VLOOKUP functions together to trap and handle different errors. In addition, you are going to learn how to do sequential vlookups in Excel by nesting multiple IFERROR functions one onto another.\n\nExcel VLOOKUP and IFERROR - these two functions may be pretty hard to understand separately, let alone when they are combined. In this article, you will find a few easy-to-follow examples that address common uses and clearly illustrate the formulas' logic.\n\nIf you don't have much experience with IFERROR and VLOOKUP functions, it may be a good idea to revise their basics first by following the above links.\n\nIFERROR VLOOKUP formula to handle #N/A and other errors When Excel Vlookup fails to find a lookup value, it throws an #N/A error, like this:\n\n Depending on your business needs, you may want to disguise the error with your own text, zero, or a blank cell. Example 1. IFERROR with VLOOKUP formula to replace errors with your own text If you'd like to replace the standard error notation with your custom text, wrap your VLOOKUP formula in IFERROR, and type any text you want in the 2nd argument (value_if_error), for example \"Not found\": With the lookup value in B2 in the Main table and the lookup range A2:B4 in the Lookup table, the formula takes the following shape: The screenshot below shows our Excel IFERROR VLOOKUP formula in action:\n\n The result looks much more understandable and far less intimidating, isn't it? In a similar manner, you can use INDEX MATCH together with IFERROR: The IFERROR INDEX MATCH formula is especially useful when you want to pull values from a column that lies to the left of the lookup column (left lookup), and return your own text when nothing is found.\n\n Example 2. IFERROR with VLOOKUP to return blank or 0 if nothing is found If you don't want to show anything when the lookup value is not found, have IFERROR display an empty string (\"\"): In our example, the formula goes as follows: As you can see, it returns nothing when the lookup value is not in the search list.\n\n If you'd like to replace the error with the zero value, put 0 in the last argument: Word of caution! Excel IFERROR function catches all kinds of errors, not only #N/A. Is it good or bad? All depends on your goal. If you want to mask all possible errors, IFERROR Vlookup is the way to go. But it may be an unwise technique in many situations. For example, if you've created a named range for your table data, and misspelled that name in your Vlookup formula, IFERROR will catch a #NAME? error and replace it with \"Not found\" or any other text you supply. As the result, you may never know your formula is delivering wrong results unless you spot the typo yourself. In such a case, a more reasonable approach would be trapping only #N/A errors. For this, use IFNA Vlookup formula in Excel 2013 and higher, IF ISNA VLOOKUP in all Excel versions. The bottom line is: be very careful when choosing a companion for your VLOOKUP formula :)\n\n\n\nNest IFERROR within VLOOKUP to always find something Imagine the following situation: you look up a specific value in a list and do not find it. What choices do you have? Either get an N/A error or show your own message. Actually, there is a third option - if your primary vlookup stumbles, then search for something else that is definitely there! Taking our example further, let's create some sort of dashboard for our users that will show them an extension number of a specific office. Something like this:\n\n So, how do you pull the extension from column B based on the office number in D2? With this regular Vlookup formula: And it will work nicely as long as your users enter a valid number in D2. But what if a user inputs some number that does not exist? In this case, let them call the central office! For this, you embed the above formula in the value argument of IFERROR, and put another Vlookup in the value_if_error argument. The complete formula is a bit long, but it works perfectly: If the office number is found, the user gets the corresponding extension number:\n\n If the office number is not found, the central office extension is displayed:\n\n To make the formula a bit more compact, you can use a different approach: First, check if the number in D2 is present in the lookup column (please notice that we set col_index_num to 1 for the formula to look up and return value from column A): VLOOKUP(D2,$A$2:$B$7,1,FALSE) If the specified office number is not found, then we search for the string \"central office\", which is definitely in the lookup list. For this, you wrap the first VLOOKUP in IFERROR and nest this whole combination inside another VLOOKUP function: Well, a slightly different formula, the same result:\n\n But what is the reason to look up \"central office\", you may ask me. Why not supply the extension number directly in IFERROR? Because the extension may change at some point in the future. If this happens, you will have to update your data just once in the source table, without worrying about updating each of your VLOOKUP formulas.\n\n\n\nHow to do sequential VLOOKUPs in Excel In situations when you need to perform the so-called sequential or chained Vlookups in Excel depending on whether a prior lookup succeeded or failed, nest two or more IFERROR functions to run your Vlookups one by one: The formula works with the following logic: If the first VLOOKUP does not find anything, the first IFERROR traps an error and runs another VLOOKUP. If the second VLOOKUP fails, the second IFERROR catches an error and runs the third VLOOKUP, and so on. If all Vlookups stumble, the last IFERROR returns your message. This nested IFERROR formula is especially useful when you have to Vlookup across multiple sheets as shown in the below example. Let's say, you have three lists of homogeneous data in three different worksheets (office numbers in this example), and you want to get an extension for a certain number. Assuming the lookup value is in cell A2 in the current sheet, and the lookup range is A2:B5 in 3 different worksheets (North, South and West), the following formula works a treat: So, our \"chained Vlookups\" formula searches in three different sheets in the order we nested them in the formula, and brings the first match it finds:\n\n You can find more examples in this article: VLOOKUP in multiple sheets in Excel.\n\n\n\nThis is how you use IFERROR with VLOOKUP in Excel. I thank you for reading and hope to see you on our blog next week!"
    },
    {
        "link": "https://support.microsoft.com/en-us/office/vlookup-function-0bbc8083-26fe-4963-8ab8-93a18ad188a1",
        "document": "Tip: Try using the new XLOOKUP function, an improved version of VLOOKUP that works in any direction and returns exact matches by default, making it easier and more convenient to use than its predecessor. Use VLOOKUP when you need to find things in a table or a range by row. For example, look up a price of an automotive part by the part number, or find an employee name based on their employee ID. In its simplest form, the VLOOKUP function says: =VLOOKUP(What you want to look up, where you want to look for it, the column number in the range containing the value to return, return an Approximate or Exact match – indicated as 1/TRUE, or 0/FALSE).\n• The secret to VLOOKUP is to organize your data so that the value you look up (Fruit) is to the left of the return value (Amount) you want to find.\n• If you're a Microsoft Copilot subscriber Copilot can make it even easier to insert and use VLookup or XLookup functions. See Copilot makes lookups in Excel easy.\n\nUse the VLOOKUP function to look up a value in a table. The value you want to look up. The value you want to look up must be in the first column of the range of cells you specify in the table_array argument. For example, if table-array spans cells B2:D7, then your lookup_value must be in column B. Lookup_value can be a value or a reference to a cell. The range of cells in which the VLOOKUP will search for the lookup_value and the return value. You can use a named range or a table, and you can use names in the argument instead of cell references. The first column in the cell range must contain the lookup_value. The cell range also needs to include the return value you want to find. Learn how to select ranges in a worksheet. The column number (starting with 1 for the left-most column of table_array) that contains the return value. A logical value that specifies whether you want VLOOKUP to find an approximate or an exact match:\n• Approximate match - 1/TRUE assumes the first column in the table is sorted either numerically or alphabetically, and will then search for the closest value. This is the default method if you don't specify one. For example, =VLOOKUP(90,A1:B100,2,TRUE).\n• Exact match - 0/FALSE searches for the exact value in the first column. For example, =VLOOKUP(\"Smith\",A1:B100,2,FALSE).\n\nHow to get started There are four pieces of information that you will need in order to build the VLOOKUP syntax:\n• The value you want to look up, also called the lookup value.\n• The range where the lookup value is located. Remember that the lookup value should always be in the first column in the range for VLOOKUP to work correctly. For example, if your lookup value is in cell C2 then your range should start with C.\n• The column number in the range that contains the return value. For example, if you specify B2:D11 as the range, you should count B as the first column, C as the second, and so on.\n• Optionally, you can specify TRUE if you want an approximate match or FALSE if you want an exact match of the return value. If you don't specify anything, the default value will always be TRUE or approximate match. Now put all of the above together as follows: =VLOOKUP(lookup value, range containing the lookup value, the column number in the range containing the return value, Approximate match (TRUE) or Exact match (FALSE)).\n\nIf range_lookup is TRUE or left out, the first column needs to be sorted alphabetically or numerically. If the first column isn't sorted, the return value might be something you don't expect. Either sort the first column, or use FALSE for an exact match.\n• If range_lookup is TRUE, then if the value in the lookup_value is smaller than the smallest value in the first column of the table_array, you'll get the #N/A error value.\n• If range_lookup is FALSE, the #N/A error value indicates that the exact number isn't found. For more information on resolving #N/A errors in VLOOKUP, see How to correct a #N/A error in the VLOOKUP function. If col_index_num is greater than the number of columns in table-array, you'll get the #REF! error value. For more information on resolving #REF! errors in VLOOKUP, see How to correct a #REF! error. If the table_array is less than 1, you'll get the #VALUE! error value. For more information on resolving #VALUE! errors in VLOOKUP, see How to correct a #VALUE! error in the VLOOKUP function. The #NAME? error value usually means that the formula is missing quotes. To look up a person's name, make sure you use quotes around the name in the formula. For example, enter the name as \"Fontana\" in =VLOOKUP(\"Fontana\",B2:E7,2,FALSE). For more information, see How to correct a #NAME! error. This particular #SPILL! error usually means that your formula is relying on implicit intersection for the lookup value, and using an entire column as a reference. For example, =VLOOKUP(A:A,A:C,2,FALSE). You can resolve the issue by anchoring the lookup reference with the @ operator like this: =VLOOKUP(@A:A,A:C,2,FALSE). Alternatively, you can use the traditional VLOOKUP method and refer to a single cell instead of an entire column: =VLOOKUP(A2,A:C,2,FALSE).\n\nUsing absolute references allows you to fill-down a formula so that it always looks at the same exact lookup range. Learn how to use absolute cell references. When searching number or date values, be sure the data in the first column of table_array isn't stored as text values. Otherwise, VLOOKUP might return an incorrect or unexpected value. Sort the first column of the table_array before using VLOOKUP when range_lookup is TRUE. If range_lookup is FALSE and lookup_value is text, you can use the wildcard characters—the question mark (?) and asterisk (*)—in lookup_value. A question mark matches any single character. An asterisk matches any sequence of characters. If you want to find an actual question mark or asterisk, type a tilde (~) in front of the character. For example, =VLOOKUP(\"Fontan?\",B2:E7,2,FALSE) will search for all instances of Fontana with a last letter that could vary. Make sure your data doesn't contain erroneous characters. When searching text values in the first column, make sure the data in the first column doesn't have leading spaces, trailing spaces, inconsistent use of straight ( ' or \" ) and curly ( ‘ or \") quotation marks, or nonprinting characters. In these cases, VLOOKUP might return an unexpected value. To get accurate results, try using the CLEAN function or the TRIM function to remove trailing spaces after table values in a cell."
    },
    {
        "link": "https://support.microsoft.com/en-us/office/how-to-correct-a-n-a-error-a9708411-f82e-4e1b-8a7e-28c28311b993",
        "document": "The most common cause of the #N/A error is with XLOOKUP, VLOOKUP, HLOOKUP, LOOKUP, or MATCH functions if a formula can't find a referenced value. For example, your lookup value doesn't exist in the source data. In this case there is no \"Banana\" listed in the lookup table, so VLOOKUP returns a #N/A error. Solution: Either make sure that the lookup value exists in the source data, or use an error handler such as IFERROR in the formula. For example, =IFERROR(FORMULA(),0), which says:\n• =IF(your formula evaluates to an error, then display 0, otherwise display the formula's result) You can use \"\" to display nothing, or substitute your own text: =IFERROR(FORMULA(),\"Error Message here\")\n• If you need help on the #N/A error with a specific function, like VLOOKUP or INDEX/MATCH, choose one of these options:\n• Also, it might be useful to learn about some of the common functions where this error occurs, such as XLOOKUP, VLOOKUP, HLOOKUP, LOOKUP, or MATCH. If you're not sure what to do at this point or what kind of help you need, you can search for similar questions in the Microsoft Community, or post one of your own. If you're still needing help fixing this error, the following checklist provides troubleshooting steps to help you figure out what may have gone wrong in your formulas.\n\nThere is extra spacing in the cells You can use the TRIM function to remove any leading or trailing spaces. The following example uses TRIM nested inside a VLOOKUP function to remove the leading spaces from the names in A2:A7 and return the department name. Note: Dynamic array formulas - If you have a current version of Microsoft 365, and are on the Insiders Fast release channel, then you can input the formula in the top-left-cell of the output range, then press Enter to confirm the formula as a dynamic array formula. Otherwise, the formula must be entered as a legacy array formula by first selecting the output range, input the formula in the top-left-cell of the output range, then press Ctrl+Shift+Enter to confirm it. Excel inserts braces at the beginning and end of the formula for you. For more information on array formulas, see Guidelines and examples of array formulas.\n\nUsing the Approximate Match vs. Exact Match method (TRUE/FALSE) By default, functions that look up information in tables must be sorted in ascending order. However, the VLOOKUP and HLOOKUP worksheet functions contain a range_lookup argument that instructs the function to find an exact match even if the table is not sorted. To find an exact match, set the range_lookup argument to FALSE. Note that using TRUE, which tells the function to look for an approximate match, can not only result in an #N/A error, it can also return erroneous results as seen in the following example. In this example, not only does \"Banana\" return an #N/A error, \"Pear\" returns the wrong price. This is caused by using the TRUE argument, which tells the VLOOKUP to look for an approximate match instead of an exact match. There's no close match for \"Banana\", and \"Pear\" comes before \"Peach\" alphabetically. In this case using VLOOKUP with the FALSE argument would return the correct price for \"Pear\", but \"Banana\" would still result in a #N/A error, since there is no corresponding \"Banana\" in the lookup list. If you are using the MATCH function, try changing the value of the match_type argument to specify the sort order of the table. To find an exact match, set the match_type argument to 0 (zero).\n\nAn array formula references a range that doesn't have the same number of rows or columns as the range that contains the array formula To fix this, make sure that the range referenced by the array formula has the same number of rows and columns as the range of cells in which the array formula was entered, or enter the array formula into fewer or more cells to match the range reference in the formula. In this example, cell E2 has referenced mismatched ranges: In order for the formula to calculate correctly it needs to be changed so that both ranges reflect rows 2 – 11. Note: Dynamic array formulas - If you have a current version of Microsoft 365, and are on the Insiders Fast release channel, then you can input the formula in the top-left-cell of the output range, then press Enter to confirm the formula as a dynamic array formula. Otherwise, the formula must be entered as a legacy array formula by first selecting the output range, input the formula in the top-left-cell of the output range, then press Ctrl+Shift+Enter to confirm it. Excel inserts braces at the beginning and end of the formula for you. For more information on array formulas, see Guidelines and examples of array formulas.\n\n#N/A can be useful! It is a common practice to use #N/A when using data like the following example for charts, as #N/A values won't plot on a chart. Here are examples of what a chart looks like with 0's vs. #N/A. In the previous example, you will see that the 0 values have plotted and are displayed as a flat line on the bottom of the chart, and it then shoots up to display the Total. In the following example you will see the 0 values replaced with #N/A."
    },
    {
        "link": "https://stackoverflow.com/questions/74144441/how-to-use-vlookup-with-exceptions",
        "document": "You can use the following in cell :\n\nor using function to facilitate maintenance of the formula:\n\nWe are using a nested starting first with the most restricted search, i.e. the exceptions, and in case of then it looks for the regular country lookup table. We consider the as a last resort in case some lookup value was not defined.\n\nWe are using Excel Tables to have dynamic ranges in the lookup tables. For the initial data set we don't use it, because for Excel Tables Spilled array formulas aren't supported, i.e. it returns error.\n\nWe define the data input ranges larger than the actual input data set, in case we want to include additional data. We add the initial condition: to treat the blank lines of the input table."
    },
    {
        "link": "https://simplilearn.com/tutorials/excel-tutorial/vlookup-in-excel",
        "document": ""
    },
    {
        "link": "https://corporatefinanceinstitute.com/resources/excel/isna-excel",
        "document": "What is the ISNA Excel Function?\n\nThe ISNA Excel Function[1] is categorized under Information functions. This function helps in checking if a cell contains the #N/A! error. It will return a FALSE value for other types of errors.\n\nAs a financial analyst, we deal with data and perform analysis on it. The ISNA function helps to identify cells that contain an #N/A error and facilitates smooth comparisons, data analysis, etc.\n\nWe can use the ISNA function with the IF function and test a cell for error and display a customized message for it.\n\nThe ISNA Excel function uses the following argument:\n• Value (required argument) – This is the expression or value that needs to be tested. It is generally provided as a cell address.\n\nThe ISNA function will return TRUE if the value is an #N/A error and FALSE if it is not.\n\nHow to use the ISNA Function in Excel?\n\nTo understand the uses of the ISNA function, let’s consider a few examples:\n\nLet’s first understand how the ISNA Excel function behaves using the following set of data:\n\nSuppose we wish to find out the cost of a few fruits. When using the VLOOKUP formula, one of the irritating things is seeing the “#N/A” error after Excel determined a lookup value is not available.\n\nRather than showing values when they are unavailable, from a visual design perspective, it’s better to just show a blank space or a “Not found” message. It makes our output look more professional and polished. It also draws less attention to the error values and lets users focus on the values found. So, we want MS Excel to return a customized message, “Not found”, when it is unable to find a fruit from the given list instead of #N/A!.\n\nSuppose we are given the data below:\n\nWhen we did a VLOOKUP for the given list of fruits, we got the list below:\n\nNow instead of the #N/A error, we want a customized message that says “Unavailable.”\n\nThe formula to use will be:\n\nWe need to drag the formula for the entire list for which we need to find out the cost. Using the IF-ISNA formula combination is easy. All we need to do is to wrap the ISNA formula inside an IF logic condition. Remember, the crucial thing here while using the IF-ISNA formula combination is that we need to put in the original formula twice.\n\nWe will get the result below:\n\nThings to remember about the ISNA Excel Function\n• The ISNA function is part of the IS functions that are often used to test the results of formulas in a cell for errors.\n• If we are using MS Excel 2013-2016, the function is very useful for identifying and handling #N/A! errors.\n\nClick here to download the sample Excel file\n\nThanks for reading CFI’s guide to important Excel functions! By taking the time to learn and master these functions, you’ll significantly speed up your financial analysis. To learn more, check out these additional CFI resources:\n• Advanced Excel Formulas You Must Know"
    },
    {
        "link": "https://exceljet.net/functions/isna-function",
        "document": "The ISNA function returns TRUE when a cell contains the #N/A error and FALSE for any other value, or any other error type. The ISNA function takes one argument, value, which is typically a cell reference.\n\nIf A1 contains the #N/A error, ISNA returns TRUE:\n\nISNA returns FALSE for other values and errors:\n\nYou can use the ISNA function with the IF function test for #N/A and display a friendly message if the error occurs. For example, to display a message if A1 contains #N/A and the value of A1 if not:\n\nThe IFNA function is a more efficient way to trap the #N/A error. See VLOOKUP without NA error for an example.\n\nTo explicitly return the #N/A error in a formula, you can use the NA function:\n\nThe following will return true:\n\nTo count cells in a range that contain #N/A errors, you can use the SUMPRODUCT function like this:\n\nThe double negative coerces the TRUE and FALSE results from ISNA into 1s and 0s and SUMPRODUCT sums the result.\n• The IFNA function is a more efficient way to trap and handle the #N/A error."
    },
    {
        "link": "https://ablebits.com/office-addins-blog/isna-function-excel",
        "document": "This tutorial dives into various ways of using the ISNA function in Excel to handle #N/A errors.\n\nWhen Excel cannot find what it is asked for, a #N/A error appears in a cell. To intercept and handle such errors, you can use the ISNA function. What's the practical use of that? Essentially, it helps to make your formulas more user-friendly and your worksheets better-looking.\n\nThe Excel ISNA function is used to check cells or formulas for #N/A errors. The result is a logical value: TRUE if a #N/A error is detected, FALSE otherwise. The function is available in all versions of Excel 2000 through 2021 and Excel 365. The syntax of the ISNA function is as simple as it could possibly be: Where value is the cell value or formula you want to check for #N/A errors. To create an ISNA formula in its basic form, supply a cell reference as its only argument: In case the referenced cell contains a #N/A error, you'll get TRUE. In case of any other error, value or a blank cell, you'll get FALSE:\n\n \n\n\n\nHow to use ISNA in Excel Using the ISNA function in its pure form has little practical sense. More often, it is used together with other functions to evaluate the result of a certain formula. For this, just put that other formula in the value argument of ISNA: In the below dataset, suppose you want to compare two lists (columns A and D) and identify the names that are present in both lists and those that appear only in list 1. To compare the name in A3 against each name in column D, the formula is: If a lookup value is found, the MATCH function returns its relative position in the lookup array, otherwise a #N/A error occurs. To test the result of MATCH, we nest it in ISNA: This formula goes to B3, and then is copied through B14. Now, you can clearly see which students have passed all the tests (a name is not available in column D > MATCH returns #N/A > ISNA returns TRUE) and which have at least one failed test (a name appears in column D > no error > ISNA returns FALSE).\n\n Tip. In Excel 365 and Excel 2021, you can use a more modern XMATCH function. instead of MATCH.\n\nBy design, the ISNA function can only return two Boolean values. To display your custom messages, use it in combination with the IF function: Refining our example a little further, let's find out which students from group A did not fail any test and return \"No failed tests\" for them. For the remaining students, we'll return \"Failed\". To do this, embed the ISNA MATCH formula in the logical test of IF, so that IF becomes the outermost function: The results look much better and more intuitive now, agree?\n\n \n\n\n\nHow to use ISNA in Excel with VLOOKUP The IF ISNA combination is a universal solution that can be used with any function that searches for something in a set of data and returns a #N/A error when a lookup value is not found. The syntax of the ISNA function with VLOOKUP is as follows: Translated into a human language, it says: if VLOOKUP results in a #N/A error, return custom text, otherwise return VLOOKUP's result. In our sample table, assume you wish to return the subjects in which students failed tests. For those who have passed all the tests successfully, \"No failed tests\" is going to be displayed. To look up the subjects, we construct this classic VLOOKUP formula: And then nest it in the generic IF ISNA formula discussed above: In Excel 2013 and later version, you can utilize the IFNA function to catch and handle #N/A errors. This makes your formula shorter and easier to read. As an example, we replace #N/A errors with dashes (\"-\") and get this elegant solution: The users of Excel 365 and 2021 don't need any wrapper function at all as the modern successor of VLOOKUP, the XLOOKUP function, can handle #N/A errors natively: The result will be exactly the same as shown in the screenshot above.\n\n\n\nTo count #N/A errors in a certain range, use the ISNA function together with SUMPRODUCT in this way: Here, ISNA returns an array of TRUE and FALSE values, the double negation (--) coerces the logical values into 1's and 0's, and SUMPRODUCT adds up the result. For instance, to find out how many students succeeded in all tests, modify the MATCH formula for a range of lookup values (A3:A14) and nest it in ISNA: The formula determines that 9 students have no failed tests, i.e. the MATCH function returns 9 #N/A errors:\n\n \n\n\n\nThat's how to create and use ISNA formulas in Excel. I thank you for reading and look forward to seeing you on our blog next week!"
    },
    {
        "link": "https://support.microsoft.com/en-us/office/is-functions-0f2d7971-6019-40a0-a171-f2d869135665",
        "document": "Each of these functions, referred to collectively as the IS functions, checks the specified value and returns TRUE or FALSE depending on the outcome. For example, the ISBLANK function returns the logical value TRUE if the value argument is a reference to an empty cell; otherwise it returns FALSE. You can use an IS function to get information about a value before performing a calculation or other action with it. For example, you can use the ISERROR function in conjunction with the IF function to perform a different action if an error occurs: This formula checks to see if an error condition exists in A1. If so, the IF function returns the message \"An error occurred.\" If no error exists, the IF function performs the calculation A1*2.\n\nThe IS function syntax has the following argument:\n• value Required. The value that you want tested. The value argument can be a blank (empty cell), error, logical value, text, number, or reference value, or a name referring to any of these. Value refers to an empty cell. Value refers to any error value except #N/A. Value refers to any error value (#N/A, #VALUE!, #REF!, #DIV/0!, #NUM!, #NAME?, or #NULL!). Value refers to an even number. Value refers to a logical value. Value refers to the #N/A (value not available) error value. Value refers to any item that is not text. (Note that this function returns TRUE if the value refers to a blank cell.) Value refers to an odd number.\n• The value arguments of the IS functions are not converted. Any numeric values that are enclosed in double quotation marks are treated as text. For example, in most other functions where a number is required, the text value \"19\" is converted to the number 19. However, in the formula ISNUMBER(\"19\"), \"19\" is not converted from a text value to a number value, and the ISNUMBER function returns FALSE.\n• The IS functions are useful in formulas for testing the outcome of a calculation. When combined with the IF function, these functions provide a method for locating errors in formulas (see the following examples).\n\nCopy the example data in the following table, and paste it in cell A1 of a new Excel worksheet. For formulas to show results, select them, press F2, and then press Enter. If you need to, you can adjust the column widths to see all the data. Checks whether TRUE is a logical value Checks whether \"TRUE\" is a logical value Copy the example data in the following table, and paste it in cell A1 of a new Excel worksheet. For formulas to show results, select them, press F2, and then press Enter. If you need to, you can adjust the column widths to see all the data. Checks whether the value in cell A4, #REF!, is an error. Checks whether the value in cell A4, #REF!, is the #N/A error. Checks whether the value in cell A6, #N/A, is the #N/A error. Checks whether the value in cell A6, #N/A, is an error. Checks whether the value in cell A5, 330.92, is a number. Checks whether the value in cell A3, Region1, is text."
    },
    {
        "link": "https://techonthenet.com/excel/formulas/isna.php",
        "document": "MS Excel: How to use the ISNA Function (WS) This Excel tutorial explains how to use the Excel ISNA function with syntax and examples.\n\nThe Microsoft Excel ISNA function can be used to check for a #N/A (value not available) error. The ISNA function is a built-in function in Excel that is categorized as an Information Function. It can be used as a worksheet function (WS) in Excel. As a worksheet function, the ISNA function can be entered as part of a formula in a cell of a worksheet.\n\nThe ISNA function returns TRUE if the value is an #N/A error.\n\n The ISNA function returns FALSE otherwise.\n\nLet's look at some Excel ISNA function examples and explore how to use the ISNA function as a worksheet function in Microsoft Excel: Based on the Excel spreadsheet above, the following ISNA examples would return:"
    }
]