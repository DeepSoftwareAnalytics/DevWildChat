[
    {
        "link": "https://docs.unity3d.com/6000.0/Documentation/ScriptReference/AI.NavMeshAgent.html",
        "document": "Suggest a change Thank you for helping us improve the quality of Unity Documentation. Although we cannot accept all submissions, we do read each suggested change from our users and will make updates where applicable. Close For some reason your suggested change could not be submitted. Please <a>try again</a> in a few minutes. And thank you for taking the time to help us improve the quality of Unity Documentation. Close\n\nAttach this component to a mobile character in the game to allow the character to use the NavMesh to navigate the scene. For more details refer to AI Navigation."
    },
    {
        "link": "https://docs.unity3d.com/Packages/com.unity.ai.navigation@1.1/manual/NavMoveToDestination.html",
        "document": "You can tell an agent to start calculating a path simply by setting the NavMeshAgent.destination property with the point you want the agent to move to. As soon as the calculation is finished, the agent will automatically move along the path until it reaches its destination. The following code implements a simple class that uses a GameObject to mark the target point which gets assigned to the destination property in the Start function. Note that the script assumes you have already added and configured the NavMeshAgent component from the editor."
    },
    {
        "link": "https://developer.vuforia.com/library/vuforia-engine/environments/area-targets/develop-with-area-targets/using-unitys-navmesh-navigation-area-targets",
        "document": "Using Unity's NavMesh for Navigation with Area Targets¶\n\nUse Area Targets to navigate your users in large spaces. Integrate Unity's navigation system to map your model or point cloud and create navigation between the user and points of interest (POI) in your AR application.\n\nA unity project with an Area Target and an AR Camera in the scene. See Area Targets in Unity for setup instructions.\n\nThe imported AI Navigation package from the Package Manager.\n\nFollow these steps to set up a NavMesh surface and NavMesh agent.\n\nYour imported Area Target will appear as a textured mesh or a point cloud. The steps to add a NavMesh surface differ slightly between the two.\n• Set the ARCamera's World Center Modeto FIRST_TARGET if you are using a single Area Target or specify an Area Target as SPECIFIC_TARGET to center the world origin around it.\n\nSetting the mode to DEVICE may offset the NavMesh agents' positioning at runtime. See Spatial Frame of Reference on how to change the mode.\n• Click Bake. A blue overlay should appear on the surface.\n• Right-click the Hierarchy and select AI -> NavMesh Surface. Add it as a child of the Area Target GameObject.\n• Add the navmesh.prefab as a child of the Area Target. It is found under . Position it to match the Area Target GameObject.\n• Deactivate the NavMesh prefab until you need to update the NavMesh by clicking Bake The NavMesh prefab can be deleted as the NavMesh is saved as an asset.\n\nDepending on your scanned space, adjustments may need to be made to cover the Area Target space correctly. In the navigation panel, adjust the baking settings for agents.\n\nNavMeshes and agent types are tied together so that multiple agents and surfaces with different settings can be used on the same surface.\n• Go to Window -> AI -> Navigation. The new panel allows you to create agents and adjust agent parameters. The Areas tab allows you to add costs to specified areas.\n• Make sure the correct agent type is selected. Adjust your agent's radius, height, and step height to increase or decrease the walkable surface.\n• Update the NavMesh by returning to the NavMeshSurface component and click Bake. NOTE: If gaps between the overlay around doorways still exist, edit the step heights to include more walkable areas in your scanned space. Proceed to click Bake again for an updated overlay.\n\nUse the NavMesh Modifier component on existing GameObjects or the NavMesh Modifier Volume to mark the areas you wish to remove from the NavMesh surface.\n• Right-click in the Hierarchy and select AI -> Navmesh Modifier Volume.\n• Adjust the box size and placement for the area you wish to remove as walkable.\n\nSee also Navigation Areas and Costs to change and improve pathing and the walkable navigation area.\n\nAdd pathing between two points by creating destination points. Unity automatically calculates the shortest path between the two points. Add obstacles and modifiers to improve the pathing, as the image below shows.\n\nUse the transforms of GameObjects for destination points. In most cases, the AR Camera represents the user and acts as the player. Use the Line Renderer component to render a line between the destination point and the user. See the NavMeshManager class in the Vuforia Core Samples for an example that uses the line renderer.\n\nContinue to edit the NavMesh for your use case, add points of interest in your scene, and guide users between points. Use NavMesh obstacles to create blockades or restrictions to navigation.\n\nReturn to Unity's manual to learn more about the applications of using NavMesh as navigation."
    },
    {
        "link": "https://discussions.unity.com/t/how-to-make-a-navmeshagent-follow-a-custom-path/765468",
        "document": ""
    },
    {
        "link": "https://discussions.unity.com/t/reset-and-follow-path-nav-mesh-agent/935286",
        "document": ""
    },
    {
        "link": "https://docs.unity3d.com/2023.1/Documentation/Manual/nav-BuildingNavMesh.html",
        "document": "The process of creating a NavMesh from the level geometry is called NavMesh Baking. The process collects the Render Meshes and TerrainsThe landscape in your scene. A Terrain GameObject adds a large flat plane to your scene and you can use the Terrain’s Inspector window to create a detailed landscape. More info\n\nSee in Glossary of all Game Objects which are marked as Navigation Static, and then processes them to create a navigation meshThe main graphics primitive of Unity. Meshes make up a large part of your 3D worlds. Unity supports triangulated or Quadrangulated polygon meshes. Nurbs, Nurms, Subdiv surfaces must be converted to polygons. More info\n\nSee in Glossary that approximates the walkable surfaces of the level.\n\nIn Unity, NavMesh generation is handled from the Navigation window (menu: Window > AI > Navigation (Obsolete)).\n\nBuilding a NavMesh for your sceneA Scene contains the environments and menus of your game. Think of each unique Scene file as a unique level. In each Scene, you place your environments, obstacles, and decorations, essentially designing and building your game in pieces. More info\n\nSee in Glossary can be done in 4 quick steps:\n• Select scene geometry that should affect the navigation – walkable surfaces and obstacles.\n• Check Navigation Static on to include selected objects in the NavMesh baking process.\n• Adjust the bake settings to match your agent size.\n• Agent Radius defines how close the agent center can get to a wall or a ledge.\n• Agent Height defines how low the spaces are that the agent can reach.\n• Max Slope defines how steep the ramps are that the agent walk up.\n• Step Height defines how high obstructions are that the agent can step on.\n\nThe resulting NavMesh will be shown in the scene as a blue overlay on the underlying level geometry whenever the Navigation Window is open and visible.\n\nAs you may have noticed in the above pictures, the walkable area in the generated NavMesh appears shrunk. The NavMesh represents the area where the center of the agent can move. Conceptually, it doesn’t matter whether you regard the agent as a point on a shrunken NavMesh or a circle on a full-size NavMesh since the two are equivalent. However, the point interpretation allows for better runtime efficiency and also allows the designer to see immediately whether an agent can squeeze through gaps without worrying about its radius.\n\nAnother thing to keep in mind is that the NavMesh is an approximation of the walkable surface. This can be seen for example in the stairs which are represented as a flat surface, while the source surface has steps. This is done in order to keep the NavMesh data size small. The side effect of the approximation is that sometimes you will need to have a little extra space in your level geometry to allows the agent to pass through a tight spot.\n\nWhen baking is complete, you will find a NavMesh asset file inside a folder with the same name as the scene the NavMesh belongs to. For example, if you have a scene called First Level in the Assets folder, the NavMesh will be at Assets > First Level > NavMesh.asset.\n• Creating a NavMeshAgent – learn how to allow your characters to move.\n• Areas and Costs – learn how to use different Area types."
    },
    {
        "link": "https://docs.unity3d.com/Packages/com.unity.ai.navigation@2.0/manual/CreateNavMesh.html",
        "document": "You need to create a NavMesh to define an area of your scene within which a character can navigate intelligently.\n\nTo create a NavMesh do the following:\n• Select the scene geometry where you want to add the NavMesh.\n• In the NavMesh Surface component, specify the necessary settings. For details on the available settings, refer to NavMesh Surface component.\n• When you are finished, click Bake. \n\n The NavMesh is generated and displayed in the scene as a blue overlay on the underlying scene geometry whenever the Navigation window is open and visible.\n\nYou can bake the NavMesh again to update it each time you make changes to either the scene geometry, the NavMesh modifiers, the properties of the NavMesh Surface component, or the settings of the selected agent type.\n\nTo permanently remove a NavMesh from your project, do one of the following:\n• Click the Clear button in the NavMesh Surface inspector.\n• Delete the NavMesh asset file in the Project window. If you choose to remove the NavMesh Surface component itself from the GameObject, the asset file is not deleted, even though the NavMesh is no longer present in the scene."
    },
    {
        "link": "https://discussions.unity.com/t/nav-mesh-in-2021/932325",
        "document": ""
    },
    {
        "link": "https://docs.unity.com",
        "document": "Docs and guides to work with the Unity ecosystem."
    },
    {
        "link": "https://discussions.unity.com/t/experimental-ai-navigation-package/845031",
        "document": ""
    }
]