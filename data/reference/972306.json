[
    {
        "link": "https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Input.html",
        "document": "Note: The class is part of the legacy Input Manager feature, and not recommended for new projects. The documentation provided below is to support legacy projects that use the old Input Manager and Input class. For new projects you should use the Input System Package. (read more)\n\n\n\n KeyCode maps to physical keys only if \"Use Physical Keys\" is enabled in Input Manager settings, otherwise it maps to layout and platform dependent key mapping. Starting from 2022.1 \"Use Physical Keys\" is enabled by default.\n\n\n\nUse this class to read the axes set up in the Conventional Game Input, and to access multi-touch/accelerometer data on mobile devices.\n\n\n\nTo read an axis use Input.GetAxis with one of the following default axes: \"Horizontal\" and \"Vertical\" are mapped to joystick, , , , and the arrow keys. \"Mouse X\" and \"Mouse Y\" are mapped to the mouse delta. \"Fire1\", \"Fire2\" \"Fire3\" are mapped to , , keys and three mouse or joystick buttons. New input axes can be added. See Input Manager for this.\n\n\n\nIf you are using input for any kind of movement behaviour use Input.GetAxis. It gives you smoothed and configurable input that can be mapped to a keyboard, joystick or mouse. Use Input.GetButton for action-like events only. Do not use it for movement. Input.GetAxis will make the script code smaller and simpler.\n\n\n\nNote: Input flags are not reset until . You should make all the Input calls in the Loop.\n\n\n\nAdditional resources: KeyCode which lists all of the key press, mouse and joystick options.\n\n\n\nMobile Devices:\n\n\n\niOS and Android devices are capable of tracking multiple fingers touching the screen simultaneously. You can access data on the status of each finger touching screen during the last frame by using the Input.touches property array.\n\n\n\nAs a device moves, its accelerometer hardware reports linear acceleration changes along the three primary axes in three-dimensional space. You can use this data to detect both the current orientation of the device (relative to the ground) and any immediate changes to that orientation.\n\n\n\nAcceleration along each axis is reported directly by the hardware as G-force values. A value of 1.0 represents a load of about +1g along a given axis while a value of -1.0 represents -1g. If you hold the device upright (with the home button at the bottom) in front of you, the X axis is positive along the right, the Y axis is positive directly up, and the Z axis is positive pointing toward you.\n\n\n\nYou can use the Input.acceleration property to get the accelerometer reading. You can also use the Input.deviceOrientation property to get a discrete evaluation of the device's orientation in three-dimensional space. Detecting a change in orientation can be useful if you want to create game behaviors when the user rotates the device to hold it differently.\n\n\n\nNote that the accelerometer hardware can be polled more than once per frame. To access all accelerometer samples since the last frame, you can use the Input.accelerationEvents property array. This can be useful when reconstructing player motions, feeding acceleration data into a predictor, or implementing other precise motion analysis."
    },
    {
        "link": "https://discussions.unity.com/t/third-person-camera-movement-script/783511",
        "document": ""
    },
    {
        "link": "https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Camera.html",
        "document": "A screen space point is defined in pixels. The bottom-left of the screen is (0,0); the right-top is (pixelWidth,pixelHeight). The z position is in world units from the Camera.\n\n\n\nA viewport space point is normalized and relative to the Camera. The bottom-left of the Camera is (0,0); the top-right is (1,1). The z position is in world units from the Camera.\n\n\n\nA world space point is defined in global coordinates (for example, Transform.position).\n\n\n\nAdditional resources: camera component."
    },
    {
        "link": "https://learn.unity.com/tutorial/controlling-unity-camera-behaviour",
        "document": "In this tutorial, we’ll dive deeper into Unity Cameras with scripts that control their behavior. We’ll start out with a 2D Camera that works from any perspective (in this case, we’ll be using it in an overhead view). Next, we’ll move on to 3D with a Camera that smoothly transitions — with a flick of the mouse scroll wheel — from first-person to third-person and back. This Camera is suitable for games, VR, or architectural walkthroughs, as seen in many modern and classic 3D titles."
    },
    {
        "link": "https://discussions.unity.com/t/moving-camera-with-wasd/56321",
        "document": ""
    },
    {
        "link": "https://learn.unity.com/tutorial/controlling-unity-camera-behaviour",
        "document": "In this tutorial, we’ll dive deeper into Unity Cameras with scripts that control their behavior. We’ll start out with a 2D Camera that works from any perspective (in this case, we’ll be using it in an overhead view). Next, we’ll move on to 3D with a Camera that smoothly transitions — with a flick of the mouse scroll wheel — from first-person to third-person and back. This Camera is suitable for games, VR, or architectural walkthroughs, as seen in many modern and classic 3D titles."
    },
    {
        "link": "https://discussions.unity.com/t/tutorial-how-to-make-a-configurable-camera-with-the-new-unity-input-system/762252",
        "document": ""
    },
    {
        "link": "https://onewheelstudio.com/blog/2022/1/14/strategy-game-camera-unitys-new-input-system",
        "document": "The goal here is to build a camera controller that could be used in a wide variety of strategy games. And to do it using Unity’s “New” Input System.\n• None Dragging the world with the mouse\n• None Moving when the mouse is near the screen edge Since I’ll be using the New Input System, you’ll want to be familiar with that before diving too deep into this camera controller. Check either the video or the written blog post. If you’re just here for the code or want to copy and paste, you can get the code along with the Input Action Asset on GitHub.\n\nAdmittedly I don’t love the next function. It feels a bit clumsy, but since I’m not using a rigidbody and I want the camera to smoothly speed up and slow down I need a way to calculate and track the velocity (in the horizontal plane). So thus the Update Velocity function. Nothing too special in the function other than once again squashing the y dimension of the velocity to zero. After calculating the velocity we update the value of the last position for the next frame. This ensures we are calculating the velocity for the frame and not from the start. The next function is the poorly named Get Keyboard Movement function. This function polls the Camera Movement action to then set the target position. In order to translate the input into the motion we want we need to be a bit careful. We’ll take the x component of the input and multiply it by the Camera Right function and add that to the y component of the input multiplied by the Camera Forward function. This ensures that the movement is in the horizontal plane and relative to the camera. We then normalize the resulting vector to keep a uniform length so that the speed will be constant even if multiple keys are pressed (up and right for example).\n\nWith horizontal and rotational motion working it would be nice to move the camera up and down to let the player see more or less of the world. For controlling the “zooming” we’ll be using the mouse scroll wheel. This motion, I found to be one of the more complicated as there were several bits I wanted to include. I wanted there to be a min and max height for the camera - this keeps the player from zooming too far out or zooming down to nothingness - also while going up and down it feels a bit more natural if the camera gets closer or farther away from what it’s looking at. This zoom motion is another good use of events so we need need to make a couple of additions to the OnEnable and OnDisable. Just like we did with the rotation we need to subscribe and unsubscribe to the performed event for the zoom camera action. We also need to set the value of zoom height equal to the local y position of the camera - this gives an initial value and prevents the camera from doing wacky things. Then inside the Zoom Camera function, we’ll cache a reference to the y component of the scroll wheel input and divide by 100 - this scales the value to something more useful (in my opinion)."
    },
    {
        "link": "https://albertogarciaf.medium.com/creating-an-immersive-security-camera-system-with-unity-cinemachine-and-user-input-50898d71ea25",
        "document": "Creating an interactive security camera system can add a layer of excitement and challenge to your project. With the help of two powerful scripts, “CameraTrigger” and “CameraController,” you can easily build an engaging security camera system that responds to player actions. In this article, we will guide you through the process of constructing an interactive security camera system using these scripts in Unity.\n\nThe “CameraTrigger” and “CameraController” scripts are essential components of the security camera system. The “CameraTrigger” script detects when the player enters or exits a specific area, while the “CameraController” script manages camera priorities and camera switching.\n\nSetting Up the Security Camera Area: Start by placing a trigger collider in the area you want to monitor with the security camera. Attach the “CameraTrigger” script to the trigger collider. I’ll use this long cuboid as trigger.\n\nHere is the Camera Trigger script:\n\nThe “CameraTrigger” script listens for the player’s entry and exit events within the trigger area. Upon detecting the player, it instructs the “CameraController” to switch to the designated security camera. When the player exits the area, the script returns the camera to its default state.\n\nHere is the Camera Controller script:\n\nThe “CameraController” script is responsible for handling camera priorities. It sets all cameras except the current active camera to a low priority level to ensure that only the chosen security camera has the highest priority and remains in view.\n\nWith the security camera active, players can interact with the system by pressing the “C” key to switch between different security cameras. This feature adds an interactive element to the gameplay and allows players to survey their surroundings strategically. This is how it looks in action:\n\nTo further enhance your interactive security camera system, you can customize the number and positions of the security cameras, adjust camera angles, and even introduce more complex camera behaviors using Cinemachine’s powerful features.\n\nCreating an interactive security camera system in Unity is a rewarding endeavor that can elevate your game’s immersive experience. With the “CameraTrigger” and “CameraController” scripts, you can seamlessly manage camera priorities and dynamically switch between security cameras as the player interacts with the environment. By customizing and expanding on this system, you can craft engaging and challenging gameplay scenarios that keep players on their toes. Happy developing!"
    },
    {
        "link": "https://reddit.com/r/Unity3D/comments/151vaqw/best_way_to_use_unity_new_input_system_with",
        "document": "I apologize in advance if my question/examples are unclear, English is not my main language !\n\nBasically I'm using Unity new input system but I would like to know how could I use it with multiples scripts. Most tutorial only show one example or one script at a time with the PlayerInput that Unity provides, but what if I want to separate my code to keep it clean ?\n\nExample : I got my PlayerMovement script that need the movement input and I got an \"Interactor\" (That interact with interactable objects) and maybe a PlayerView script etc.. etc..\n\nWhat would be the best way to get the input for each of thoses scripts ?\n\nFor the moment I'm using : InputActionReference and InputActionProperty but is there \"cleaner\" way to do ?"
    }
]