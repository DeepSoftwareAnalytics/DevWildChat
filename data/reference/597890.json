[
    {
        "link": "https://bukkit.org/threads/tutorial-player-interact-events.231864",
        "document": "\n• None //Define the item in their hand\n• None //If the player right clicks air or a block"
    },
    {
        "link": "https://spigotmc.org/wiki/using-the-event-api",
        "document": ""
    },
    {
        "link": "https://bukkit.org/threads/1-13-needs-a-player-event-listeners-and-reactions-based-sandbox-working-1-10-1-12-example-provided.477832",
        "document": "ox I ever used. It can do anything. Sadly it cannot \n\n do anything in 1.13+ except retire\n\nSkript was put to shame by this magical plugin\n\nCan you make something like this for 1.13+ ??\n\nIf it seems like alot to wish\n\n for, I'm only asking for a fraction of what the below shiney magic .jar actually does\n\nEvents.yml would contain an an easy to use example and admins would just copy paste \n\n it loads of times with different triggers and reactions"
    },
    {
        "link": "https://docs.papermc.io/paper/dev/event-listeners",
        "document": "Events are an efficient way to listen for specific actions that happen in the game. They can be called by the server, or by plugins. These are called by the server or plugins when something happens, such as a player joining the server, or a block being broken. Plugins are able to call custom events, such as a player completing a quest, for other plugins to listen for.\n\nTo listen for events, you need to create a class that implements . This class can be called anything you want, but it is recommended to name it something related to the events you are listening for.\n\nTo listen for an event, you need to create a method that is annotated with . This method can be named anything you want, but it is recommended to name it something meaningful related to the event it is listening for.\n\nThe method body does not need to return any data, for this reason, use void as the return type. Listeners take in a single parameter, which is the event that is being listened to.\n\nTo register the listener, you need to call and pass in your listener class instance and an instance of your plugin.\n\nThis will register your listener class and allow it to listen for events. This is commonly done in the method of your plugin so that it is registered when the server starts ticking.\n\nYou can also specify the priority of the event.\n\nThere are six different priorities that you can use:\n\nThe order of the priorities is somewhat counter-intuitive. The higher the priority, the later the event is called. For example, if it is important that your plugin has the last say in a certain event - to avoid it being changed - you should use .\n\nSome events can be cancelled, preventing the given action from being completed. These events implement .\n\nThe above example will cancel the event, meaning that the player will not be able to move. Once an event is cancelled, it will continue to call any other listeners for that event unless they add to the annotation to ignore cancelled events."
    },
    {
        "link": "https://stackoverflow.com/questions/70639319/how-to-register-an-event-in-coding-a-spigot-plugin",
        "document": "I have tried randomizing potion effects every time a player eats something. I used this code, but nothing happened:\n\nI researched a bit, but everything I found was that I have to register an event in the onEnable Method. But if I try this like that it throws an error in Eclipse because the Method needs a Listener. Can I register this event differently?"
    },
    {
        "link": "https://dev.bukkit.org/projects/fawe",
        "document": "> What is FAWE and why should I use it?\n• Simple to setup and use\n• Safe for many players to use\n• Insanely fast, when using the slowest mode\n\nIf you use other plugins which depend on WorldEdit, simply having FAWE installed will boost their performance.\n• None billions of blocks (e.g. remove all chests, trim worlds, etc) Use commands to changeof blocks (e.g. remove all chests, trim worlds, etc)\n• None Adds lots of powerful new //brushes and //tools.\n\nThere several placement modes, each supporting higher throughput than the previous. All editing is processed async with certain tasks being broken up on the main thread. The default mode is chunk placement.\n• None Blocks (Bukkit-API) - Only used if chunk placement isn't supported. Still faster than any other plugin on spigot.\n• None Regions (Anvil) - Directly modifies the map files, has some latency.\n• None World (CFI) - Used to generate new worlds / regions\n\nThe following plugins are supported with Bukkit\n\nBy default you can use `//inspect` and `//rollback` to search and restore changes. To reduce disk usage, increase the compression level and buffer size. To bypass logging use `//fast`.\n• FAWE maintains API compatibility with WorldEdit so you can use the normal WorldEdit API async.\n• FAWE also has some async wrappers for the .\n• The wiki has examples for various things like reading NBT, modifying world files, pasting schematics, splitting up tasks, lighting etc.\n• If you need help with anything, hop on discord (link above)\n\nAnonymous Upload/Download interface (There are multiple styles to choose from)"
    },
    {
        "link": "https://spigotmc.org/resources/fastasyncworldedit.13932",
        "document": ""
    },
    {
        "link": "https://github.com/IntellectualSites/FastAsyncWorldEdit",
        "document": "\n• Simple to set up and use\n• Safe for many players to use\n• Insanely fast, when using the slowest mode\n\nFastAsyncWorldEdit is a fork of WorldEdit that has huge speed and memory improvements and considerably more features.\n\n If you use other plugins which depend on WorldEdit, simply having FAWE installed will boost their performance.\n\nDownloads are available either on SpigotMC, Modrinth or on CurseForge.\n\nSnapshots are available on Jenkins.\n• Adds lots of powerful new //brushes and //tools.\n• Adds a lot more pattern functionality. (a lot of new pattern syntax and patterns)\n\nThere are several placement modes, each supporting higher throughput than the previous. All editing is processed asynchronously, with certain tasks being broken up on the main thread. The default mode is chunk placement.\n• Blocks (Bukkit-API) - Only used if chunk placement isn't supported. Still faster than any other plugin on spigot.\n• World (CFI) - Used to generate new worlds / regions\n\nThe following plugins are supported with Bukkit:\n\nBy default you can use and to search and restore changes. To reduce disk usage, increase the compression level and buffer size. To bypass logging use .\n\nFAWE maintains API compatibility with WorldEdit, so you can use the normal WorldEdit API asynchronously. FAWE also has some asynchronously wrappers for the Bukkit API. The wiki has examples for various things like reading NBT, modifying world files, pasting schematics, splitting up tasks, lighting etc. If you need help with anything, hop on discord (link on the left bar).\n\nWant to add new features to FastAsyncWorldEdit or fix bugs yourself? You can get the game running, with FastAsyncWorldEdit, from the code here:\n\nFor additional information about compiling FastAsyncWorldEdit, read the compiling documentation.\n\nJetBrains, creators of the IntelliJ IDEA, supports us with their Open Source Licenses.\n\nThank you to YourKit for supporting our product by providing us with their innovative and intelligent tools for monitoring and profiling Java and .NET applications. YourKit is the creator of YourKit Java Profiler, YourKit .NET Profiler, and YourKit YouMonitor."
    },
    {
        "link": "https://hangar.papermc.io/IntellectualSites/FastAsyncWorldEdit",
        "document": "What is FAWE and why should I use it?\n• Simple to set up and use\n• Safe for many players to use\n• Insanely fast, when using the slowest mode\n\nFastAsyncWorldEdit is a fork of WorldEdit that has huge speed and memory improvements and considerably more features.\n\nIf you use other plugins which depend on WorldEdit, simply having FAWE installed will boost their performance.\n• Adds lots of powerful new //brushes and //tools.\n• Adds a lot more pattern functionality. (a lot of new pattern syntax and patterns)\n• Folia supported builds can be obtained from https://ci.athion.net/job/FastAsyncWorldEdit-Pull-Requests/view/change-requests/job/PR-2165/\n\nThere are several placement modes, each supporting higher throughput than the previous. All editing is processed asynchronously, with certain tasks being broken up on the main thread. The default mode is chunk placement.\n• Blocks (Bukkit-API) - Only used if chunk placement isn't supported. Still faster than any other plugin on spigot.\n• World (CFI) - Used to generate new worlds / regions\n\nThe following plugins are supported with Bukkit:\n\nBy default you can use and to search and restore changes. To reduce disk usage, increase the compression level and buffer size. To bypass logging use .\n\nFAWE maintains API compatibility with WorldEdit, so you can use the normal WorldEdit API asynchronously. FAWE also has some asynchronously wrappers for the Bukkit API. The wiki has examples for various things like reading NBT, modifying world files, pasting schematics, splitting up tasks, lighting etc. If you need help with anything, hop on discord (link on the left bar).\n\nWant to add new features to FastAsyncWorldEdit or fix bugs yourself? You can get the game running, with FastAsyncWorldEdit, from the code here:\n\nFor additional information about compiling FastAsyncWorldEdit, read the compiling documentation.\n\nJetBrains, creators of the IntelliJ IDEA, supports us with their Open Source Licenses.\n\nThank you to YourKit for supporting our product by providing us with their innovative and intelligent tools for monitoring and profiling Java and .NET applications. YourKit is the creator of YourKit Java Profiler, YourKit .NET Profiler, and YourKit YouMonitor."
    },
    {
        "link": "https://modrinth.com/plugin/fastasyncworldedit",
        "document": "What is FAWE and why should I use it?\n• Simple to set up and use\n• Safe for many players to use\n• Insanely fast, when using the slowest mode\n\nFastAsyncWorldEdit is a fork of WorldEdit that has huge speed and memory improvements and considerably more features.\n\n If you use other plugins which depend on WorldEdit, simply having FAWE installed will boost their performance.\n\nDownloads are available either on SpigotMC, Modrinth or on CurseForge.\n\nSnapshots are available on Jenkins.\n• Adds lots of powerful new //brushes and //tools.\n• Adds a lot more pattern functionality. (a lot of new pattern syntax and patterns)\n\nThere are several placement modes, each supporting higher throughput than the previous. All editing is processed asynchronously, with certain tasks being broken up on the main thread. The default mode is chunk placement.\n• Blocks (Bukkit-API) - Only used if chunk placement isn't supported. Still faster than any other plugin on spigot.\n• World (CFI) - Used to generate new worlds / regions\n\nThe following plugins are supported with Bukkit:\n\nBy default you can use and to search and restore changes. To reduce disk usage, increase the compression level and buffer size. To bypass logging use .\n\nFAWE maintains API compatibility with WorldEdit, so you can use the normal WorldEdit API asynchronously. FAWE also has some asynchronously wrappers for the Bukkit API. The wiki has examples for various things like reading NBT, modifying world files, pasting schematics, splitting up tasks, lighting etc. If you need help with anything, hop on discord (link on the left bar).\n\nWant to add new features to FastAsyncWorldEdit or fix bugs yourself? You can get the game running, with FastAsyncWorldEdit, from the code here:\n\nFor additional information about compiling FastAsyncWorldEdit, read the compiling documentation.\n\nJetBrains, creators of the IntelliJ IDEA, supports us with their Open Source Licenses.\n\nThank you to YourKit for supporting our product by providing us with their innovative and intelligent tools for monitoring and profiling Java and .NET applications. YourKit is the creator of YourKit Java Profiler, YourKit .NET Profiler, and YourKit YouMonitor."
    }
]