[
    {
        "link": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html",
        "document": "Creates a new instance profile. For information about instance profiles, see Using instance profiles.\n\nFor information about the number of instance profiles you can create, see IAM object quotas in the IAM User Guide.\n\nTo declare this entity in your AWS CloudFormation template, use the following syntax:\n\nThe name of the instance profile to create. This parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@- The path to the instance profile. For more information about paths, see IAM Identifiers in the IAM User Guide. This parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! ( ) through the DEL character ( ), including most punctuation characters, digits, and upper and lowercased letters. The name of the role to associate with the instance profile. Only one role can be assigned to an EC2 instance at a time, and all applications on the instance share the same role and permissions.\n\nWhen you pass the logical ID of this resource to the intrinsic function, returns the resource name. For example:\n\nFor the resource with the logical ID , Ref returns the name of the instance profile.\n\nFor more information about using the function, see .\n\nThe intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.\n\nFor more information about using the intrinsic function, see .\n\nIn this example, the InstanceProfile resource refers to the role by specifying its name, \"MyRole\"."
    },
    {
        "link": "https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html",
        "document": "Creates a new instance profile. For information about instance profiles, see Using instance profiles.\n\nFor information about the number of instance profiles you can create, see IAM object quotas in the IAM User Guide.\n\nTo declare this entity in your AWS CloudFormation template, use the following syntax:\n\nThe name of the instance profile to create. This parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@- The path to the instance profile. For more information about paths, see IAM Identifiers in the IAM User Guide. This parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! ( ) through the DEL character ( ), including most punctuation characters, digits, and upper and lowercased letters. The name of the role to associate with the instance profile. Only one role can be assigned to an EC2 instance at a time, and all applications on the instance share the same role and permissions.\n\nWhen you pass the logical ID of this resource to the intrinsic function, returns the resource name. For example:\n\nFor the resource with the logical ID , Ref returns the name of the instance profile.\n\nFor more information about using the function, see .\n\nThe intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.\n\nFor more information about using the intrinsic function, see .\n\nIn this example, the InstanceProfile resource refers to the role by specifying its name, \"MyRole\"."
    },
    {
        "link": "https://docs.aws.amazon.com/pt_br/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html",
        "document": "Creates a new instance profile. For information about instance profiles, see Using instance profiles.\n\nFor information about the number of instance profiles you can create, see IAM object quotas in the IAM User Guide.\n\nTo declare this entity in your AWS CloudFormation template, use the following syntax:\n\nThe name of the instance profile to create. This parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@- The path to the instance profile. For more information about paths, see IAM Identifiers in the IAM User Guide. This parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! ( ) through the DEL character ( ), including most punctuation characters, digits, and upper and lowercased letters. The name of the role to associate with the instance profile. Only one role can be assigned to an EC2 instance at a time, and all applications on the instance share the same role and permissions.\n\nWhen you pass the logical ID of this resource to the intrinsic function, returns the resource name. For example:\n\nFor the resource with the logical ID , Ref returns the name of the instance profile.\n\nFor more information about using the function, see .\n\nThe intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.\n\nFor more information about using the intrinsic function, see .\n\nIn this example, the InstanceProfile resource refers to the role by specifying its name, \"MyRole\"."
    },
    {
        "link": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html",
        "document": "The Availability Zone of the instance. If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region. This parameter is not supported by DescribeImageAttribute.\n\nThe block device mapping entries that defines the block devices to attach to the instance at launch. By default, the block devices specified in the block device mapping for the AMI are used. You can override the AMI block device mapping using the instance block device mapping. For the root volume, you can override only the volume size, volume type, volume encryption settings, and the setting. After the instance is running, you can modify only the parameter for the attached volumes without interrupting the instance. Modifying any other parameter results in instance replacement.\n\nThe number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch. You cannot specify this option and the network interfaces option in the same request.\n\nThe primary IPv4 address. You must specify a value from the IPv4 address range of the subnet. Only one private IP address can be designated as primary. You can't specify this option if you've specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you're launching more than one instance in the request. You cannot specify this option and the network interfaces option in the same request. If you make an update to an instance that requires replacement, you must assign a new private IP address. During a replacement, AWS CloudFormation creates a new instance but doesn't delete the old instance until the stack has successfully updated. If the stack update fails, AWS CloudFormation uses the old instance to roll back the stack to the previous working state. The old and new instances cannot have the same private IP address."
    },
    {
        "link": "https://docs.aws.amazon.com/zh_tw/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html",
        "document": "Creates a new instance profile. For information about instance profiles, see Using instance profiles.\n\nFor information about the number of instance profiles you can create, see IAM object quotas in the IAM User Guide.\n\nTo declare this entity in your AWS CloudFormation template, use the following syntax:\n\nThe name of the instance profile to create. This parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@- The path to the instance profile. For more information about paths, see IAM Identifiers in the IAM User Guide. This parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! ( ) through the DEL character ( ), including most punctuation characters, digits, and upper and lowercased letters. The name of the role to associate with the instance profile. Only one role can be assigned to an EC2 instance at a time, and all applications on the instance share the same role and permissions.\n\nWhen you pass the logical ID of this resource to the intrinsic function, returns the resource name. For example:\n\nFor the resource with the logical ID , Ref returns the name of the instance profile.\n\nFor more information about using the function, see .\n\nThe intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.\n\nFor more information about using the intrinsic function, see .\n\nIn this example, the InstanceProfile resource refers to the role by specifying its name, \"MyRole\"."
    },
    {
        "link": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html",
        "document": "Creates a new instance profile. For information about instance profiles, see Using instance profiles.\n\nFor information about the number of instance profiles you can create, see IAM object quotas in the IAM User Guide.\n\nTo declare this entity in your AWS CloudFormation template, use the following syntax:\n\nThe name of the instance profile to create. This parameter allows (through its regex pattern ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@- The path to the instance profile. For more information about paths, see IAM Identifiers in the IAM User Guide. This parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its regex pattern ) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! ( ) through the DEL character ( ), including most punctuation characters, digits, and upper and lowercased letters. The name of the role to associate with the instance profile. Only one role can be assigned to an EC2 instance at a time, and all applications on the instance share the same role and permissions.\n\nWhen you pass the logical ID of this resource to the intrinsic function, returns the resource name. For example:\n\nFor the resource with the logical ID , Ref returns the name of the instance profile.\n\nFor more information about using the function, see .\n\nThe intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.\n\nFor more information about using the intrinsic function, see .\n\nIn this example, the InstanceProfile resource refers to the role by specifying its name, \"MyRole\"."
    },
    {
        "link": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html",
        "document": "Creates a new role for your AWS account.\n\nFor more information about roles, see IAM roles in the IAM User Guide. For information about quotas for role names and the number of roles you can create, see IAM and AWS STS quotas in the IAM User Guide.\n\nTo declare this entity in your AWS CloudFormation template, use the following syntax:\n\nWhen the logical ID of this resource is provided to the intrinsic function, returns the resource name.\n\nFor the resource with the logical ID , will return the role name.\n\nFor more information about using the function, see .\n\nThe intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.\n\nFor more information about using the intrinsic function, see .\n\nThis example shows an embedded policy in the . The policy is specified inline in the property of the .\n\nIn this example, the Policy and InstanceProfile resources are specified externally to the IAM Role. They refer to the role by specifying its name, \"RootRole\", in their respective properties."
    },
    {
        "link": "https://blog.awsfundamentals.com/aws-iam-roles-with-aws-cloudformation",
        "document": "Amazon Web Services Identity and Access Management, AWS IAM, provides a robust framework for controlling access to AWS services and resources. Managing permissions and access control in cloud environments is critical for ensuring the security and integrity of your environment and applications.\n\nAWS CloudFormation is a great way to manage and automate your AWS infrastructure by provisioning templates written in JSON or YAML. With CloudFormation, you can define your infrastructure as code and deploy it consistently across multiple environments and accounts.\n\nWhat is an IAM Role?\n\nLet's briefly understand what IAM roles are in the context of AWS.\n\nAWS IAM consists of several key components that provide robust access control and security management within the AWS environment. The main components of AWS IAM are:\n• Users: Users are the entities representing individual people within your organization who interact with AWS services. Each user has a unique set of security credentials, including an access key and a secret access key, which are used to authenticate and authorize API requests.\n• Groups: Groups are collections of IAM users. Organizing users into groups allows you to manage and assign permissions to multiple users simultaneously. All users automatically inherit permissions granted to a group.\n• Roles: IAM roles define a set of permissions and access policies that AWS resources or IAM users can assume. Roles are often used to delegate access to AWS services or cross-account access. By assuming a role, an entity can temporarily receive specific permissions and carry out authorized actions on behalf of another entity.\n• Policies: IAM policies are JSON documents that define permissions and access control rules. They can be attached to users, groups, or roles. Policies explain what actions are allowed or denied on specific resources or services and provide fine-grained control over who can perform what actions.\n\nAn IAM role is a secure way to grant permissions to entities in AWS, such as IAM users, AWS services, or external identities, without needing long-term access keys.\n\nIAM Roles define a set of permissions, which can be assumed by trusted entities, allowing them to perform actions on AWS resources.\n\nIAM roles often grant AWS services permissions or establish trust relationships with external entities, such as identity providers or cross-account access.\n\nAWS CloudFormation provides a declarative way to define and provision infrastructure resources. To create an IAM role with CloudFormation, you need to define a resource of the type .\n\nIn this example, we define a role named with a policy that allows EC2 instances to assume this role. The role also has a policy that grants permission to read objects from an S3 bucket resource .\n\nThe specifies the trust policy that is associated with this role. Trust policies define which entities can assume the role.\n\nIn this case, we allow the EC2 service to assume the IAM Role by specifying as the principal in the field. You can associate only one trust policy with a role.\n\nThe section defines the inline policy document embedded in the role. In our example, we create a policy named that grants permission to perform the action on objects in the S3 bucket.\n\nWhen you embed an inline policy in a role, the inline policy is used as part of the role's access permissions policy. The role's trust policy is created at the same time as the role.\n\nA complete list of properties can be found in the CloudFormation documentation for the resource type.\n\nOnce you have created an IAM role, you can use it with other AWS resources in your CloudFormation templates.\n\nLet's consider an example where we create an EC2 instance and associate the previously created IAM role with it:\n\nIn this example, we define components to create an EC2 instance resource named .\n\nWe specify the to allow the EC2 instance to have specific permissions assigned to it through an IAM role. We reference the IAM role we created earlier.\n\nThis ensures that the EC2 instance assumes the specified IAM role, inheriting its permissions and policies. By associating IAM roles with resources, you can enforce the principle of least privilege, granting only the necessary permissions to perform specific actions.\n\nWe are using the CloudFormation intrinsic function to return the resource value reference.\n\nThe is an Amazon EC2 security group. It acts as a virtual firewall for the EC2 instance, controlling inbound and outbound traffic. This example template allows incoming SSH traffic on port 22 from any IP address (0.0.0.0/0).\n\nFor every AWS service, you can specify what actions are allowed, which resources those actions can be applied to, and any additional conditions that need to be met in IAM policies.\n\nThe AWS documentation page Service Authorization Reference contains the actions, resources, and condition keys for AWS services.\n\nLet's update our IAM Role permission to allow our application to put objects in the S3 bucket. Looking at the Amazon S3 actions table, we can use to enable our application to send files to S3:\n\nAWS CloudFormation simplifies the creation, usage, and management of IAM Roles, providing a streamlined approach to managing access control and permissions for your AWS resources.\n\nCloudFormation enables you to manage IAM roles over time through stack updates. If you need to modify the permissions or policies of an IAM role, you can update the CloudFormation template, and CloudFormation will handle the necessary updates during stack update operations.\n\nBy utilizing CloudFormation and IAM Roles together, you can enhance the security and governance of your AWS infrastructure. The declarative nature of CloudFormation allows for consistent and reproducible deployments, while IAM Roles enforce the least privileged access, granting only the necessary permissions for your resources.\n\nTo learn more about the IAM Role and IAM Policies relationship, check out our guide AWS IAM Policies: A Practical Approach.\n\nIf you liked this article, you may be interested in these related articles:"
    },
    {
        "link": "https://stackoverflow.com/questions/20329067/associate-existing-iam-role-with-ec2-instance-in-cloudformation",
        "document": "You can use an existing InstanceProfile instead of creating a new one from within the stack. In fact, one might already be created for you - from the docs:\n\nIf you use the AWS Management Console to create a role for Amazon EC2, the console automatically creates an instance profile and gives it the same name as the role.\n\nThis means that you might not have to create an resource in the stack. However note that also:\n\nThe console does not create an instance profile for a role that is not associated with Amazon EC2.\n\nIn this case you can do it manually from AWS CLI using these 2 commands:\n\nThen, provided you've defined a role in the UI named , this will be sufficient:"
    },
    {
        "link": "https://github.com/Tiamatt/Mastering-AWS-CloudFormation/blob/main/IAM/Roles-InstanceProfile.yaml",
        "document": "Use an instance profile to pass an IAM role to an EC2 instance\n\n: Unique name for a new instance profile\n\n: Instance profile name must be between 1 and 64 alphanumeric characters in length, starting with an uppercase or lowercase character of the alphabet\n\n: Existing role name you want to associate the instance profile with\n\n: Make sure that this role exist\n\n: IAM Path that you want to associate with the instance profile"
    }
]