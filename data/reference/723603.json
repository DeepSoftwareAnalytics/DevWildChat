[
    {
        "link": "https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Physics2D.Raycast.html",
        "document": "Suggest a change Thank you for helping us improve the quality of Unity Documentation. Although we cannot accept all submissions, we do read each suggested change from our users and will make updates where applicable. Close For some reason your suggested change could not be submitted. Please <a>try again</a> in a few minutes. And thank you for taking the time to help us improve the quality of Unity Documentation. Close\n\nA raycast is conceptually like a laser beam that is fired from a point in space along a particular direction. Any object making contact with the beam can be detected and reported.\n\n\n\nThis function returns a RaycastHit2D object with a reference to the Collider that is hit by the ray (the Collider property of the result will be NULL if nothing was hit). The layerMask can be used to detect objects selectively only on certain layers (this allows you to apply the detection only to enemy characters, for example).\n\n\n\nOverloads of this method that use can filter the results by the options available in ContactFilter2D.\n\n\n\nRaycasts are useful for determining lines of sight, targets hit by gunfire and for many other purposes in gameplay.\n\n\n\nAdditionally, this will also detect Collider(s) at the start of the ray. In this case, the ray starts inside the Collider and doesn't intersect the Collider surface. This means that the collision normal cannot be calculated, in which case the returned collision normal is set to the inverse of the ray vector being tested. This can easily be detected because such results are always at a RaycastHit2D fraction of zero.\n\n\n\nAdditional resources: LayerMask class, RaycastHit2D class, RaycastAll, Linecast, DefaultRaycastLayers, IgnoreRaycastLayer, raycastsHitTriggers.\n\nThis function returns the number of contacts found and places those contacts in the array. The results can also be filtered by the .\n\n\n\nAdditional resources: ContactFilter2D and RaycastHit2D.\n\nThe integer return value is the number of results written into the list. The results list will be resized if it doesn't contain enough elements to report all the results. This prevents memory from being allocated for results when the list does not need to be resized, and improves garbage collection performance when the query is performed frequently.\n\n\n\nThe results can also be filtered by the .\n\n\n\nAdditional resources: ContactFilter2D and RaycastHit2D."
    },
    {
        "link": "https://docs.unity3d.com/2020.1/Documentation/ScriptReference/Physics2D.Raycast.html",
        "document": "Suggest a change Thank you for helping us improve the quality of Unity Documentation. Although we cannot accept all submissions, we do read each suggested change from our users and will make updates where applicable. Close For some reason your suggested change could not be submitted. Please <a>try again</a> in a few minutes. And thank you for taking the time to help us improve the quality of Unity Documentation. Close The point in 2D space where the ray originates. A vector representing the direction of the ray. The maximum distance over which to cast the ray. Filter to detect Colliders only on certain layers. Only include objects with a Z coordinate (depth) greater than or equal to this value. Only include objects with a Z coordinate (depth) less than or equal to this value. Casts a ray against colliders in the Scene. A raycast is conceptually like a laser beam that is fired from a point in space along a particular direction. Any object making contact with the beam can be detected and reported.\n\n\n\nThis function returns a RaycastHit object with a reference to the collider that is hit by the ray (the collider property of the result will be NULL if nothing was hit). The layerMask can be used to detect objects selectively only on certain layers (this allows you to apply the detection only to enemy characters, for example).\n\n\n\nOverloads of this method that use can filter the results by the options available in ContactFilter2D.\n\n\n\nRaycasts are useful for determining lines of sight, targets hit by gunfire and for many other purposes in gameplay.\n\n\n\nAdditionally, this will also detect Collider(s) at the start of the ray. In this case, the ray starts inside the Collider and doesn't intersect the Collider surface. This means that the collision normal cannot be calculated, in which case the returned collision normal is set to the inverse of the ray vector being tested. This can easily be detected because such results are always at a RaycastHit2D fraction of zero.\n\n\n\nSee Also: LayerMask class, RaycastHit2D class, RaycastAll, Linecast, DefaultRaycastLayers, IgnoreRaycastLayer, raycastsHitTriggers. using UnityEngine;\n\n\n\npublic class Example : MonoBehaviour { // Float a rigidbody object a set distance above a surface.\n\n\n\n public float floatHeight; // Desired floating height. public float liftForce; // Force to apply when lifting the rigidbody. public float damping; // Force reduction proportional to speed (reduces bouncing).\n\n\n\n Rigidbody2D rb2D;\n\n\n\n void Start() { rb2D = GetComponent<Rigidbody2D>(); }\n\n\n\n void FixedUpdate() { // Cast a ray straight down. RaycastHit2D hit = Physics2D.Raycast(transform.position, -Vector2.up);\n\n\n\n // If it hits something... if (hit.collider != null) { // Calculate the distance from the surface and the \"error\" relative // to the floating height. float distance = Mathf.Abs(hit.point.y - transform.position.y); float heightError = floatHeight - distance;\n\n\n\n // The force is proportional to the height error, but we remove a part of it // according to the object's speed. float force = liftForce * heightError - rb2D.velocity.y * damping;\n\n\n\n // Apply the force to the rigidbody. rb2D.AddForce(Vector3.up * force); } } } The point in 2D space where the ray originates. A vector representing the direction of the ray. The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle. The array to receive results. The size of the array determines the maximum number of results that can be returned. The maximum distance over which to cast the ray. int Returns the number of results placed in the array. Casts a ray against colliders in the Scene. A raycast is conceptually like a laser beam that is fired from a point in space along a particular direction. Any object making contact with the beam can be detected and reported.\n\n\n\nThis function returns the number of contacts found and places those contacts in the array. The results can also be filtered by the .\n\n\n\nSee Also: ContactFilter2D and RaycastHit2D. The point in 2D space where the ray originates. A vector representing the direction of the ray. The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle. The maximum distance over which to cast the ray. int Returns the number of results placed in the list. Casts a ray against Colliders in the Scene. A raycast is conceptually like a laser beam that is fired from a point in space along a particular direction. Any Collider making contact with the beam can be detected and reported.\n\n\n\nThe integer return value is the number of results written into the list. The results list will be resized if it doesn't contain enough elements to report all the results. This prevents memory from being allocated for results when the list does not need to be resized, and improves garbage collection performance when the query is performed frequently.\n\n\n\nThe results can also be filtered by the .\n\n\n\nSee Also: ContactFilter2D and RaycastHit2D.\n\nDid you find this page useful? Please give it a rating:\n\n Thanks for rating this page! What kind of problem would you like to report?\n• There is a spelling/grammar error on this page Is something described here not working as you expect it to? It might be a Known Issue. Please check with the Issue Tracker at Thanks for letting us know! This page has been marked for review based on your feedback.\n\n\n\nIf you have time, you can provide more information to help us fix the problem faster.\n\n\n\nProvide more information\n\n You've told us this page needs code samples. If you'd like to help us further, you could provide a code sample, or tell us about what kind of code sample you'd like to see: You've told us there are code samples on this page which don't work. If you know how to fix it, or have something better we could use instead, please let us know: You've told us there is information missing from this page. Please tell us more about what's missing: You've told us there is incorrect information on this page. If you know what we should change to make it correct, please tell us: You've told us this page has unclear or confusing information. Please tell us more about what you found unclear or confusing, or let us know how we could make it clearer: You've told us there is a spelling or grammar error on this page. Please tell us what's wrong: You've told us this page has a problem. Please tell us more about what's wrong: Thanks for helping to make the Unity documentation better!"
    },
    {
        "link": "https://discussions.unity.com/t/raycast-layermask-parameter/802897",
        "document": ""
    },
    {
        "link": "https://discussions.unity.com/t/this-documentation-example-for-raycasting-is-just-dead-wrong-and-has-not-been-fixed-for-years/907063",
        "document": ""
    },
    {
        "link": "https://discussions.unity.com/t/raycast-in-2d-not-working/908732",
        "document": ""
    },
    {
        "link": "https://discussions.unity.com/t/implement-a-drag-and-drop-script-with-c/472635",
        "document": ""
    },
    {
        "link": "https://docs.unity3d.com/2020.1/Documentation/Manual/UIE-Events-DragAndDrop.html",
        "document": "To implement drag and drop functionality, you need to make sure that drop area VisualElements and draggable VisualElements register callbacks for specific events. This page discusses what occurs when these VisualElements receive events.\n\nFor more information about events, see the documentation on The Event System.\n\nA VisualElement that is a drop area needs to register callbacks for the following five event types.\n\nis sent when the pointer enters a VisualElement as the user drags a draggable object.\n\nWhen a drop area VisualElement receives a , it needs to provide feedback that lets the user know that it, or one of its children, is a target for a potential drop operation.\n\nYou can do this by, for example, adding a USS class to the target element, and also displaying a “ghost” of the dragged object under the mouse pointer.\n\nThe is sent when the pointer exits a VisualElement as the user drags a draggable object.\n\nWhen a drop area VisualElement receives a , it needs to stop providing drop feedback.\n\nYou can do this by, for example, removing the USS class that you added when the target element received a , and no longer displaying the “ghost” of the dragged object.\n\nThe is sent when the pointer moves over a VisualElement as the user drags a draggable object.\n\nWhen a drop area VisualElement receives a , it needs to update the drop feedback.\n\nYou can do this by, for example, moving the “ghost” of the dragged object so it stays under the mouse pointer.\n\nThe drop area VisualElement should also examine properties and set to indicate the effect of a drop operation. For example, a drop operation could create a new object, move an existing object, reject the drop operation, and so on.\n\nThe is sent when the user drags any draggable object and releases the mouse pointer over a VisualElement. This only occurs if a VisualElement sets to something other than or to indicate that it can accept dragged objects.\n\nWhen a drop area VisualElement receives a , it needs to take appropriate action on the dragged objects stored in , or .\n\nFor example, it might add new VisualElements at the location where the user drops the objects.\n\nThe is sent when the user drags any draggable object over a VisualElement and releases the mouse pointer. This only occurs if no VisualElement indicates that it can accept the dragged objects.\n\nWhen a drop area VisualElement receives a , it needs to remove all drag and drop feedback.\n\nNote: there is currently a bug in UI(User Interface) Allows a user to interact with your application. More info\n\nSee in Glossary Toolkit that prevents from being sent. As a workaround, you can implement the relevant functionality in , which is sent when you stop a drag and drop operation.\n\nTo make a VisualElement draggable, you need to register callbacks on the following three event types.\n\nWhen the draggable VisualElement receives a , it needs to set its state as “ready for dragging”.\n\nWhen the draggable VisualElement receives a , it needs to reset its state.\n\nWhen the draggable VisualElement receives a and it is ready for dragging, it needs to:\n• Add the appropriate data to .\n• Provide visual feedback to show that it is the object of a drag operation. \n\n\n\nThe drop area VisualElement should remove this feedback when it receives a or a ."
    },
    {
        "link": "https://reddit.com/r/Unity3D/comments/9yg57s/what_are_some_bad_practices_to_avoid_when_using",
        "document": "Thought it would be interesting to start a discussion of what practices might/should be avoided when using Unity, both in terms of those who are new to the engine or those who’ve been using it for some time.\n\nEdit: Gold wow! Thanks! Glad to see the topic spurred a good amount of discussion!"
    },
    {
        "link": "https://medium.com/@lemapp09/beginning-game-development-drag-and-drop-match-game-5e7f41a3dd65",
        "document": "Expanding on the foundational article about creating a drag-and-drop item system in Unity3D, let’s explore how to develop a match game utilizing this interactive system. The game will involve dragging items to their corresponding slots, with visual cues to guide and inform the player throughout the process.\n\nTo visually indicate when an item is being dragged and to signal a correct or incorrect match, we’ll update the `DraggableItem.cs` script. This script will now include functionality to change the item’s transparency while dragging and to color the item green when it’s over the correct slot.\n\nThe `DropSlot.cs` script will need minor adjustments to work seamlessly with the updated `DraggableItem` script, primarily to ensure that it can recognize and handle correct matches.\n\n1. Assign Correct Slots: In the Unity Editor, link each `DraggableItem` to its corresponding `correctSlot` by dragging the correct `DropSlot` GameObject onto the `correctSlot` field of the `DraggableItem` script component.\n\n2. Visual Feedback: The updated `DraggableItem` script makes the item 50% transparent when dragged, turns it green when it’s over its correct slot, and snaps it into place upon release if it’s the correct match.\n\n3. Resetting on Incorrect Drop: If the item is not released over the correct slot, it will return to its original position, maintaining the game flow and allowing players to attempt the match again.\n\nThis enhanced drag-and-drop match game system in Unity3D not only makes the gameplay more interactive and engaging but also intuitive, with visual cues guiding the player through the matching process."
    },
    {
        "link": "https://discussions.unity.com/t/better-object-referencing-than-drag-and-dropping-gameobjects-to-components/534558",
        "document": ""
    }
]