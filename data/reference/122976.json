[
    {
        "link": "https://reddit.com/r/golang/comments/1hazoca/i_built_a_4chan_green_text_generator_cli_in_go",
        "document": "I’ve recently finished building a fun little project, a 4chan Green Text Generator CLI, and I wanted to share it with you all!\n\nWhat It Does\n\nThis CLI tool lets you create classic 4chan green-text memes with custom text and optional thumbnail images. The output is a nicely formatted PNG meme that you can share anywhere. If you’re a fan of the tfw and be me formats, check it out.\n\nI wanted to learn more about image manipulation in Go, and I thought, “What better way to suffer… I mean, learn, than by working on something like this?” It’s been a wild ride debugging font rendering, handling thumbnails, and figuring out how to draw rounded corners for the thumbnails. But in the end, it was worth it!\n\nThis was generated from my CLI: https://imgur.com/a/c1YkYbn\n\nYou can find the repo here: GitHub Repo\n\nTL;DR: I built a Green-Text Meme Generator CLI in Go to create tfw and be me memes. Check it out and let me know what you think!"
    },
    {
        "link": "https://wikihow.com/Greentext-on-4chan",
        "document": "Are you wondering how someone made their text green on 4chan? Usually, green text results in a quoted comment that was made previously, but you don't always have to reply to a comment to get green text. If you're trying to use greentext on 4chan yourself, it's quite simple! This wikiHow article will teach you how to use greentext on 4chan without replying to a comment.\n• Go to where you want to post. On the 4chan website, navigate to the post, thread, or board that you'd like to create a comment on in green text.\n• Click . You'll see one of these links centered at the top of the page above the channel photo and another centered at the bottom of the page.\n• Fill out the information and complete the CAPTCHA. In the window that pops up, you'll be able to fill out your name (\"Anonymous\" or pen names are acceptable), choose options (like using your email for notifications), and enter your comment.\n• Click Get Captcha to be able to fill the CAPTCHA field and continue.\n• You can also click Choose File to attach an image file or GIF. In the window that pops up, you'll be able to fill out your name (\"Anonymous\" or pen names are acceptable), choose options (like using your email for notifications), and enter your comment.\n• Enter \">\" before your post and at any line breaks. The text will remain green with the \">\" markup until you create a new line.\n• If you do want to quote a previous comment, click the number on that comment and you'll be able to reply to that comment in your post. The text will remain green with the \">\" markup until you create a new line.\n• Click . If you've entered the CAPTCHA correctly, your comment will be posted on the thread. If not, you'll be prompted to try again. Include your email address to get a message when this question is answered. Submit All tip submissions are carefully reviewed before being published Please provide your name and last initial Thanks for submitting a tip for review!\n\nThis article was reviewed by Luigi Oppido and by wikiHow staff writer, Darlene Antonelli, MA . Luigi Oppido is the Owner and Operator of Pleasure Point Computers in Santa Cruz, California. Luigi has over 25 years of experience in general computer repair, data recovery, virus removal, and upgrades. He is also the host of the Computer Man Show! broadcasted on KSQD covering central California for over two years. This article has been viewed 27,444 times. 1. Go to where you want to post. \n\n 2. Click Post a Reply. \n\n 3. Fill out the information and complete the CAPTCHA. \n\n 4. Enter \">\" before your post and at any line breaks. \n\n 5. Click Post. \n\n Did this summary help you? Thanks to all authors for creating a page that has been read 27,444 times."
    },
    {
        "link": "https://reddit.com/r/writing/comments/ftnpts/the_green_text_technique",
        "document": "I’m a primarily br portuguese writer, and I do it as a hobby, but when i tried to write a book, I had a lot of problems to actually write something good, or at least readable. I tried a lot of techniques, none of them worked, so I left my project aside for some years.\n\nA while ago, I used to read a lot of green text stories, and I even created some of them myself.\n\n(>If you don’t know what a green text is\n\n>they are usually short stories\n\n>with the “greater than” sign before every new line\n\nAnd now I’m reading a lot of japanese light novels, and I realised that some of them were written in a green text logic (Short paragraphs, usually in the first person view, use “” to mark dialog, but without >).\n\nSo I tried to write my book in green text, to mark the essential of every chapter, and convert it to a light novel, giving detail and more dialog to the story. It actually worked, and now my book has 2 chapters, which doesn’t seem like much, but for me it was an achievement.\n\nThe thing I wanna ask you all is: There is a problem in using this method? It works for me, but is utterly inefficient, as i need to write the story twice, which doubles the time I need to finish my book.\n\nThere is a writing technique similar to what I described, but more efficient? Or something I could do to upgrade my method? I welcome your tips :D"
    },
    {
        "link": "https://quora.com/How-is-greentext-used-on-4chan",
        "document": "Something went wrong. Wait a moment and try again."
    },
    {
        "link": "https://platform.openai.com/docs/guides/text-generation",
        "document": ""
    },
    {
        "link": "https://reddit.com/r/learnpython/comments/vieuox/best_libraryframework_for_a_text_based_adventure",
        "document": "I'm still fairly new to Python but learning fast.\n\nI'd like to write comprehensive text based adventure games (e.g. Dungeon , Zork etc) and wondering if anyone has any recommendations on a suitable open source framework I could use?"
    },
    {
        "link": "https://reddit.com/r/learnpython/comments/15wka6m/interactive_fiction_in_python",
        "document": "Hi, I’m looking for a library or framework to create interactive fiction purely text based. So not a point and click adventure game but something test based and very simple with multiple endings. Any help appreciated."
    },
    {
        "link": "https://github.com/lordmauve/adventurelib",
        "document": "provides basic functionality for writing text-based adventure games, with the aim of making it easy enough for young teenagers to do.\n\nThe foundation of adventurelib is the ability to define functions that are called in response to commands. For example, you could write a function to be called when the user types commands like \"take hat\":\n\nIt also includes the foundations needed to write games involving rooms, items, characters and more... but users will have to implement these features for themselves as they explore Python programming concepts.\n\nis a single file that can be copied into your project. You can also install it with pip:\n\nComprehensive documentation is on Read The Docs."
    },
    {
        "link": "https://makeuseof.com/python-text-adventure-game-create",
        "document": "A Python text-based adventure game is a fun project you can undertake if you are learning how to program. You can make a text adventure game using Python, run it in a command line, and change the story based on the text that the player enters.\n\nThe Python script for a Python adventure game will cover several kinds of fundamental programming concepts. This includes print statements, if statements, and functions.\n\nHow to Create the Python Script for the Text Adventure Game and Add Story Content\n\nYou can make a text-based adventure game in Python by creating a script using a standard text file with a .py extension. If you are not familiar with Python syntax, take a look at some basic Python examples that may help you learn it faster.\n\nYou can also look at other useful Python one-liners to perform certain tasks, before starting on the Python adventure game.\n\nIn the main function of the Python file, set up your story and welcome message.\n• Create a new file called \"AdventureGame.py\", to store the code for your Python adventure game.\n• In the file, add the main starting function. The function will include a brief opening story to welcome the player to the Python text-based adventure game. It will then call another function called introScene(). __name__ == :\n\n :\n\n ( \"Welcome to the Adventure Game!\" )\n\n ( \"As an avid traveler, you have decided to visit the Catacombs of Paris.\" )\n\n ( \"However, during your exploration, you find yourself lost.\" )\n\n ( \"You can choose to walk in multiple directions to find a way out.\" )\n\n print(\"Let's your : \n\n name = input()\n\n ( +name+ )\n\n introScene()\n\n\n\nHow to Create Multiple Scenes and Options in the Story for the Python Adventure Game\n\nThe story for the text-based adventure game will contain several scenes or \"rooms\". You can create a function for each scene of the Python adventure game so that you can re-use it later if the player ends up entering the same room again.\n\nEach scene will also have different choices of where to go. It is a good idea to map out your story before coding the scenarios, to make sure the story for your text-based adventure game is well organized.\n\nEach scene for the Python text game will have a list of valid directions, and an if-statement for the multiple paths the player can take. Depending on the path the player takes in your Python adventure game, the script will call the next scene.\n\nCreate functions for the scenes that will occur in your Python adventure game.\n• Create the introScene() function above the main function. Add a message and the directions that the player can walk in. \n\n directions = [ , , ]\n\n ( \"You are at a crossroads, and you can choose to go down any of the four hallways. Where would you like to go?\" )\n\n userInput = \n\n userInput not directions:\n\n ( )\n\n userInput = input()\n\n userInput == :\n\n showShadowFigure()\n\n userInput == :\n\n showSkeletons()\n\n userInput == :\n\n hauntedRoom()\n\n userInput == :\n\n ( \"You find that this door opens into a wall.\" )\n\n : \n\n ( \"Please enter a valid option for the adventure game.\" )\n• Depending on the user's input, your Python adventure game will call another scene. For example, if the player types \"left\", the adventure game will display the scene showShadowFigure() to the player. From this room, if the player goes backward, the Python adventure game will take them back to the intro scene. If they go left or right, they will either enter another room or hit a dead end. \n\n directions = [ , ]\n\n ( \"You see a dark shadowy figure appear in the distance. You are creeped out. Where would you like to go?\" )\n\n userInput = \n\n userInput not directions:\n\n ( )\n\n userInput = input()\n\n userInput == :\n\n cameraScene()\n\n userInput == :\n\n ( \"You find that this door opens into a wall.\" )\n\n userInput == :\n\n introScene()\n\n :\n\n ( \"Please enter a valid option for the adventure game.\" )\n• Add the camera scene to handle the case where the player turns right. This is where they can find one of the exits. Call the quit() function to end the Python text-based adventure game. The player can also still choose to move backward to the previous scene. \n\n directions = [ , ]\n\n ( \"You see a camera that has been dropped on the ground. Someone has been here recently. Where would you like to go?\" )\n\n userInput = \n\n userInput not directions:\n\n ( )\n\n userInput = input()\n\n userInput == :\n\n ( \"You made it! You've found an exit.\" )\n\n quit()\n\n userInput == :\n\n showShadowFigure()\n\n :\n\n ( \"Please enter a valid option for the adventure game.\" )\n• Back to the beginning of the adventure game, you will still need to add the functions for the remaining scenes. Add the hauntedRoom() scene for the case where the player chooses to move forward. This will also end the Python adventure game depending on the player's choice. \n\n directions = [ , , ]\n\n ( \"You hear strange voices. You think you have awoken some of the dead. Where would you like to go?\" )\n\n userInput = \n\n userInput not directions:\n\n ( )\n\n userInput = input()\n\n userInput == :\n\n print(\"Multiple goul-like creatures emerging you enter the room. You killed. \n\n quit()\n\n userInput == :\n\n ( \"You made it! You've found an exit.\" )\n\n quit()\n\n userInput == :\n\n introScene()\n\n :\n\n ( \"Please enter a valid option for the adventure game.\" )\n• You can also add more interesting content to your Python text-based adventure game. Create a global variable, at the very top of the file, called \"weapon\". It will either be true or false depending on if the player finds it.\n• In one of the rooms, set the weapon variable to true if the player finds it. The player can use it in the next room if needed. \n\n directions = [ , ]\n\n weapon\n\n ( \"You see a wall of skeletons as you walk into the room. Someone is watching you. Where would you like to go?\" )\n\n userInput = \n\n userInput not directions:\n\n ( )\n\n userInput = input()\n\n userInput == :\n\n ( \"You find that this door opens into a wall. You open some of the drywall to discover a knife.\" )\n\n weapon = \n\n userInput == :\n\n introScene()\n\n userInput == :\n\n strangeCreature()\n\n :\n\n ( \"Please enter a valid option for the adventure game.\" )\n• If the player finds the weapon, they can kill the enemy in the next room, and find another exit. Otherwise, the enemy will kill them. \n\n actions = [ , ]\n\n weapon\n\n ( \"A strange goul-like creature has appeared. You can either run or fight it. What would you like to do?\" )\n\n userInput = \n\n userInput not actions:\n\n ( )\n\n userInput = input()\n\n userInput == :\n\n if weapon:\n\n print(\"You the goul the knife you earlier. moving forward, you find one the exits. Congrats! \n\n :\n\n ( \"The goul-like creature has killed you.\" )\n\n quit()\n\n userInput == :\n\n showSkeletons()\n\n :\n\n ( \"Please enter a valid option for the adventure game.\" )\n\nHow to Run the Python Script for the Text-Based Adventure Game\n\nYou can run the script for your Python text-based game using a terminal or command prompt. As you enter input into the terminal, the story will continue to move forward to the next scene of the Python adventure game.\n• Using a terminal or command prompt, navigate to the location where you stored the file for your Python adventure game.\n• Run the script to start your Python text-based adventure game.\n• The opening message will welcome you to start playing the Python adventure game.\n• Type from the available options listed, such as \"left\", \"right\", or \"backward\". If you enter an invalid input, the Python adventure game will prompt you for a valid one.\n• You can also replay the text-based Python adventure game to choose another path.\n\nCreate a Simple Text-Based Adventure Game Using Just One Python Script\n\nYou can create a Python text-based adventure game using a Python script, and run it on a command line. Inside the Python adventure game, you can present the player with a welcoming message and initial story. The player can then type in their actions based on the options you present within the Python adventure game.\n\nIf you want to become a more well-rounded Python developer, there are other projects you can make other than a text-based adventure game. You can have a look at some of the useful tools that you can use or integrate with Python."
    },
    {
        "link": "https://softwarerecs.stackexchange.com/questions/51128/python-library-for-a-text-adventure-game",
        "document": "Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers."
    }
]