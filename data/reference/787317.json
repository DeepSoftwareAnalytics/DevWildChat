[
    {
        "link": "https://petsc.org/release/manualpages/Vec",
        "document": "PETSc vectors ( ) are used to store the field variables in PDE-based (or other) simulations. Users guide chapter: Vectors and Parallel Data"
    },
    {
        "link": "https://petsc.org",
        "document": "PETSc, the Portable, Extensible Toolkit for Scientific Computation, pronounced PET-see (/ˈpɛt-siː/), is for the scalable (parallel) solution of scientific applications modeled by partial differential equations (PDEs). It has bindings for C, Fortran, and Python (via petsc4py). PETSc also contains TAO, the Toolkit for Advanced Optimization, software library. They support MPI, and GPUs through CUDA, HIP, Kokkos, or OpenCL, as well as hybrid MPI-GPU parallelism; they also support the NEC-SX Tsubasa Vector Engine. Immediately jump in and run PETSc and TAO code Tutorials, by Mathematical Problem.\n\nPETSc is now on BlueSky.\n\nThe 2025 PETSc Annual User Meeting will take place May 20-21, 2025 in Buffalo, New York, USA, with tutorials on May 19th.\n\nMrs. Hong Zhang, who has been a PETSc developer for twenty-five years and mentored many students and future PETSc developers, has retired.\n\nPETSc is associated with NumFOCUS, a 501(c)(3) nonprofit supporting open code and reproducible science, through which you can help support PETSc.\n\nYou can run PETSc programs with the option to print appropriate citations for the software and algorithms being used in that program. For general citations on PETSc please use the following: @Misc{ petsc-web-page, author = {Satish Balay and Shrirang Abhyankar and Mark~F. Adams and Steven Benson and Jed Brown and Peter Brune and Kris Buschelman and Emil~M. Constantinescu and Lisandro Dalcin and Alp Dener and Victor Eijkhout and Jacob Faibussowitsch and William~D. Gropp and V\\'{a}clav Hapla and Tobin Isaac and Pierre Jolivet and Dmitry Karpeev and Dinesh Kaushik and Matthew~G. Knepley and Fande Kong and Scott Kruger and Dave~A. May and Lois Curfman McInnes and Richard Tran Mills and Lawrence Mitchell and Todd Munson and Jose~E. Roman and Karl Rupp and Patrick Sanan and Jason Sarich and Barry~F. Smith and Stefano Zampini and Hong Zhang and Hong Zhang and Junchao Zhang}, title = {{PETS}c {W}eb page}, url = {https://petsc.org/}, howpublished = {\\url{https://petsc.org/}}, year = {2024} } @TechReport{ petsc-user-ref, author = {Satish Balay and Shrirang Abhyankar and Mark~F. Adams and Steven Benson and Jed Brown and Peter Brune and Kris Buschelman and Emil Constantinescu and Lisandro Dalcin and Alp Dener and Victor Eijkhout and Jacob Faibussowitsch and William~D. Gropp and V\\'{a}clav Hapla and Tobin Isaac and Pierre Jolivet and Dmitry Karpeev and Dinesh Kaushik and Matthew~G. Knepley and Fande Kong and Scott Kruger and Dave~A. May and Lois Curfman McInnes and Richard Tran Mills and Lawrence Mitchell and Todd Munson and Jose~E. Roman and Karl Rupp and Patrick Sanan and Jason Sarich and Barry~F. Smith and Hansol Suh and Stefano Zampini and Hong Zhang and Hong Zhang and Junchao Zhang}, title = {{PETSc/TAO} Users Manual}, institution = {Argonne National Laboratory}, number = {ANL-21/39 - Revision 3.22}, doi = {10.2172/2205494}, year = {2024} } @InProceedings{ petsc-efficient, author = {Satish Balay and William~D. Gropp and Lois Curfman McInnes and Barry~F. Smith}, title = {Efficient Management of Parallelism in Object Oriented Numerical Software Libraries}, booktitle = {Modern Software Tools in Scientific Computing}, editor = {E. Arge and A.~M. Bruaset and H.~P. Langtangen}, publisher = {Birkh{\\\"{a}}user Press}, pages = {163--202}, year = {1997} } @Article{ dalcinpazklercosimo2011, title = {Parallel distributed computing using Python}, author = {Lisandro D. Dalcin and Rodrigo R. Paz and Pablo A. Kler and Alejandro Cosimo}, journal = {Advances in Water Resources}, volume = {34}, number = {9}, pages = {1124 - 1139}, note = {New Computational Methods and Software Tools}, issn = {0309-1708}, doi = {10.1016/j.advwatres.2011.04.013}, year = {2011} } For PETSc usage on GPUs please cite @Article{ mills2021, title = {Toward performance-portable {PETS}c for {GPU}-based exascale systems}, journal = {Parallel Computing}, volume = {108}, pages = {102831}, year = {2021}, issn = {0167-8191}, doi = {https://doi.org/10.1016/j.parco.2021.102831}, url = {https://www.sciencedirect.com/science/article/pii/S016781912100079X}, author = {Richard Tran Mills and Mark F. Adams and Satish Balay and Jed Brown and Alp Dener } For – parallel communication in PETSc – please cite @Article{ petscsf2022, author = {Zhang, Junchao and Brown, Jed and Balay, Satish and Faibussowitsch, Jacob and Knepley, Matthew and Marin, Oana and Mills, Richard Tran and Munson, Todd and Smith, Barry F. and Zampini, Stefano}, journal = {IEEE Transactions on Parallel and Distributed Systems}, title = {The {PetscSF} Scalable Communication Layer}, year = {2022}, volume = {33}, number = {4}, pages = {842-853}, } If you use the component of PETSc please cite the following: @TechReport{ abhyankaretal2018, author = {Shrirang Abhyankar and Jed Brown and Emil M. Constantinescu and Debojyoti Ghosh and Barry F. Smith and Hong Zhang}, title = {{PETSc/TS}: {A} Modern Scalable {ODE/DAE} Solver Library}, journal = {arXiv e-preprints}, eprint = {1806.01437}, archiveprefix = {arXiv}, year = {2018}, } If you utilize the adjoint solver please cite @Article{ zhang2022tsadjoint, author = {Zhang, Hong and Constantinescu, Emil M. and Smith, Barry F.}, title = {{PETSc TSAdjoint: A Discrete Adjoint ODE Solver for First-Order and Second-Order Sensitivity Analysis}}, journal = {SIAM Journal on Scientific Computing}, volume = {44}, number = {1}, pages = {C1-C24}, year = {2022}, }"
    },
    {
        "link": "https://petsc.org/main/manualpages/Vec",
        "document": "PETSc vectors ( ) are used to store the field variables in PDE-based (or other) simulations. Users guide chapter: Vectors and Parallel Data"
    },
    {
        "link": "https://mcs.anl.gov/petsc/petsc-3.6/docs/manual.pdf",
        "document": ""
    },
    {
        "link": "https://mcs.anl.gov/petsc/petsc-3.3/docs/manual.pdf",
        "document": ""
    },
    {
        "link": "https://petsc.org/main/changes/316",
        "document": "\n• None Change to always returns a MPI error code that should be checked with\n• None Add support for ESSL 5.2 and later; drop support for ESSL <=5.1\n• None Remove . One can use to specify the cuda arch for Kokkos. Usually not needed since PETSc auto detects that\n• None Add OpenCascade package to PETSc and allow\n• None Add support for hypre in device mode for both NVIDIA and AMD GPUs\n• None Extend detection of C++ dialect to C++17. Configure now also takes minimum and maximum required C++ dialect of packages into account when choosing the C++ dialect\n• None Deprecate and in favor of and\n• None Add MPIU_REAL_INT and MPIU_SCALAR_INT datatypes to be used for reduction operations\n• None Add to catch C++ exceptions and return a PETSc error code\n• None Remove routines from public headers, this class should now be considered private\n• None : if input path begins with , it is taken as absolute, otherwise relative to the current group\n• None , , , and support absolute paths (starting with ) and paths relative to the current pushed group\n• None Add input argument to for default value that is used if attribute is not found in the HDF5 file\n• None One can call , or only if timestepping mode is active\n• None Error if timestepped dataset is read/written out of timestepping mode, or vice-versa\n• None Add to calculate arithmetic mean of elements of a vector\n• None now tracks the object state of the AIJ matrix describing the blockwise action of the KAIJ matrix and automatically rebuilds internal data structures before executing operations with the KAIJ matrix if the state has changed\n• None Factorization types now provide their preferred ordering (which may be ) to prevent PETSc PCFactor from, by default, picking an ordering when it is not ideal\n• None Add to use hierarchical matrices with the new type\n• None Add special matrix type that implements action of the centering matrix\n• None Remove -mat_mumps_icntl_7 1 option, use -pc_factor_mat_ordering_type <type> to have PETSc perform the ordering (sequential only)\n• None Add to retrieve the underlying of a\n• None Add to retrieve the underlying of a\n• None Add accessor routines for device index data of matrices: and\n• None Add support for matrices on NVIDIA and AMD GPUs\n• None Add developer routine to calculate reductions over columns of a matrix\n• None Add - interface to SuiteSparse QR factorization for , , and\n• None Add support for in and\n• None Add support for BoomerAMG from to run on NVIDIA and AMD GPUs\n• None Add support for for use with\n• None Add interface to the CAMS library for optimal offline checkpointing for multistage time stepping schemes\n• None Add option to specify the maximum number of allowed checkpointing units\n• None Change management of auxiliary data in DM from object composition to / ,\n• None Remove and in favor of DS counterparts\n• None Add a viewer type for / and / . Note that not all DMPlex can be saved in exodusII format since this file format requires that the numbering of cell sets be compact\n• None Add to generate “2nd order” elements (i.e. tri6, tet10, hex27) when using with a viewer\n• None Change and to take a form key\n• None Add , , and for incremental loading of a object from an HDF5 file\n• None Add , , and for incremental saving of a object to an HDF5 file\n• None Add and saving global and local vectors in association with a data layout on a mesh\n• None Add and loading global and local vectors in association with a data layout on a mesh\n• None Add to check the shape of the first cell\n• None Add to make an FE space for the coordinates\n• None Add the automatic creation of a Plex from options, see\n• None The old options for NO LONGER WORK. They have been changed to make the interface more uniform\n• None The number of refinements is no longer an argument to\n• None Change to take instead of explicit label/value/field arguments\n• None Add which pushes refined points out to a geometric boundary\n• None Remove and in favor of\n• None Add as a helper function for creating an isotropic metric.\n• None Add for enforcing that a metric is symmetric positive-definite.\n• None Add to average an arbitrary number of metrics.\n• None Add to intersect an arbitrary number of metrics.\n• None Change and to take both and form key\n• None Add and to package up geometry handling\n• None Add support for , in addition to current"
    },
    {
        "link": "https://petsc.org/release/changes/316",
        "document": "\n• None Change to always returns a MPI error code that should be checked with\n• None Add support for ESSL 5.2 and later; drop support for ESSL <=5.1\n• None Remove . One can use to specify the cuda arch for Kokkos. Usually not needed since PETSc auto detects that\n• None Add OpenCascade package to PETSc and allow\n• None Add support for hypre in device mode for both NVIDIA and AMD GPUs\n• None Extend detection of C++ dialect to C++17. Configure now also takes minimum and maximum required C++ dialect of packages into account when choosing the C++ dialect\n• None Deprecate and in favor of and\n• None Add MPIU_REAL_INT and MPIU_SCALAR_INT datatypes to be used for reduction operations\n• None Add to catch C++ exceptions and return a PETSc error code\n• None Remove routines from public headers, this class should now be considered private\n• None : if input path begins with , it is taken as absolute, otherwise relative to the current group\n• None , , , and support absolute paths (starting with ) and paths relative to the current pushed group\n• None Add input argument to for default value that is used if attribute is not found in the HDF5 file\n• None One can call , or only if timestepping mode is active\n• None Error if timestepped dataset is read/written out of timestepping mode, or vice-versa\n• None Add to calculate arithmetic mean of elements of a vector\n• None now tracks the object state of the AIJ matrix describing the blockwise action of the KAIJ matrix and automatically rebuilds internal data structures before executing operations with the KAIJ matrix if the state has changed\n• None Factorization types now provide their preferred ordering (which may be ) to prevent PETSc PCFactor from, by default, picking an ordering when it is not ideal\n• None Add to use hierarchical matrices with the new type\n• None Add special matrix type that implements action of the centering matrix\n• None Remove -mat_mumps_icntl_7 1 option, use -pc_factor_mat_ordering_type <type> to have PETSc perform the ordering (sequential only)\n• None Add to retrieve the underlying of a\n• None Add to retrieve the underlying of a\n• None Add accessor routines for device index data of matrices: and\n• None Add support for matrices on NVIDIA and AMD GPUs\n• None Add developer routine to calculate reductions over columns of a matrix\n• None Add - interface to SuiteSparse QR factorization for , , and\n• None Add support for in and\n• None Add support for BoomerAMG from to run on NVIDIA and AMD GPUs\n• None Add support for for use with\n• None Add interface to the CAMS library for optimal offline checkpointing for multistage time stepping schemes\n• None Add option to specify the maximum number of allowed checkpointing units\n• None Change management of auxiliary data in DM from object composition to / ,\n• None Remove and in favor of DS counterparts\n• None Add a viewer type for / and / . Note that not all DMPlex can be saved in exodusII format since this file format requires that the numbering of cell sets be compact\n• None Add to generate “2nd order” elements (i.e. tri6, tet10, hex27) when using with a viewer\n• None Change and to take a form key\n• None Add , , and for incremental loading of a object from an HDF5 file\n• None Add , , and for incremental saving of a object to an HDF5 file\n• None Add and saving global and local vectors in association with a data layout on a mesh\n• None Add and loading global and local vectors in association with a data layout on a mesh\n• None Add to check the shape of the first cell\n• None Add to make an FE space for the coordinates\n• None Add the automatic creation of a Plex from options, see\n• None The old options for NO LONGER WORK. They have been changed to make the interface more uniform\n• None The number of refinements is no longer an argument to\n• None Change to take instead of explicit label/value/field arguments\n• None Add which pushes refined points out to a geometric boundary\n• None Remove and in favor of\n• None Add as a helper function for creating an isotropic metric.\n• None Add for enforcing that a metric is symmetric positive-definite.\n• None Add to average an arbitrary number of metrics.\n• None Add to intersect an arbitrary number of metrics.\n• None Change and to take both and form key\n• None Add and to package up geometry handling\n• None Add support for , in addition to current"
    },
    {
        "link": "https://web.cels.anl.gov/projects/petsc/vault/petsc-3.20/docs/changes/316.html",
        "document": "\n• None Change to always returns a MPI error code that should be checked with\n• None Add support for ESSL 5.2 and later; drop support for ESSL <=5.1\n• None Remove . One can use to specify the cuda arch for Kokkos. Usually not needed since PETSc auto detects that\n• None Add OpenCascade package to PETSc and allow\n• None Add support for hypre in device mode for both NVIDIA and AMD GPUs\n• None Extend detection of C++ dialect to C++17. Configure now also takes minimum and maximum required C++ dialect of packages into account when choosing the C++ dialect\n• None Deprecate and in favor of and\n• None Add MPIU_REAL_INT and MPIU_SCALAR_INT datatypes to be used for reduction operations\n• None Add to catch C++ exceptions and return a PETSc error code\n• None Remove routines from public headers, this class should now be considered private\n• None : if input path begins with , it is taken as absolute, otherwise relative to the current group\n• None , , , and support absolute paths (starting with ) and paths relative to the current pushed group\n• None Add input argument to for default value that is used if attribute is not found in the HDF5 file\n• None One can call , or only if timestepping mode is active\n• None Error if timestepped dataset is read/written out of timestepping mode, or vice-versa\n• None Add to calculate arithmetic mean of elements of a vector\n• None now tracks the object state of the AIJ matrix describing the blockwise action of the KAIJ matrix and automatically rebuilds internal data structures before executing operations with the KAIJ matrix if the state has changed\n• None Factorization types now provide their preferred ordering (which may be ) to prevent PETSc PCFactor from, by default, picking an ordering when it is not ideal\n• None Add to use hierarchical matrices with the new type\n• None Add special matrix type that implements action of the centering matrix\n• None Remove -mat_mumps_icntl_7 1 option, use -pc_factor_mat_ordering_type <type> to have PETSc perform the ordering (sequential only)\n• None Add to retrieve the underlying of a\n• None Add to retrieve the underlying of a\n• None Add accessor routines for device index data of matrices: and\n• None Add support for matrices on NVIDIA and AMD GPUs\n• None Add developer routine to calculate reductions over columns of a matrix\n• None Add - interface to SuiteSparse QR factorization for , , and\n• None Add support for in and\n• None Add support for BoomerAMG from to run on NVIDIA and AMD GPUs\n• None Add support for for use with\n• None Add interface to the CAMS library for optimal offline checkpointing for multistage time stepping schemes\n• None Add option to specify the maximum number of allowed checkpointing units\n• None Change management of auxiliary data in DM from object composition to / ,\n• None Remove and in favor of DS counterparts\n• None Add a viewer type for / and / . Note that not all DMPlex can be saved in exodusII format since this file format requires that the numbering of cell sets be compact\n• None Add to generate “2nd order” elements (i.e. tri6, tet10, hex27) when using with a viewer\n• None Change and to take a form key\n• None Add , , and for incremental loading of a object from an HDF5 file\n• None Add , , and for incremental saving of a object to an HDF5 file\n• None Add and saving global and local vectors in association with a data layout on a mesh\n• None Add and loading global and local vectors in association with a data layout on a mesh\n• None Add to check the shape of the first cell\n• None Add to make an FE space for the coordinates\n• None Add the automatic creation of a Plex from options, see\n• None The old options for NO LONGER WORK. They have been changed to make the interface more uniform\n• None The number of refinements is no longer an argument to\n• None Change to take instead of explicit label/value/field arguments\n• None Add which pushes refined points out to a geometric boundary\n• None Remove and in favor of\n• None Add as a helper function for creating an isotropic metric.\n• None Add for enforcing that a metric is symmetric positive-definite.\n• None Add to average an arbitrary number of metrics.\n• None Add to intersect an arbitrary number of metrics.\n• None Change and to take both and form key\n• None Add and to package up geometry handling\n• None Add support for , in addition to current"
    },
    {
        "link": "https://web.cels.anl.gov/projects/petsc/vault/petsc-3.16/docs",
        "document": "PETSc, the Portable, Extensible Toolkit for Scientific Computation, pronounced PET-see (/ˈpɛt-siː/), is a suite of data structures and routines for the scalable (parallel) solution of scientific applications modeled by partial differential equations. It supports MPI, and GPUs through CUDA, HIP or OpenCL, as well as hybrid MPI-GPU parallelism; it also supports the NEC-SX Tsubasa Vector Engine. PETSc (sometimes called PETSc/TAO) also contains the TAO, the Toolkit for Advanced Optimization, software library."
    },
    {
        "link": "https://github.com/idaholab/moose/discussions/25006",
        "document": "To see all available qualifiers, see our documentation .\n\nSaved searches Use saved searches to filter your results more quickly\n\nWe read every piece of feedback, and take your input very seriously.\n\nYou signed in with another tab or window. Reload to refresh your session.\n\nYou signed out in another tab or window. Reload to refresh your session.\n\nYou switched accounts on another tab or window. Reload to refresh your session."
    }
]