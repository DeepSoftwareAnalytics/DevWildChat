[
    {
        "link": "https://mapscaping.com/gpx-files-in-qgis",
        "document": "GPX (GPS Exchange Format) is a widely used XML format for geospatial data from GPS devices. QGIS, an open-source Geographic Information System (GIS) software, allows users to import and work with GPX files seamlessly.\n• Ensure your GPS device is connected to your computer.\n• Navigate to the storage location of the GPS device and locate the GPX files you wish to work with.\n• Copy these files to a convenient location on your computer.\n• In the section, click on and navigate to the location where you saved your GPX files.\n\n\n\nGPX files can contain various types of data, such as waypoints, tracks, and routes.\n• A dialog box will appear asking you to select which data type you want to import (e.g., waypoints or tracks).\n• Choose the appropriate data type and click .\n• Once imported, the GPX data will appear in the QGIS Layers panel and on the map canvas.\n• You can style the data by right-clicking on the layer in the Layers panel, selecting , and navigating to the tab.\n• Adjust the symbols, colors, and labels as desired.\n\n\n\nIf you wish to work with the GPX data in a different format or share it with others, you can convert it to another format, such as a shapefile.\n• Right-click on the GPX layer in the Layers panel.\n• In the dialog box, select the desired format (e.g., ESRI Shapefile).\n• Choose a save location, provide a name for the file, and click .\n• GPX files typically use the WGS 84 CRS. If you need to work in a different CRS, ensure you reproject the data accordingly.\n• During the export process, you can choose a different CRS if needed.\n\n\n\nWorking with GPX files in QGIS is straightforward. Whether you’re importing data from a recent field trip or sharing geospatial data with colleagues, QGIS provides the tools you need to work efficiently with GPX files. Always remember to save your project and back up your data.\n\nFrequently asked questions about working with GPX files in QGIS:\n• A GPX (GPS Exchange Format) file is an XML schema designed for transferring GPS data between software applications. It can store waypoints, tracks, and routes, making it a standard format for sharing location data.\n• How do I import a GPX file into QGIS?\n• Open QGIS, go to > > . Browse to your GPX file, select it, and click . Choose the data type (waypoints, tracks, routes) you want to import.\n• Why can’t I see my GPX data after importing it into QGIS?\n• This could be due to a mismatch in the Coordinate Reference System (CRS) or the data might be outside the current map extent. Ensure both the project and the GPX layer are using the same CRS and try zooming to the layer’s extent.\n• Yes, you can edit GPX data in QGIS. First, toggle the layer into edit mode by right-clicking on it and selecting . Then, you can use the editing tools to modify the data.\n• How do I convert a GPX file to a shapefile in QGIS?\n• Right-click on the GPX layer in the Layers panel, choose > , select as the format, specify the output location and name, and click .\n• Why are there multiple layers (like waypoints, tracks, routes) when I import a GPX file?\n• A single GPX file can contain multiple types of data, such as waypoints, tracks, and routes. When importing, QGIS allows you to choose which type of data you want to import as separate layers.\n• Can I merge multiple GPX files into a single layer in QGIS?\n• Yes, you can use the tool found under > to merge multiple GPX layers into one.\n• How do I change the symbology or style of my GPX data in QGIS?\n• Right-click on the GPX layer, select , and navigate to the tab. Here, you can customize the appearance of your data.\n• Is there a way to filter or select specific data from my GPX file in QGIS?\n• Yes, you can use the to filter and select specific records. Additionally, the tool allows you to manually select data on the map canvas.\n• How do I reproject my GPX data to a different Coordinate Reference System (CRS) in QGIS?\n• Right-click on the GPX layer, select > , choose your desired format, and under the section, select the desired CRS.\n• Can I export my edited data back into a GPX format from QGIS?\n• Yes, right-click on the edited layer, select > , and choose GPX as the format.\n• Why does my GPX data not align correctly with other layers in QGIS?\n• This is likely due to a CRS mismatch. Ensure that all layers, including the GPX layer, are set to the same CRS.\n• How can I label my GPX waypoints or tracks in QGIS?\n• Right-click on the GPX layer, select , and navigate to the tab. Choose the attribute you want to use for labeling and customize the label appearance.\n• Is there a file size limit for importing GPX files into QGIS?\n• There’s no strict file size limit for importing GPX files into QGIS. However, very large files might slow down the software or require more memory to process.\n• Can I perform spatial analysis on GPX data within QGIS?\n• Yes, QGIS offers a wide range of spatial analysis tools that can be applied to GPX data, just like any other vector data in the software."
    },
    {
        "link": "https://gis.stackexchange.com/questions/179384/qgis-pyqgis-import-gpx-as-vector-layer",
        "document": "Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers."
    },
    {
        "link": "https://docs.qgis.org/latest/en/docs/user_manual/working_with_gps/plugins_gps.html",
        "document": "GPS, the Global Positioning System, is a satellite-based system that allows anyone with a GPS receiver to find their exact position anywhere in the world. GPS is used as an aid in navigation, for example in airplanes, in boats and by hikers. The GPS receiver uses the signals from the satellites to calculate its latitude, longitude and (sometimes) elevation. Most receivers also have the capability to store:\n• None sequences of locations that make up a planned route\n• None and a track log of the receiver’s movement over time. Waypoints, routes and tracks are the three basic feature types in GPS data. QGIS displays waypoints in point layers, while routes and tracks are displayed in linestring layers. QGIS supports also GNSS receivers. But we keep using the term GPS in this documentation.\n\nThere are dozens of different file formats for storing GPS data. The format that QGIS uses is called GPX (GPS eXchange format), which is a standard interchange format that can contain any number of waypoints, routes and tracks in the same file.\n• None Open the GPS tab in the Data Source Manager dialog, i.e.:\n• None Click the Open Data Source Manager button on the toolbar (or press ) and enable the target tab\n• None Use the … Browse button next to the GPX dataset option to select the GPX file\n• None Use the check boxes to select the Feature types you want to load from the file. Each feature type (Waypoints, Tracks or Routes) will be loaded in a separate layer. Loading to or from a device There are lots of different types of GPS devices and formats. Since QGIS uses GPX files, you need a way to convert other GPS file formats to GPX. QGIS can do that using the free program GPSBabel. GPSBabel can help you convert waypoints, tracks, and routes between popular GPS receivers such as Garmin or Magellan and mapping programs like Google Earth or Basecamp. Literally hundreds of GPS receivers and programs are supported. It can also transfer GPS data between your computer and a GPS device. Under Settings ► Options ► GPS ► GPSBabel, QGIS allows you to define your own device type and set parameters of conversion that could later be used by the Processing GPS algorithms.\n• None First you have to define the Path to GPSBabel binaries.\n• None Then you may want to add your device. You can update devices list using Add new device or Remove device button.\n• \n• None you configure different Commands QGIS will use while interacting with it, such as: While the commands are usually GPSBabel commands, you can also use any other command line program that can create a GPX file. QGIS will replace the keywords , , and when it runs the command. As an example, if you create a device type with the download command and then use it to download waypoints from port to the file , QGIS will replace the keywords and run the command . Read the GPSBabel manual for the command line options that may be specific to your use case. Once you have created a new device type, it will appear in the device lists for the GPS download and upload algorithms. GPS units allow you to store data in different coordinate systems. When downloading a GPX file (from your GPS unit or a web site) and then loading it in QGIS, be sure that the data stored in the GPX file uses WGS 84 (latitude/longitude). QGIS expects this, and it is the official GPX specification. See GPX 1.1 Schema Documentation."
    },
    {
        "link": "https://guides.geospatial.bas.ac.uk/ops_training/qgis-for-operations/working-with-gps-devices/working-with-gps-data",
        "document": "GPS devices use a file format called GPX (GPS eXchange File) to record data. Each GPX coming from a Garmin unit is split into:\n• None Routes - lines leading to a destination, where waypoints or route points show stage points/turns.\n• None Tracks - describe a path, usually formed of a series of track points.\n\nWe can use GIS to create, view, and edit data, and export it to a GPS device for use in the field.\n\nQGIS allows users to create new GPX files very easily.\n• None Go to \"Layer\" in the top bar\n• None Choose a name for your new layer, and where you would like to save it.\n\nOnce you have clicked \"Save\" a set of 3 new files should have appeared in you Layers Panel:\n\nLets look at one of these files in more detail.\n\nDouble-clicking the waypoint layer in the Layers Panel, we can see some more information about the layer:\n• None Source - where it is saved\n• None Storage - what file type it is. In this case, we have made a GPX file\n• None Geometry - whether it is a Point, Line/Linestring or Polygon\n\nLet's look at the Attribute table next:\n\nAs you can see, this table is empty - that's because we haven't added any data yet!\n\nAs we have created a GPX file, QGIS has made the attribute table fields match what a GPS is looking for:\n\nPlease see the QGIS Tutorial for more information about editing data in QGIS\n\nLet's add some data to our new layers.\n• None Select the Routes layer in the Layers Panel, and toggle the Edit button on and start drawing a line:\n• None Once you have drawn your route, right-click to finish the line.\n• None A pop-up will appear, allowing you to fill in information about the line - fill in the \"name\" and \"description\" sections so you can identify the route on your device!\n\nLet's do the same as the above, but this time lets create Waypoints along the route.\n• None Select the layer in the Layer Panel, and toggle Editing on.\n\nWe want to ensure that the Waypoints we make are on the route. Let's use Snapping to do this.\n• None Toggle the Snapping Toolbar on, and make the Snapping Tolerance \"20 px\"\n\nOnce you have snapping and editing on, we can start creating new points along the line.\n• None Start by hovering near the line - once you get close enough, a pink box should appear near a line vertex (endpoint or turning point).\n\nAn attribute box should appear, similar to the routes one earlier. Fill this in with information about the point you have just added.\n• None Once you are happy, click \"Save\" and toggle Editing off.\n\nThat's it! you have now made a Route line and a series of Waypoints along it.\n\nAdding data toa GPS is similar to adding data to any other USB device. After you have connected your GPS to the PC you are using, just click and drag the .gpx file from where you have saved it to the relevant folder in the device.\n\nFollowing the same process above, go to where the file is saved in your Garmin device. The you can drag and drop it into QGIS.\n\nOnce you have added the file to QGIS, it looks like this:\n\nIn order to edit data that's come out of a Garmin device, we need to convert it.\n\nWe need to convert the Waypoints and Routes to seperate Geopackages so we can edit the copies.\n• None Right-click the layer in the Layer Panel\n\nThen fill in the box with the new filename, and click \"OK\"\n\nYou should have a geopackage of your waypoints! Do the same for your routes.\n\nNow, you can edit the files.\n\nFollow the instructions above and there is more information on editing/creating data in the QGIS Tutorial.\n\nWe need to make sure our new data can be read by a GPS. To do this, we're going to export the data and make sure that the attribute table has the information it needs.\n\nFormat = GPS eXchange Format (GPX) - make sure you are exporting to the right format!\n• None File name = choose where to save the data\n• None CRS = make sure it says EPSG:4326 - WGS 84\n\nFormat = GPS eXchange Format (GPX) - make sure you are exporting to the right format!\n• None File name = choose where to save the data\n• None CRS = make sure it says EPSG:4326 - WGS 84\n\nAnd that's it! Just transfer the files back to your device, and you will have a working GPX file."
    },
    {
        "link": "https://gis.stackexchange.com/questions/110331/cleaning-editing-gpx-tracks-files-recorded-from-gps-device-in-qgis",
        "document": "Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers."
    },
    {
        "link": "https://florisvdh.github.io/user-2024-qgisprocess",
        "document": ""
    },
    {
        "link": "http://themagiscian.com/2016/04/19/routing-in-brisbane-a-recipe-for-a-complete-web-app",
        "document": "We use routing almost everyday. In the car, the GPS is our best friend. In public transportation we use the topological maps to find the quickest connections between point A and point B. Our mental maps allow us to get around traffic jam at known places.\n\nFor GPS especially, a lot of work is done upstream by engineers to make it possible to guide you through a city you do not know. Data has been collected, prepared and used in applications running on devices we call “GPS”, and which is almost mandatory to have in the car. With our today’s device, live traffic data are added into the algorithms to find the quickest (shortest? fastest?) route at any time of the day.\n\nWhat about digging into this process and build our own routing application with (just) a small example?\n\nIn this article, we focus on the development of a routing web application that gives the fastest route between two points the user chooses. Our city lab this time is Brisbane, QLD, and the web app we’re going to create looks like this (see hereunder). Unfortunately, I do not have yet a public server where I could share my apps, so you have to get fine with only screenshots, *sorry*.\n\nUsing exclusively OpenSource data and products (except the host’s OS which is Windows 10 of course), the architecture we’ll built in this article looks like this.\n\nThe project can be split into following stages:\n\nQuick note: this article was inspired from the pgrouting workshop and can be followed by rookies as well as by a more advanced users.\n\nPlease find all the scripts I used in this article here: http://codes.themagiscian.com/osmrouting/\n\nMy main development machine is a Windows 10. I do however prefer delegate all the server jobs to a dedicated server. That’s why I make use of another server, ubuntu, I run in a VM.\n\nIf you do already have a working ubuntu environment, you can skip this step.\n\nMy VL is a ubuntu Desktop. Everything is anyway done via command line despite the “Desktop”.\n• Get ubuntu desktop for here.\n• Choose the iso file as we will deploy it in VirtualBox\n• Get Oracle VirtualBox from here.\n• New > and follow all the “next” steps\n• Point to the downloaded iso file\n• Right-click on the created VM > Settings > Storage and choose the iso file.\n\nCongrats! Now start your server and follow the configuration steps of ubuntu.\n\nNB: For convenience, it is better to set a static ip address to the server. The default dhcp configuration gives a random ip address each time you will connect. Follow the instructions here to set a static ip. The static ip I defined is 192.168.1.87.\n\nPostgreSQL is a free and Open Source database that can handle GIS data with its PostGIS cartridge. pgRouting is an extension of PostGIS allowing to do routing calculations. We need it too!\n\nFrom the ubuntu machine, execute following commands to install the stack of database components we need:\n\nInstall also the client tools on the host, which is Windows 10 here.\n• Go on the PostGIS website and download the bundle\n\nYou probably want to add the C:\\Program Files (x86)\\PostGIS_bundle\\bin directory to the environment variable. That makes it later possible to access the tools directly in the command line.\n\nIn Windows and in the command line, connect to the database instance via psql (the password was asked during the installation process).\n\nCreate the role themagiscian. We limit this role to only create databases, tables, and login (no superuser).\n\nThe postgis and pgrouting extensions have to be activated. As only superusers can, you may have to log out and login with the postgres user to activate the extensions.\n\nThe data we use come from OpenStreetMap. As Brisbane is a big city with a wide urban spread, the amount of data we need is quite huge for our routing. Using the OpenStreetMap website is not suitable for this. overpass-turbo.eu is more in our scope as it’s better for the download of larger datasets. Please have a look at this article to know which tool to use for download depending on the size of the exepected data.\n• Paste in following query to get all the streets suitable for a car.\n• Ways for horses, bicycles, pedestrians can be the subject of another article. The language used here is a specifically crafted query language and the highway keys used were taken from here.\n• Click on Export and choose the raw osm format\n\nThe way I decided to load the data was via the shp2pgsql tool. Note that there are many other ways to load osm data into PostGIS (osm2pgsql for instance). The data has however to be converted from the raw osm format, to shapefile. I used QGIS for this task.\n• Import the data into QGIS\n• When asked, choose to display only the multilinestring features\n• Right-click the data > Save as\n• Specify the output format as Shapefile\n\nI call the file BRISBANE_ROADS_OSM.shp and I reference it in the shp2pgsql script hereunder. Have a look at this page to get the meaning of all the parameters.\n\nNB: The -S parameters is very important as it generates simple geometries. We absolutely need that for our routing algorithm.\n\nNB2: The name of the imported table is network2clean. Following steps will go through a cleaning process and finally we will give the proper name “network” to the table.\n\nThe important data are still “raw”. That means, they contain all the attributes and attribute values coming from OpenStreetMap contributors. There is about 130 columns in the data and we have to clean it a little bit up.\n\nFirst, we merge different columns referring to the same attribute.\n\nThere are lots of columns we do not need in our routing application for cars. For example, the columns about railways, the name of the contributor, bus_lanes, etc. We simply drop these columns up.\n\nHere comes the tough part. The lines we are handling are not well split although we need them to be so. In other words, start points and end point of lines do not currently coincide. Our algorithm needs that to perform routing. We could simply execute a ‘split at intersection’ command but we have to take care not to split, for example, tunnels, bridges, or motorways.\n\nWe proceed as following:\n• we create points at intersections where they apply,\n• we define a new function making it possible to split lines at points,\n\nThe tables that will welcome the nodes has first to be created.\n\nStart and end points of each single line is loaded into this table.\n\nLines have to be split except if they are highways, identified by “motorway”, highway links, bridges or tunnels.\n\nThe intersection between lines can be a line, a multiline, a point or a multipoint. We’re only interested in points and multipoints we have to explode to only keep the individuals.\n\nDelete all the geometries which are not points.\n\nWe make sure there are no duplicated point.\n\nThere is already the ST_split function available in PostGIS. It however cannot handle multisplit. In other words, using ST_split would result in a lot of duplicated geometries. The function we define here should only keep the split lines. I found on the web such a function and I adapted it.\n\nThe last thing to do in this network creation is to … create the network! Here we make use of the newly created ST_MultiSplit function just here above.\n\nEach line is split by the intersection points. We almost double the total amount of rows in the table during this process.\n\nNB: The name of the table is changed here (from network2clean to network).\n\nNot all streets and roads have a value for the speedlimit attribute. We do however need all rows to be filled for the routing purpose as we have to calculate the time it takes to cross every single street.\n\nFor doing things easier, we first define a new function which output is the speedlimit for the highway as input. For example, in Brisbane, the speedlimit on motorways is 110 kmh, in residential areas it is often 30 (notice we often underestimate values to highend the total amount of minutes per itinirary – this will give results closer to reality as we have to take into account delays such as crossroad, traffic lights, traffic jams, etc.)\n\nWe continue our network cleaning process here.\n\nFirst of all, we rename the maxspeed column to speedlimit\n\nThe speedlimit colum is populated here.\n\nWith maxspeed and the length of each segment, we extract the time it takes to travel each line.\n\nVERY IMPORTANT: we need to take into account oneway streets! Some of the streets have their ‘oneway’ fields filled with a value, but this is not the case for all the rows. Basically, we fill the column ‘oneway’ with a ‘n’ for no where the field is not already set to yes. Additionnaly, motorway, motorway links and roundabouts are also set to oneway. This is essential for routing.\n\nSometimes, we need to know what is the maximum height allowed on a street. We noticed some discrepancy with the data. We fix that here.\n\nAll lanes are put to 1 when it is not indicated the opposite.\n\nWe set the attribut “bridge” to “No” when nothing is already specified.\n\nSo we do as well for the horse field (even if we do not need this field in this article as we’re dealing with car routing).\n\nWe create a new unique id as the previously used id, gid, was duplicated during the MultiSplit process.\n\nAs we do allow routing along streets in both directions, we have to define a reverse cost. Sometimes, the travel time is different in both directions. For one-way streets, we put the reverse cost to 99999 minutes to be sure our algorithm does never lead the car there.\n\nThe topology creates a network of interconnected lines by points. For each line, we must specify the start and the end point, which are the vertices. The output table can then be ‘routed’ in the algorithm.\n\nThe algorithm we use is naturally Dijkstra. This algorithm is available as we did import the pgRouting capabilities.\n\nThis function is put inside a wrapper for the function to be easier to use. The procedure is described here, but the function is adapted to match our needs.\n\nThe function takes in input the network table and the coordinates of the start and end point. The function then chooses the nearest vertice it finds and calculate the shortest path with the Dijkstra algorithm. Execute this script in pgsql.\n\nThe function can be tested with following command.\n\nPlease see the result by adding this layer TESTROUTING into QGIS.\n\nThe server side is composed of an application server, Tomcat 8 here, and Geoserver for serving the network data.\n• Geoserver can be downloaded as a war and deployed in Tomcat.\n• Go on this website to download the war file\n• Just drop this war file into Tomcat’s webapps folder /var/lib/tomcat8/webapps.\n• You probably have to run following query to make it possible for external clients to access the port 8080, Tomcat’s default port number.\n\nOn the external client machine, try this url to see if Geoserver is well deployed http://192.168.1.87:8080/geoserver\n• Log in with the default credentials admin/geoserver.\n• Note: change your password immediately! (Go to Passwords > Change Password)\n• Create a new user\n• I created the user themagiscian: Go to User, Groups, Role > Add new user\n• Log out from admin and log in as themagiscian\n• Create Workspace\n• Do not forget to check the WMS checkbox on the right\n• Finally, create the Layer\n• Declared: EPSG:3857 (The data are in 4326 but OpenLayers works in 3857)\n• In the Bounding Box space, click on Compute from data and Compute from native bounds\n• Click on the Edit SQL View and paste in following query\n• Be sure all the other parameters are set like this.\n\nCongratulations! The routing server is now ready to welcome the requests coming from our OpenLayers client!\n\nJust test if the wms server is running by going on following website:\n\nYou should get the result of the GetCapabilities request.\n\nThis is the final part! Almost done! 🙂\n\nThe website makes it possible for the user to pick a starting and an end point. The application calculates then the fastest path between these two points.\n\nAs we’re (trying to) doing things properly, we will create three files: html, js, and css.\n• Create a new folder in geoserver’s webapps folder and call it “brisbane_network_routing”.\n• The following three files (html, js and css) have to be deployed there.\n\nThis is the skeleton of our website. It is composed of a map and a button to clear the shortest path that was just drawn. We import the styles ol.css, the OpenLayers library and the bnr.js file, which takes care of the actions done when using the web app.\n\nThe map object is responsible for the map. Its default location is in Brisbane’s CBD 17035589.221, -3179098.060 . We add controls such as zoom in/zoom out.\n\nThe second part of the file takes care of the user’s actions. It creates a point feature where the user clicks. The most important part is probably the call to the server for the calculation of the itinirery (http://192.168.1.87:8080/geoserver/Brisbane_network_routing/wms).\n\nThe last part of the file is about the cleaning of the map. Once an itinirery is calculated, it can be cleaned for another calculation.\n\nThe ol.css file comes right from OpenLayers. Nothing changed in this file\n\nOn the host machine, open a browser and navigate to your VM, that is http://192.168.1.87:8080/brisbane_network_routing\n\nClick two points on the map and ENJOY 🙂\n\nAs stated before, I do not have a public server where I could share the whole application."
    },
    {
        "link": "https://dewey.dunnington.ca/slides/qgisprocess2021",
        "document": ""
    },
    {
        "link": "https://florisvdh.github.io/foss4g-2023-qgisprocess",
        "document": ""
    },
    {
        "link": "https://saga-gis.sourceforge.io/saga_tool_doc/3.0.0/a2z.html",
        "document": ""
    }
]