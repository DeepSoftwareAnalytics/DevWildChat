[
    {
        "link": "https://play.google.com/store/apps/details?id=com.rhmsoft.edit&hl=en_US",
        "document": "QuickEdit text editor is a fast, stable and full featured text editor. It has been optimized for use on both phones and tablets.\n\n\n\nQuickEdit text editor can be used as standard text editor for plain text files, or as a code editor for programming files, making it suitable for both general and professional use. \n\n\n\nQuickEdit text editor includes a number of performance optimizations and user experience tweaks, making it faster and more responsive than other text editor apps commonly found on Google Play.\n\n\n\nFeatures:\n\n\n\n‚úì Enhanced notepad application with numerous improvements.\n\n‚úì Code editor and syntax highlight for 50+ languages (C++, C#, Java, XML, Javascript, Markdown, PHP, Perl, Python, Ruby, Smali, Swift, etc).\n\n‚úì Include online compiler, can compile and run over 30 common languages (Python, PHP, Java, JS/NodeJS, C/C++, Rust, Pascal, Haskell, Ruby, etc).\n\n‚úì High performance with no lag, even on large text files (more than 10,000 lines).\n\n‚úì Easily navigate between multiple open tabs.\n\n‚úì Show or hide line numbers.\n\n‚úì Undo and redo changes without limit.\n\n‚úì Display, increase, or decrease line indentations.\n\n‚úì Fast selecting and editing abilities.\n\n‚úì Physical keyboard support, including key combinations.\n\n‚úì Smooth scrolling both vertically and horizontally.\n\n‚úì Directly target any specified line number.\n\n‚úì Quickly search and replace content.\n\n‚úì Easily input hex color values.\n\n‚úì Automatically detect charset and encoding.\n\n‚úì Automatically indent new lines.\n\n‚úì Various fonts and sizes.\n\n‚úì Preview HTML, CSS, and markdown files.\n\n‚úì Open files from recently opened or added file collections.\n\n‚úì Ability to edit system files on rooted devices.\n\n‚úì Integrate and easy access to GitHub and GitLab.\n\n‚úì Access files from FTP, Google Drive, Dropbox, and OneDrive.\n\n‚úì Handy tool to edit INI, LOG, TXT files and hack games.\n\n‚úì Supports both light and dark themes.\n\n‚úì Optimized usage for phones and tablets.\n\n\n\nIf you can help to translate this application to your native language, please contact our email: support@rhmsoft.com.\n\n\n\nIf you encounter any issues or have any suggestions, please feel free to contact us: support@rhmsoft.com\n\nYou can also share your comments with the QuickEdit thread on xda-developers: \n\nhttp://forum.xda-developers.com/android/apps-games/app-quickedit-text-editor-t2899385\n\n\n\nThank you for using QuickEdit!"
    },
    {
        "link": "https://oluwarotimiojo.hashnode.dev/top-picks-mobile-code-editors-for-coding-anywhere",
        "document": ""
    },
    {
        "link": "https://flatlogic.com/blog/top-8-code-editors-for-mobile-application-development",
        "document": "Mobile app development is an all-time beneficial investment for companies and, according to Clutch, about 42% of businesses have a mobile app. They help connect the business to its consumers, promote brand recognition and loyalty, promote impulse spending, and generally raise profits.\n\nHowever, not just any app that‚Äôs hastily thrown together will rake in these positive benefits. Instead, this is a process that takes careful planning, the right skills, and the right tools. That‚Äôs why it‚Äôs so important to look into products and services that can help this process along, such as working with an experienced application developing company that can work as a better advisor or you can use a code editor.\n\nUnfortunately, not every code editor out there is worth a developer‚Äôs time. That‚Äôs why this list is handpicked for you to help find a high-quality code editor that will help rather than inhibit the creative process.\n\nDcoder uses a wide variety of programming languages including Ruby and C. You can easily use this tool to see any errors in your code and has features such as custom themes. The only downside is that since the editor uses cloud APIs, it doesn‚Äôt work properly offline.\n\nTurbo Editor also supports a number of languages such as CSS, JavaScript, HTML5, and Python. The code editor has a clean interface that‚Äôs easy to use and navigate around. There is a bug in the app that can prevent you from previewing the results of your code.\n\nQuoda is an Android-based code development tool. Like the other tools discussed here, this is also a multi-language tool that has some adaptability to the developer‚Äôs preferred codes. It also has handy tools such as automatic suggestions, syntax highlighting, HTML file previews, and a find and replaces function.\n\nQuickEdit, as the name suggests, is meant to be a fast-working code editor while still offering exceptional stability. The editor works with more than 40 different coding languages including popular options such as Java, Javascript, PHP, Python, and Swift. It also allows you to access files from various file collections like FTP and Google Drive.\n\nOur Code Editor Free is a free code editor that also serves as a text editor and an integrated development environment or IDE. You can download files from sources such as Dropbox to get started right away. Internet connection isn‚Äôt required and it still offers features such as a syntax checker as well as a search and replaces function.\n\nAWD is compatible with HTML, CSS, PHP, and JavaScript. While simple, AWD is full of handy features. This includes code highlighting, completion, error checking, and fast navigation. You can even quickly preview your page periodically as you go.\n\nAIDE is made to be a complete tool for developers by offering an intuitive design that caters to both beginners and experienced users. It even has a library of tutorials that give users a free primer on how to make the most out of the platform.\n\nFinally, developers can use Codeanywhere as a code, markup, and text editor. It‚Äôs mobile-friendly and designed to make your coding easy and quick. Generally, it‚Äôs made to cater to busy developers working off their desktop, phone, or tablet.\n\nCode editors help streamline the fundamental tasks that are associated with developing your company‚Äôs mobile app. There are plenty of choices out there when you‚Äôre looking for a code editor to use. These are eight of your best options that will keep your project on track.\n\nYou might also like these articles:\n‚Ä¢ Why Choose React Native for Mobile Development + Tutorial on How to Start an App\n‚Ä¢ How to Make Your First React Native App"
    },
    {
        "link": "https://medium.com/@c_yatteau/code-on-your-phone-with-these-4-mobile-apps-cf20b10be242",
        "document": "It may not seem feasible, but coding websites on your phone is not only possible, but it‚Äôs also enjoyable. Below I‚Äôve listed four mobile apps (some Android exclusive) that allow you to use the basics of HTML, CSS, and JavaScript to code and preview your site while out and about on your mobile device. So get ready to take your web development skills on the road, at a restaurant, and anywhere else you happen to go.\n\nSpck is a fantastic smartphone code editor for HTML, CSS, and JavaScript. The app allows you to write and preview your code in seconds. The app also comes with Git client integration, allowing you to clone, commit, pull, push, etc., from Github, Gitlab, Bitbucket, and more. While the main languages supported in the app are the prominent web development stack listed above, there is intelligent code-hinting support for TypeScript, JavaScript, TSX, JSX, CSS, Less, and SCSS.\n\nDcoder is a great mobile app choice for your developer projects. Not only does it support HTML, CSS, and JavaScript, but it also has support for two JavaScript frameworks, React and Angular. Dcoder supports over 30 languages, including Java, C++, Python, and more. Like with Spck, Dcoder comes with Git client integration, allowing you to leverage the power of coding in multiple locations on multiple devices.\n\nThe app anWriter is an excellent and lightweight option for writing HTML, CSS, and JavaScript code. It takes up less than half the storage space of all the other apps in this list. The app also supports LaTex, PHP, and SQL. Like the other apps mentioned, anWriter allows you to preview the results of your code and will be sure to alert you to errors in its console.\n\nTrebEdit is an excellent way to create your web development projects on your phone while keeping things organized. You can write and share projects in HTML, CSS, and JavaScript. The app's UI experience is visually pleasing and easy to understand. The app also allows users to look up and use the source code of any URL. A final selling point for TrebEdit is the integrated W3Schools learning capability.\n\nWhether you‚Äôre a seasoned developer or a coding noob, these mobile apps will ensure you‚Äôre never without the ability to code. Happy coding! üë©‚Äçüíª\n\nCourtney Yatteau, a Developer Advocate at Esri, wrote this article. The opinions in this article are solely Courtney‚Äôs opinions and do not necessarily represent the postings, strategies, or opinions of her employer. If you have any feedback, please like and/or comment. Also, you can contact Courtney through Twitter if you have any questions or comments that you‚Äôd prefer to send privately."
    },
    {
        "link": "https://apps.apple.com/us/app/koder-code-editor/id1447489375",
        "document": "\"Koder for iPad: Nerds Rejoice! You Can Code on Your iPad\"\n\n-- GIZMODO / App of the day --\n\n\n\n\"Koder‚Äôs simple yet efficient interface is designed for touch editing. At just $5.99, you get an editor with a well-designed interface at a great price. If you want to code with your trusty iPad, then Koder is for you.\"\n\n-- AppAdvice --\n\n\n\n\"An accomplished code editor for many programming languages\"\n\n-- 148Apps --\n\n\n\n\"Editing code on your iPad should never be that difficult again\"\n\n--KillerStartups--\n\n\n\n\"The developers at iCodeLabs have done a great job optimizing the iPad‚Äôs real estate for code editing\"\n\n--theiphoneappreview--\n\n\n\n\"The app for instant project creation and code editing, perfect for developers and programmers on the go.\"\n\n--tipsfortablets--\n\n\n\n-- Koder was listed on the App Store as a 'Staff Favorites' in 82 countries --\n\n\n\nKoder is a code editor for iPad and iPhone. It does have many features including syntax highlighting, snippet manager, tabbed editing, find and replace code, editor theme, remote and local files connections, and many more.\n\nWith Koder you can code anytime and anywhere, no matter if you're at your desk or while on the go\n\n\n\nFeatures:\n\n\n\n- Syntax Highlighting ( Supports more than 80 languages : actionscript, actionscript3, active4d, ada, ampl, apache, applescript, asm-mips, asm-x86, asp-js, asp-vb, aspdotnet-cs, aspdotnet-vb, awk, batch, c, cobol, coffeescript, coldfusion, cpp, csharp, csound, css, d, dylan, eiffel, erl, eztpl, elixir, fortran, freefem, gedcom, gnuassembler, haskell, header, html, idl, java, javafx, javascript, jsp, latex, less, lilypond, lisp, logtalk, lsl, lua, markdown, matlab, mel, metapost, metaslang, mysql, nemerle, none, nrnhoc, objectivec, objectivecaml, ox, pascal, pdf, perl, php, plist, postscript, powershell, prolog, python, r, rhtml, ruby, sass, scala, sgml, shell, sml, sql, standard, stata, supercollider, tcltk, torquescript, udo, vb, verilog, vhdl, xml )\n\n- Code Autocomplete\n\n- Code Function list\n\n- Access and Manage your Dropbox, (S)FTP, webdav and local files easily\n\n- Built In Terminal (SSH Client)\n\n- Tabbed editing\n\n- Extra Keyboard with Custom Key (Snippet)\n\n- Document Picker Support to open/import/export other app files from/to Koder\n\n- Find and replace code\n\n- Previewer Browser with View Source function \n\n- Editor theme with Custom Theme Editor\n\n- Extra Key / Additional Keys on Virtual Keyboard with open+close brackets keys\n\n- Screen-Lock, Manual and Auto Lock\n\n- Extracting Zip File on Local project\n\n- Sophisticated File Browser\n\n- iOS \"Open In\" support, from Koder to other app - vice versa\n\n- Change file/folder permission (CHMOD) on FTP/SFTP projects\n\n- Folder Synchronization between Local Project and FTP Project\n\n- Uploading files from desktop from browser or iTunes sharing\n\n- Expandable editing space\n\n- Bluetooth Keyboard Support\n\n- and many more ‚Ä¶\n\n- Support multitasking for iPad\n\n- Support editing files from Working Copy using drag and drop\n\n\n\nNEWEST\n\n- Support Dark Theme\n\n- Compatibility with iOS 13\n\n\n\nBUG REPORT/ PROBLEMS/ IDEAS :\n\nIf you have any problems when using Koder, or you have ideas for Koder improvement, please mention us or message us directly at twiter @koderapp\n\nI‚Äôve only been using Koder for a short time now but so far I am extremely impressed by its wide range of features, capabilities and its well-designed user interface. While I prefer to do the majority of my web design on my computer using mainstream apps, I like to have a tool on my iPhone where I can access the same files and make small edits to tweak as needed. Until I ran across Koder, I was unable to find any decent iPhone app for doing this which wasn‚Äôt already too expensive right out-of-the-gate simply to evaluate. On the other hand, my first time using the free version of Koder gave me an immediate, ‚Äúnow that‚Äôs what I‚Äôm talking about‚Äù reaction. I like the fact that it has native Dropbox support as well support for FTP and other cloud services. Great tool that I highly recommend and hope to continue doing so as I get more familiar with its details. I was initially going to give this app 3 stars. That wasn‚Äôt a fair assessment, as most everything about the app is pretty good. There are two pain points that stand out to me. One of them would be a work around for the other:\n\n\n\n1) Git integration would be fantastic! The repo could be saved as a working/local folder for Koder, with a simple terminal built in to run git commands. I understand this feature would be an undertaking. However, the second feature would suffice...\n\n\n\n2) Allow the ability to open a folder from another app instead of just a single file. Then developers could use something like the Working Copy app to manage git while the entire cloned folder could be visible in the Koder file manager. I believe Working Copy allows some level of integration for other apps, but the the ability to open a cloned folder would be excellent all by itself. Considering Koder can already open its own local folder, this doesn‚Äôt seem like a huge undertaking at all. It would probably mean a permissions change on that folder by the user, but that‚Äôs easy. Hi, thanks for your review.\n\n\n\n1. About Git integration, yeah we know it would be fantastic, but that's not our top priority now. \n\n\n\n2. Yup, already in our backlog. :) Can‚Äôt put a path in on an sftp connection (app crashes), and can‚Äôt move up a folder from home or type a path when you connect, so... not possible to get to the files I need. Also very awkward to load an ssh key.\n\n\n\nEDIT: Finally figured out I could edit existing entries and was able to add the path after the fact successfully without the app crashing. Now I‚Äôm exploring more. The app seems nice and mostly works well. I would like to be able to change the word wrap though. It seemed to have broken some html comments when I opened a file. It changed the double dash to a single longer dash for some reason. Overall, I do think I‚Äôll try to use the app more often to do quick edits on they fly.\n\n\n\nUPDATE: To dev, thanks for the reply and thanks for the info about the keyboard. I just got the iPad (and am not otherwise Apple) and didn't know about that! It's been disabled now. +1 star for responsiveness and because other than the path bug which I'm able to work around, most other annoyances are Apple's fault. Hi, \n\n\n\nThanks for your review and report. For SFTP, we are on bug fixing now. Actually paths starting with a slash are \"absolute\", and are relative to the root of the file system. But we will make it easier to use it and not crash\n\n\n\nAnd regarding html comments, actually we have fixed it. But in some users, it still happen. The quick fix, you can disable Smart Punctuation in Settings- General - Keyboard. And it will run normally.\n\n\n\nHappy coding :)\n\nThe developer, Reny Mustika, indicated that the app‚Äôs privacy practices may include handling of data as described below. For more information, see the developer‚Äôs privacy policy. Data Not Linked to You The following data may be collected but it is not linked to your identity: Privacy practices may vary, for example, based on the features you use or your age. Learn More"
    },
    {
        "link": "https://stackoverflow.com/questions/59256113/how-to-use-github-code-navigation-from-browser",
        "document": "I want to take advantage of GitHub's code navigation features on the browser but I am getting this error message at the top of the Python code:\n\nCode navigation is available for this repository but data for this commit does not exist.\n\nWhen it works successfully it says:\n\nCould somebody help me understand what this message means?"
    },
    {
        "link": "https://docs.gitlab.com/ci/ci_cd_for_external_repos/github_integration",
        "document": "GitLab CI/CD can be used with GitHub.com and GitHub Enterprise by creating a CI/CD project to connect your GitHub repository to GitLab.\n\nWatch a video on Using GitLab CI/CD pipelines with GitHub repositories.\n\nPersonal access tokens can only be used to connect GitHub.com repositories to GitLab, and the GitHub user must have the owner role.\n\nTo perform a one-off authorization with GitHub to grant GitLab access your repositories:\n‚Ä¢ In GitHub, create a token:\n‚Ä¢ Enter a Token description and update the scope to allow and so that GitLab can access your project, update commit statuses, and create a web hook to notify GitLab of new commits.\n‚Ä¢ In GitLab, create a project:\n‚Ä¢ On the left sidebar, at the top, select Create new ( ) and New project/repository.\n‚Ä¢ Creates a web hook on GitHub to notify GitLab of new commits.\n\nTo use GitHub Enterprise with GitLab.com, use this method.\n\nTo manually enable GitLab CI/CD for your repository:\n‚Ä¢ None\n‚Ä¢ Enter a Token description and update the scope to allow so that GitLab can access your project and update commit statuses.\n‚Ä¢ None\n‚Ä¢ On the left sidebar, at the top, select Create new ( ) and New project/repository.\n‚Ä¢ Select Run CI/CD for external repository and Repository by URL.\n‚Ä¢ In the Git repository URL field, enter the HTTPS URL for your GitHub repository. If your project is private, use the personal access token you just created for authentication.\n‚Ä¢ Fill in all the other fields and select Create project. GitLab automatically configures polling-based pull mirroring.\n‚Ä¢ None\n‚Ä¢ Paste your personal access token and HTTPS repository URL into the form and select Save.\n‚Ä¢ None In GitLab, create a personal access token with scope to authenticate the GitHub web hook notifying GitLab of new commits.\n‚Ä¢ None In GitHub, from Settings > Webhooks, create a web hook to notify GitLab of new commits. The web hook URL should be set to the GitLab API to trigger pull mirroring, using the GitLab personal access token we just created: Select the Let me select individual events option, then check the Pull requests and Pushes checkboxes. These settings are needed for pipelines for external pull requests."
    },
    {
        "link": "https://stackoverflow.com/questions/67527148/how-to-view-code-in-github-repository-on-browser",
        "document": "github Newbie question [I've seen other posts related to github here, but if I'm not in the right place then I'll be grateful if someone could direct me.]\n\nThis is driving me nuts! I created a repository on github.com and all I want is to view the code in my browser. FYI, I looked at How to view repository on GitHub\n\nwhich was not relevant.\n\nWhen I go to github (https://github.com/geraldrharp/backup) I have a private repository called backup. When I log in and \"view code\" in the repository, I see the webpage copied as a screen shotbelow. Obviously, I don't see the code. And I've searched high and low, and can't figure out how to see my code. I've searched the internet many times, but no one else seems to have my problem. Which is weird. Also, searched stackXXX sites.\n\nI do have github desktop, but I get no further there. And I'm positive there is a way to see my code in a browser, which is what I really want. 'Cause I need to view the code from another computer on which I don't have the authority to install programs."
    },
    {
        "link": "https://reddit.com/r/learnprogramming/comments/uq9z2j/i_want_to_run_my_web_app_on_my_mobile_directly",
        "document": "Do I need to download the files to my phone and execute in Chrome or is there some other browser type app that reads Github code and runs it as an HTML page? Basically, I'd like to preview front end changes on my phone (and also admire my day's work in bed while twirling my hair)"
    },
    {
        "link": "https://superuser.com/questions/1863359/http-server-for-viewing-a-local-git-repo-in-browser-with-github-gitlab-styling",
        "document": "Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers."
    },
    {
        "link": "https://docs.gitlab.com/ci/mobile_devops/mobile_devops_tutorial_android",
        "document": "In this tutorial, you‚Äôll create a pipeline by using GitLab CI/CD that builds your Android mobile app, signs it with your credentials, and distributes it to app stores.\n‚Ä¢ Set up Android apps distribution with Google Play integration and fastlane\n\nBefore you start this tutorial, make sure you have:\n\nUse GitLab-hosted runners, or set up self-managed runners for complete control over the build environment.\n\nTo set up code signing for Android:\n‚Ä¢ None\n‚Ä¢ None Run the following command to generate a keystore file:\n‚Ä¢ None Put the keystore configuration in the file:\n‚Ä¢ None Upload both files as Secure Files in your project settings.\n‚Ä¢ None Add both files to your file so they aren‚Äôt committed to version control.\n‚Ä¢ None Configure Gradle to use the newly created keystore. In the app‚Äôs file:\n‚Ä¢ None Anywhere in the block, add:\n‚Ä¢ None Add the to the release build type:\n\nThe following are sample and files with this configuration:\n\nSet up Android apps distribution with Google Play integration and fastlane\n\nSigned builds can be uploaded to the Google Play Store by using the Mobile DevOps Distribution integrations.\n‚Ä¢ Create a Google service account in Google Cloud Platform and grant that account access to the project in Google Play.\n‚Ä¢ Enable the Google Play integration:\n‚Ä¢ On the left sidebar, select Search or go to and find your project.\n‚Ä¢ In Package name, enter the package name of the app. For example, .\n‚Ä¢ In Service account key (.JSON) drag or upload your key file.\n‚Ä¢ Add the release step to your pipeline.\n\nThe following is a sample :\n\nThe following is a sample :\n\nFor an overview, see Google Play integration demo.\n\nCongratulations! Your app is now set up for automated building, signing, and distribution. Try creating a merge request to trigger your first pipeline.\n\nSee the Mobile DevOps Android Demo project for a complete build, sign, and release pipeline example for Android.\n\nFor additional reference materials, see the DevOps section of the GitLab blog."
    },
    {
        "link": "https://f-droid.org/en/packages/com.gh4a",
        "document": "Access to GitHub and stay connected to your networks. Follow Git repositories and top users in GitHub. View all users' activities, source codes and manage your issues with OctoDroid.\n\n\n\nFEATURES\n\n\n\nAuthentication/authorization\n\n* OAuth2 web application flow.\n\n* Support for authentication via personal access token.\n\n\n\nGeneral\n\n* Notification support\n\n* Multi account support\n\n* Printing support on codes, commits etc\n\n* Search repository, user or code.\n\n\n\nGithub repository\n\n* List repositories\n\n* watch/unwatch github repository\n\n* View git branches and tags\n\n* View pull requests\n\n* View collaborators/contributors\n\n* View watchers/networks\n\n* View issues\n\n\n\nUser\n\n* View basic informations\n\n* Activity feeds\n\n* Follow/unfollow user\n\n* View public/watched repositories\n\n* View followers/following\n\n* View organizations (if type is user)\n\n* View members (if type is organization)\n\n\n\nIssue\n\n* List issues\n\n* Filter by label, assignee or milestone\n\n* Create/edit/close/reopen issue\n\n* Comment on issue\n\n* Manage labels\n\n* Manage milestones\n\n\n\nGit Commit\n\n* View git commit\n\n* Diff viewer with colorized HTML\n\n* View commit history on each file\n\n\n\nTree/File browser\n\n* Browse source codes\n\n* File viewer with code syntax highlighted\n\n\n\nGist\n\n* List gists\n\n* View gist content\n\n\n\nExplore Github\n\n* Public timeline\n\n* Trending repos (today, week, month)\n\n* GitHub blog\n\n\n\nShare function on:\n\n* user\n\n* repo\n\n* commit\n\n* diff\n\n* file\n\n* issue\n\n\n\nGithub download source code.\n\n\n\n..and many more\n\n\n\nFull credit to maniac103 (https://github.com/maniac103) for the major improvements, bug fixing and testing.\n\n\n\nOctoDroid branding by Steven Mautone: https://stevenmautone.com\n\n\n\n** NOTE **\n\nPlease report any issues at Github (https://github.com/slapperwan/gh4a/issues) or email me the issues.\n\n\n\nFormerly known as Gh4a Android Github.\n\n\n\nAlthough APK downloads are available below to give you the choice, you should be aware that by installing that way you will not receive update notifications and it's a less secure way to download. We recommend that you install the F-Droid client and use that. Download F-Droid\n‚Ä¢ It is built by F-Droid and guaranteed to correspond to this source tarball.\n‚Ä¢ Allows the app to view information about network connections such as which networks exist and are connected.\n‚Ä¢ Allows the app to make use of foreground services.\n‚Ä¢ Allows the app to create network sockets and use custom network protocols. The browser and other applications provide means to send data to the internet, so this permission is not required to send data to the internet.\n‚Ä¢ Allows the app to show notifications\n‚Ä¢ read the contents of your shared storage Allows the app to read the contents of your shared storage.\n‚Ä¢ Allows the app to have itself started as soon as the system has finished booting. This can make it take longer to start the phone and allow the app to slow down the overall phone by always running.\n‚Ä¢ Allows an application to request installation of packages.\n‚Ä¢ Allows the app to prevent the phone from going to sleep.\n‚Ä¢ modify or delete the contents of your shared storage Allows the app to write the contents of your shared storage.\n‚Ä¢ It is built by F-Droid and guaranteed to correspond to this source tarball.\n‚Ä¢ Allows the app to view information about network connections such as which networks exist and are connected.\n‚Ä¢ Allows the app to make use of foreground services.\n‚Ä¢ Allows the app to create network sockets and use custom network protocols. The browser and other applications provide means to send data to the internet, so this permission is not required to send data to the internet.\n‚Ä¢ Allows the app to show notifications\n‚Ä¢ read the contents of your shared storage Allows the app to read the contents of your shared storage.\n‚Ä¢ Allows the app to have itself started as soon as the system has finished booting. This can make it take longer to start the phone and allow the app to slow down the overall phone by always running.\n‚Ä¢ Allows the app to prevent the phone from going to sleep.\n‚Ä¢ modify or delete the contents of your shared storage Allows the app to write the contents of your shared storage.\n‚Ä¢ It is built by F-Droid and guaranteed to correspond to this source tarball.\n‚Ä¢ Allows the app to view information about network connections such as which networks exist and are connected.\n‚Ä¢ Allows the app to make use of foreground services.\n‚Ä¢ Allows the app to create network sockets and use custom network protocols. The browser and other applications provide means to send data to the internet, so this permission is not required to send data to the internet.\n‚Ä¢ read the contents of your shared storage Allows the app to read the contents of your shared storage.\n‚Ä¢ Allows the app to have itself started as soon as the system has finished booting. This can make it take longer to start the phone and allow the app to slow down the overall phone by always running.\n‚Ä¢ Allows the app to prevent the phone from going to sleep.\n‚Ä¢ modify or delete the contents of your shared storage Allows the app to write the contents of your shared storage."
    },
    {
        "link": "https://handbook.gitlab.com/handbook/security/corporate/systems/okta/user/android",
        "document": "When adding my GitLab Google Workspace account to my Android device, the biometrics or security key verification never prompts after signing in to Okta.\n\nWhen attempting to add a Google Workspace account to an Android device, Okta authentication proceeds in the Android‚Äôs embedded browser (WebView).\n\nSince Okta does not support embedded web browsers for WebAuthn based verification, which causes an issue where nothing prompts you after you sign-in to Okta, so you cannot add the Google Workspace account to Android devices.\n\nPlease reach out to Slack channel to request temporary enable Okta Verify as a workaround."
    },
    {
        "link": "https://medium.com/automating-react-native-app-release-to-google-play/create-gitlab-project-for-the-apps-code-repository-3ebe8d43c9a3",
        "document": "In the previous posts of this Part-I of the series, we initialized a new React-Native app using RN CLI and changed its iOS Bundle Id and Android Package name as per our specification/requirement.\n\nIn this post, we will create a new Gitlab project and push the initial code of the app to this Gitlab project‚Äôs repository.\n\nWe will use Gitlab as the app code repository and later use Gitlab CI/CD pipeline to automate the app‚Äôs release to publish to Google Play store.\n\n- Create a Gitlab account if you don‚Äôt have one already.\n\n- Sign-in to your Gitlab account and click on ‚ÄòNew Project‚Äô button.\n\nYou will be asked to enter a name and description for the new project üëá\n\nEnter a name for your project and its description.\n\n- select the option to keep your project open to public or to keep it private.\n\n- Click Create project button.\n\nGitlab would create the project and take you to its details page üëá\n\nNow, to push our existing react-native code to the above created Gitlab project‚Äôs repo, follow the steps highlighted in red in below screenshot üëá\n\nPush the local commit to the remote branch:\n\nI use Github Desktop tool to maintain Git repositories. It makes easy to configure credentials of the account of remote repository üëá\n\nSweet, we now have a Gitlab repository for the app‚Äôs code.\n\nLet‚Äôs now start preparing our app to be ready to be published to app stores. For this, we will need to add icons/images to our app‚Äôs iOS and Android folders as required by the two platforms to publish the app in their respective stores, along with we would also setup semantic versioning for the app‚Äôs releases."
    },
    {
        "link": "https://about.gitlab.com/blog/2019/11/22/open-sourcing-the-gitter-mobile-apps",
        "document": "Before we acquired Gitter most every part of Gitter was private/closed-source. The main webapp was open-sourced in June 2017 and got both mobile Android/iOS apps open sourced in September 2018. If you would like to come help out, feel free to send us a merge request! This blog post will go over some the technical details of making the projects available for anyone to contribute.\n\nHere is the basic overview:\n‚Ä¢ Find secrets in the current state of the project (don't worry about the commit history) and move to some config that isn't tracked in the repo.\n‚Ä¢ Find/remove secrets throughout the whole repo commit history.\n‚Ä¢ Caveats:\n‚Ä¢ Because we are rewriting the git history, I don't know of a way to keep merge requests/pull requests because the MRs reference the old commit hashes.\n\nIf you want to check out the full project and final result, you can check out the project on GitLab (open-sourced 2018-8-8).\n\nTo start out, we used the GitHub to GitLab project import to move the private GitHub project over to GitLab. We named it so that later on we could create the actual clean public project without any of the orphaned git references that may potentially leak.\n\nwill search for high entropy strings (like tokens/passwords) through the entire git repo history. It's also useful to find all the potential areas where secrets may still exist in the current state of the project. Some sticky points we encountered while using include:\n‚Ä¢ \"I wish we could just search the current state of the project instead of all git history (the argument will just make it search the diff of the latest commit)\" dxa4481/truffleHog#92.\n‚Ä¢ \"The output will show the entire diff for the triggered commit which is a bit burdensome to see exactly what is wrong. The JSON output is sometimes easier to understand\" https://github.com/dxa4481/truffleHog/issues/58 or dxa4481/truffleHog#102.\n\nOnce we figure out where all of the secrets are we need a config/variable solution that isn't tracked by git but still lets them be available when building. We also wanted the solution to work in GitLab CI for some sanity builds/testing. There are lots of good articles on this topic:\n‚Ä¢ Android: Loading API Keys and other secrets from properties file using gradle\n‚Ä¢ How can I keep API keys out of source control?\n\nOur solution is completely based on the information in these articles. We chose to go the route of defining things in a file which can easily be read in the Gradle build script which handles the build even when using Android Studio. If the file doesn't exist (like in CI), it will try to read the secrets from environment variables which can easily be supplied in the project settings.\n\nUse the config variables in the Java app:\n\nWe use a to display the HTML markdown messages in the chat room. This view uses assets built from the main project. Because these assets had some inlined production secrets that whole directory needed to be removed.\n\nInitially, we opted to have the developer build these assets with their own secrets and symlink the build output directory. The community made this even simpler, so now there is just a Gradle task to run which fetches the latest build we have available from the GitLab CI.\n\nFrom your results earlier, you should know where secrets were stored throughout the history. We can use BFG Repo-Cleaner to remove and rewrite the repo history quickly.\n\nWhen using BFG, I wanted just to rewrite all of the sensitive values in instead of completely removing them, but rewriting isn't an option with BFG so I went ahead with deleting it and recreated it in a commit afterwards. ü§∑\n\nFor the Android app, here are the BFG commands I used,\n‚Ä¢ Remove sensitive strings where we can't just remove the whole file (collected from results)\n\nAfter you think you removed all the secrets, it's best to run again just to make sure no secrets are leftover. üòâ\n\nNow it's time to update your with some setup instruction so the community knows how to contribute.\n\nThis is the scary part üòÖ. Go to Project settings > General > Permissions > set Project visibility as Public. You can read more about project access here.\n\nCurious about how to setup builds in GitLab CI? Learn more from this blog post, which was what we used to set it up for our projects.\n\nYou can even learn how we automated the release process so we can publish straight to the Google Play Store from GitLab CI via fastlane üöÄ.\n\nIf you want to see the full project and final result, you can check out the project on GitLab (open-sourced 2018-9-18).\n\nThe same concepts apply from the Android section. We create a separate private project, , where we can work and later on, we can create the actual clean public project( ) without any of the orphaned git references that could leak.\n\ndidn't work well in the iOS project because there was a bunch of generated XCode files that had file hashes (high entropy strings which truffleHog looks for) ‚Äì which meant every commit was listed. ü§¶‚Äç Instead of trying to find something to filter the results down or get another tool, I decided just search manually. Here is the list of things we looked for:\n\nI used this directory filter when those strings above to avoid finding things outside of the repo itself (copy-paste for Atom editor):\n\nThe iOS app uses a few git sub-modules which we also had to check for secrets before making them public. It turned out only one of the sub-modules ‚Äì ‚Äì had secrets of it's own so I ran through the same secret removal process.\n\nWe had the same OAuth secrets in the main part of the iOS app, but since was also trying to handle OAuth secret settings, we opted for putting the new logic in to avoid having to refactor whatever other downstream code that uses the same submodule (like the macOS desktop app).\n\nHere are some articles around handling secrets in an iOS project,\n‚Ä¢ Secret variables in Xcode AND your CI for fun and profit üíå\n\nSince iOS apps can only be built on macOS and we don't have any macOS GitLab CI runners, our solution doesn't have to be CI compatible. You can track this issue for shared macOS GitLab CI runners.\n\nIf you're interested in setting up automated builds and publish releases to the Apple App Store from GitLab CI, you can learn how blog post about using fastlane.\n\nWe didn't have a complete picture of what to remove because didn't work well, so we didn't use BFG Repo-Cleaner. To remove secrets from the git repo history, we just squashed all of the history into a single commit.\n\nWe have some thoughts of deprecating the Android/iOS apps but the community has been great to keep the apps alive so far. We released a couple versions of each app including dark theme and GitLab sign-in for Android and a bunch of technical debt and fixes for iOS, including removing the deprecated (and we are intensely working on incorporating the new üòú).\n\nThe Android/iOS apps could benefit from a lot of polish and fixes, so if you see anything particularly annoying, we would love to review and merge your updates!"
    }
]