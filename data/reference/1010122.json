[
    {
        "link": "https://tecmint.com/how-to-open-extract-and-create-rar-files-in-linux",
        "document": "RAR files, a common compressed file format, are widely used to store and share large amounts of data efficiently. While Linux natively supports various compression formats like ZIP and TAR.\n\nRAR is the most popular tool for creating and extracting compressed archive files. When we download an archive file from the web, we require a rar tool to extract them.\n\nRAR is available freely under Windows operating systems to handle compressed files, but unfortunately, the rar tool isn’t pre-installed under Linux systems.\n\nIn this article, we’ll guide you through the process of installing unrar and rar command-line tools to open, extract, uncompress, or unrar and create an archive file on a Linux system.\n\nTo work with RAR files on Linux, you’ll need the rar and unrar command-line utilities, which allow you to create and extract content from RAR archives.\n\nTo install rar and unrar, open a terminal and use the default package manager specific to your Linux distribution.\n\nFor example, on Debian and Ubuntu-based distributions, you can easily install the rar and unrar packages using the apt-get or apt program as shown.\n\nIf you are using RHEL-based distributions, you can use the dnf command or yum command to install it.\n\nOn other popular Linux distributions, you can install it using your default package manager as shown.\n\nIf your distribution does not offer rar and unrar packages, you need to download the latest unrar/rar file and install it using the following commands.\n\nHow to Create RAR File in Linux\n\nTo create an RAR archive file in Linux, run the following command with option, which will create an archive file for a tecmint directory.\n\nHow to Extract RAR Files in Linux\n\nOnce you have unrar installed, you can easily open or extract the contents of a RAR file in the current working directory by using the following command with the option.\n\nHow to Extract RAR File to a Specific Directory\n\nTo open/extract a RAR file in a specific path or destination directory, use the option, it will extract all the files in the specified destination directory.\n\nHow to Extract RAR File with Directory Structure\n\nTo open/extract an RAR file with its original directory structure, just issue the below command with the option, which will extract according to their folder structure see below the output of the command.\n\nHow to List RAR Files in Linux\n\nTo list the contents of an RAR file in Linux, you can use the command, which will display the list of files with their sizes, dates, times, and permissions.\n\nHow to Check Integrity of RAR File in Linux\n\nTo check the integrity of an RAR archive file, you can use the command, which will perform a complete integrity check for each file for errors and displays the status of the file.\n\nThe unrar command only extracts, lists, or tests archive files. It has no option for creating RAR files under Linux. So, here we need to install the RAR command-line utility to create archive files.\n\nHow to Delete Files in RAR Archive\n\nThe command is used to delete files from an existing RAR archive in Linux. The option directly modifies the existing RAR archive by removing the specified files.\n\nIn the above command, the randfile001 and randfile002 files will be deleted from the tecmint.rar RAR archive.\n\nHow to Repair RAR Files in Linux\n\nThe command is used to repair and recover data from damaged or corrupted RAR archives in Linux.\n\nHow to Add Files to RAR Archive\n\nTo update or add files to the existing archive file, use the command, which allows you to add files to an existing RAR archive or update files within the archive.\n\nNow, verify that the file tecmint.sql is added to the archive file.\n\nHow to Set Password to RAR File\n\nThis is a very interesting feature of the rar tool, which allows us to set a password to the RAR archive file using the following command.\n\nNow verify it by extracting the archive file and see whether it will prompt us to enter the password that we have set above.\n\nThe command is used to lock an existing RAR archive file, which is useful if you want to prevent further modifications to the archive.\n\nTo split a RAR archive into 50MB parts or segments, use the following command with the option, which will split RAR file into four parts.\n\nMake sure to replace “archive_name.part.rar” with your desired archive name and size with the desired size (e.g., 50M or 100M). Include the files or directories you want to compress.\n\nFor more RAR and Unrar options and usage, run the following command it will display a list of options with their description.\n\nWe have presented almost all the options above for rar and unrar commands with their examples. If you feel that we’ve missed anything in this list and you would like us to add, please update us using the comment form below."
    },
    {
        "link": "https://baeldung.com/linux/rar-file-create-extract",
        "document": "RAR files are a popular format for compressing and archiving files. The acronym RAR stands for Roshal Archive. Despite being a proprietary format, there are several reasons for opting for the default RAR utility file type over others:\n\nWhile RAR exhibits slower performance compared to ZIP, it has a higher compression rate and superior data redundancy. Thus, RAR files save more storage space on average.\n\nIn this tutorial, we’ll see how to create and extract RAR files on Linux.\n\nBefore we move on to creating and extracting RAR files, let’s install the rar and unrar command-line utilities.\n\nStaying with the official rar and unrar applications ensures regular upgrades and compatibility for proprietary RAR archives. Still, we can opt to use other software for extraction but not creation.\n\nThey are both available in most Linux distributions’ repositories. For example, to install them on a Ubuntu 22.04 system, we use the apt command:\n\nThe sudo command ensures we have enough privileges for the installation task.\n\nOnce UnRAR is installed, we can use the unrar command for extracting files.\n\nSince rar is a proprietary program, we’ll only get a trial version. The trial version requires registration after 40 days. However, with trial software like RAR, we get several advantages:\n• the software can be tested thoroughly during this period\n• for temporary usage, it’s more affordable than a full license software\n• user can make informed decisions when buying the paid version\n\nOnce the installation is done, we can see how to create and extract RAR archives.\n\nWe can fairly easily produce RAR files on Linux by compressing one or more files into a single RAR file.\n\nThe rar command follows a general syntax for compressing files:\n\nLet’s understand the fields used above:\n• <option>: specifies the commands and switches for different file operations\n• <archive_name>: name of the output file\n• <file1 file2…fileN>: list of the files to compress\n\nThere are many options available with the rar command. All of them are also available in the output of rar without any options:\n\nLet’s see some usage of the rar command.\n\nLet’s now create a RAR file, myfile.rar, that contains the files file1.txt, file2.txt, file3.txt, and file4.txt:\n\nThe -a option adds files to the RAR file. Further, we can include directories with or without files using the -r recursive option:\n\nAs a result, all the objects below the directory are also compressed.\n\nWhen they have a bigger size, we can split archives into multiple parts or volumes using the -v<size> option.\n\nFor example, let’s create multiple RAR files of 50MB size:\n\nThe -v50M option split our RAR file into four parts: myfile.part1.rar, myfile.part2.rar, myfile.part3.rar, myfile.part4.rar, each being 50MB.\n\nMoreover, we can set a password for our RAR file with the -p option:\n\nThis command prompts us for a password. As a result, the files are compressed and protected with the entered password.\n\nFurthermore, we can also add encryption to our archived files. To do this, we use the -hp option:\n\nIn this case, both the file data and the headers are encrypted.\n\nExtracting a RAR file is very similar to creating it. Unlike the limited software that produces them, there are many programs available to extract RAR files. For example, we can use WinZip, 7-Zip, WinRAR from RARLab, and others.\n\nIn this case, we’ll use the classic unrar.\n\nWhen we want all the files in the archive to be extracted to the same directory where the archive is placed, we use the e subcommand. This won’t preserve the original directory layout but instead will dump all objects in a flat structure.\n\nLet’s take the example of the -e option:\n\nThis command moves all files from the RAR file to the current location without recreating the subdirectories but still extracting their contents.\n\nOn the other hand, we can use the x subcommand to preserve the full path of the files inside the RAR file:\n\nConsequently, the files are extracted to the current directory within their original tree structure.\n\nLet’s see how to extract a RAR file to a specific directory with the -o option:\n\nFor example, we’ll extract the contents of the RAR file myfiles.rar to the directory ~/Downloads:\n\nThis places the extracted files in the directory we specified.\n\nIf the RAR file is password-protected, we need to specify the password when extracting it. To do this, we use the -p option:\n\nWe can either put the password for our file in the placeholder <password> or enter it on the terminal:\n\nConsequently, we successfully extract our file.\n\nImportantly, we can use the unrar t command to test the integrity of a RAR file. This command checks the file for errors.\n\nFor example, let’s test the integrity of our file myfiles.rar:\n\nThis way, we check whether everything is as expected with the format of a given file or if there is corruption.\n\nIn this article, we looked at how to create and extract RAR files in Linux using the rar and unrar utilities.\n\nFirst, we started off by installing both tools. Then, we looked at the use of rar to create a plain RAR archive, a password-protected RAR archive, and a RAR archive with encrypted files. Next, we studied RAR archive extraction with unrar. Finally, we saw a method to test the integrity of a RAR."
    },
    {
        "link": "https://runcloud.io/blog/extract-create-rar-files-linux",
        "document": "Do you want to download multiple files from a Linux server? Or maybe you want to store the logs to comply with regulations?\n\nIn either case, you should compress the files into a RAR archive. In this post, we will show you how to create and extract RAR archives in Linux.\n\nBut before we get started, let’s quickly understand what a RAR archive is.\n\nRAR is an acronym for Roshal Archive, which is a type of compressed file format used to reduce the size of files or groups of files. The RAR format offers several advantages over uncompressed files:\n• Reduced Storage Space: Compressing files into a RAR archive can significantly decrease the amount of disk space they occupy.\n• Faster Transfer Speeds: Smaller file sizes mean quicker upload and download times, especially over the internet.\n• Improved Data Management: It’s easier to manage and organize a single RAR file than multiple smaller files.\n• Data Integrity: RAR files can include error checking and recovery records to repair minor corruptions.\n• Security: RAR files can be encrypted with passwords, providing an additional layer of security for sensitive data.\n\nIt’s clear that RAR files can be pretty useful, so now let’s see how to use them via command line on Linux servers.\n\nBefore you can work with RAR files in Linux, you need to install the necessary tools. Here’s how you can do it:\n\nConnect to your server via SSH and enter the following command to update your system’s package list:\n\nThis ensures that you have the latest information about available packages and their versions.\n\nTo handle RAR files, you’ll need to install unrar for extracting RAR files, and rar for creating RAR files.\n\nUse the following command to install necessary packages:\n\nAfter installation, you can start using these command line utilities to manage RAR archives.\n\nWith the necessary tools installed, you can now create and extract RAR files using the following steps:\n\nChange to the directory containing the files you want to archive:\n\nYou can use the pwd command to check your current working directory and the ls command to see the list of all the files and directories present in the current directory.\n\nOnce you are in the correct directory, use the rar command to create a new RAR archive:\n\nReplace archive_name.rar with your desired archive name, and with the files you want to include. If you want to include all the files in current directory, then you can enter instead of file names.\n\nIn the above example, we can see that the rar utility created a new archive called myData.rar and added all the files listed that were specified in the command line arguments.\n\nIf you have downloaded a RAR file, then you can easily extract this file using the following steps:\n\nBefore we get started, make sure you know the exact path to the RAR file you wish to extract. You can either use the absolute path (from root) to the file, or the relative path (from the current location).\n\nFor example, in the above screenshot, we have an archive in the current directory. For this file, the relative path would be myData.rar and the absolute path would be /tmp/test123/myData.rar.\n\nAfter you have noted the path to your archive, you can extract its contents using the following command:\n\nReplace archive_name.rar with the path of your RAR file.\n\nIn the above example we can see that we are working in a different directory (test234) and used the absolute path of the archive to extract it into the current working directory.\n\nBy default, unrar preserves the directory structure of the archived files. If you want to extract the files to a specific directory, you can specify the new path as a command line argument:\n\nIn the above example, we can see that the /tmp/test345 directory is empty in the beginning. We use the unrar command to extract data from the archive in the specified directory. After this, we use the ls command once again to check the contents of the /tmp/test345 and confirm whether the file was extracted successfully.\n\nTo view the contents of a RAR file without extracting them, you can use the following command:\n\nThis will list all the files and folders contained within the RAR archive.\n\nThe process of adding files to an existing RAR archive is similar to creating a new archive. You can use the following command to add a file:\n\nReplace file_to_add with the name of the file you wish to add to the archive_name.rar archive.\n\nIf you are working with sensitive data, you can create a password-protected RAR file. To do this, you can use the -p option when creating the archive:\n\nAfter entering this command, you’ll be prompted to enter and verify a password for the archive. Keep in mind that when you type your password, it will not be displayed on the screen.\n\nThe process of opening a password protected archive is similar to opening a simple file. Just use the following command to open the archive and enter your password when prompted:\n\nAfter typing your password, press ‘Enter’. If your archive has more than one file, you will be prompted to enter a password for each file – simply press the ‘a’ key on your keyboard to use the same password for all files.\n\nWhen working with extremely large files you sometimes need to split them into multiple parts. This is useful when you want to copy them over a network or store them in a smaller storage space.\n\nTo split a large RAR file into smaller parts, you can use the following command:\n\nReplace size with the maximum size for each split file (e.g., 10m for 10MB parts).\n\nIn the above example, we can see that the -v10m parameter was used when creating the archive. This made sure that all the archive files were smaller than 10MB. On the other hand, if we had created a single archive, it would have resulted in a much larger file size.\n\nThroughout this guide, we’ve explored the vast capabilities of RAR files within the Linux ecosystem. From creating and extracting archives to advanced operations such as encryption and splitting files. We encourage you to discover new ways to use these utilities and streamline your workflow.\n\nAnd if you’re looking to take your server management to the next level, consider using RunCloud.\n\nRunCloud simplifies server management tasks, saves you time, and lets you focus on what’s truly important – building great applications.\n\nWith RunCloud, you can automate the tedious aspects of server management, ensuring that your Linux servers are running smoothly and efficiently.\n\nStart your journey with RunCloud today and experience the ease of managing servers like never before!"
    },
    {
        "link": "https://howtogeek.com/create-extract-list-rar-files-on-linux",
        "document": "Did you end up with a RAR file that needs extracting, or is a colleague asking for files archived in a RAR format? Though RAR files are rare on Linux, you can do most of the operations such as creating, extracting, and splitting RARs on Linux from your terminal.\n\nIn this article, we'll explore how you can create RAR files and extract content from existing ones, and discuss other ways to deal with them. For demonstration purposes, we're using Ubuntu 22.04 LTS.\n\nTo work with RAR files on Linux, you need two commands known as rar and unrar. Installing them is pretty straightforward. Simply follow your specific Linux distribution's installation command(s).\n\nTo install these command-line utilities on Ubuntu and its derivatives, run:\n\nIf you're using an Arch Linux-based distro, then install them using:\n\nFor all the RHEL-based distros, run:\n\nTo install rar and unrar on openSUSE, the command is:\n\nIf you'd rather build the tools from source, you can download the TAR file from the downloads page of the official website. Once you've installed rar and unrar, move on to creating RAR files and performing other actions on them.\n\nHow to Create RAR Files on Linux\n\nCreating a RAR file requires having one or more files or directories you want to archive. For testing purposes, we're creating some text files and adding a line to them. If you already have the files you want to archive, then you don't need to do this.\n\nCreate the files with this command:\n\nAdd text to them using the echo command:\n\nNow we will add these files to our RAR archive using:\n\nThe \"a\" option is used for adding files or directories to the archive. Then you specify the name of the RAR file you want to create. Lastly, list all the files and directories you want to add to the archive.\n\nIf you'd like to confirm if the RAR file was created, use the ls command to list the contents of the current directory.\n\nHow to Extract RAR Files on Linux\n\nThe rar command lets you create an archive. To extract an existing RAR file, you use the unrar command. The syntax is pretty simple. Let's use unrar to extract files from the archive we created earlier. To do that, run:\n\nThe \"e\" flag tells the system to extract files to the current directory. Then, you input the RAR file name.\n\nHow to Extract RAR Files to a Specific Directory\n\nWhat if you don't want to extract the files to the current directory and instead need them in a different directory? You can easily accomplish that by adding the directory path to the previous command, like this:\n\nRemember that the directory where you want to extract the archive must already exist on your system. Otherwise, the command won't work.\n\nSuppose you have several directories in your archive. If you extract it using the normal method, you can only see the files that were extracted. However, the \"x\" option from the unrar command lets you see the directory structure as well. That is, you can see which file is inside which directory in the archive. Let's see that in action.\n\nAs you can see, the output includes the directories in the RAR archive and the files each folder contains. So if you have directories in your RAR file, extracting archives using the \"x\" option can be more helpful.\n\nHow to List RAR Files on Linux\n\nSo you download a RAR file and want to know its contents without extracting it. That's where listing the files can help you. By adding the \"l\" option to the unrar command, you can list all the files and directories in your RAR file. In our case, we'll run:\n\nWhat's more, you can see the file sizes, permissions, date and time of creation, and the total number of files.\n\nHow to Check the Integrity of RAR Files on Linux\n\nThe unrar command lets you test the files in the archive for errors. If a file looks good, the command displays an \"OK\" status for that. To check the integrity of the files in an archive, use:\n\nIn our case, all files are good to go.\n\nHow to Add Files to an Existing RAR File\n\nIf you already have a RAR file, and you want to add more files to that, you can do that as well. The \"u\" option of the rar command is for that purpose. It updates your archive and lets you add new files. Use the command like this:\n\nYou can confirm the success of the operation by listing the files in the archive.\n\nHow to Repair and Delete Files in a RAR File\n\nYou've seen how to add new files to a RAR file. But how do you repair or delete them? For repairing or deleting, you have the \"r\" and \"d\" options, respectively. To repair a RAR file, run:\n\nThe above command first creates a \"fixed.test.rar\" file. It then scans for data recovery records, reconstructs the RAR file, and finally creates a \"rebuilt.test.rar\" file in the current directory.\n\nDeleting files is simple. Simply specify the name of the files you want to delete from the archive. In our case, we want to delete \"test6.txt\" from the \"test.rar\" file. For that, we use:\n\nYou can see if the file was deleted by listing the archive contents.\n\nHow to Split a RAR File Using rar\n\nAnother cool thing you can do with your RAR files is to split them into several parts. You can also specify the size of each part. Say, we want to split an archive into several 1MB archives. For that, we run:\n\nThe \"a\" option adds new files to the archive. We specify the size of each archive with the \"-v\" option. The naming of the RAR file is important here. After creating the RAR archive, you'll notice that each file is named \"Files.part.rar\", \"Files.part2.rar\", \"Files.part3.rar\", and so on. Finally, add the file and directory names you'd like to include in the archive.\n\nThe last thing we'll cover is how you can make your RAR files more secure by adding a password or locking the file.\n\nTo set a password for your RAR file, run:\n\nIf you try to extract the RAR file now, it will ask you to enter a password.\n\nApart from using a password, you can also prevent someone from modifying the RAR file. Use the \"k\" option to lock the file:\n\nNow, if you try to add or delete files from the archive, you'll receive an error.\n\nAnd that covers most operations you can do on RAR files on Linux. If you'd like to learn more, you can always refer to the rar and unrar command manual pages."
    },
    {
        "link": "https://unix.stackexchange.com/questions/246535/how-to-open-rar-file-in-linux",
        "document": "Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers."
    },
    {
        "link": "https://reddit.com/r/linux4noobs/comments/10sctww/7zip_install",
        "document": "So I’m looking at downloads at the site. I’m using mint and I want to know which one I’m installing?"
    },
    {
        "link": "https://7-zip.org/faq.html",
        "document": "Can I use 7-Zip in a commercial organization? Yes, 7-Zip is free software. You can use it on any computer. You don't need to register or pay for 7-Zip. How can I set file associations to 7-Zip in Windows 7 and Windows Vista? You must run 7-Zip File Manager in administrator mode. Right-click the icon of 7-Zip File Manager, and then click Run as administrator. Then you can change file associations and some other options. Why 7z archives created by new version of 7-Zip can be larger than archives created by old version of 7-Zip? New versions of 7-Zip (starting from version 15.06) use another file sorting order by default for solid 7z archives. Old version of 7-Zip (before version 15.06) used file sorting \"by type\" (\"by extension\"). New version of 7-Zip supports two sorting orders:\n• sorting by type, if 'qs' is specified in Parameters field in \"Add to archive\" window, (or -mqs switch for command line version). You can get big difference in compression ratio for different sorting methods, if dictionary size is smaller than total size of files. If there are similar files in different folders, the sorting \"by type\" can provide better compression ratio in some cases. Note that sorting \"by type\" has some drawbacks. For example, NTFS volumes use sorting order \"by name\", so if an archive uses another sorting, then the speed of some operations for files with unusual order can fall on HDD devices (HDDs have low speed for \"seek\" operations). You can increase compression ratio with the following methods:\n• Increase dictionary size. It can help when 'qs' is not used.\n• Specify 'qs' in Parameters field (or use -mqs switch for command line version). If you think that unusual file order is not problem for you, and if better compression ratio with small dictionary is more important for you, use 'qs' mode. Why can't 7-Zip open some ZIP archives? In 99% of these cases it means that the archive contains incorrect headers. Other ZIP programs can open some archives with incorrect headers, since these programs just ignore errors. If you have such archive, please don't call the 7-Zip developers about it. Instead try to find the program that was used to create the archive and inform the developers of that program that their software is not ZIP-compatible. There are also some ZIP archives that were encoded with methods unsupported by 7-Zip, for example, WAVPack (WinZip). Why can't 7-Zip open some RAR archives? 7-Zip 9.20 supports RAR 2/3/4 formats only and doesn't support RAR5 archives. But latest versions of 7-Zip supports RAR5 archives. Why does drag-and-drop archive extraction from 7-Zip to Explorer use temp files? 7-Zip doesn't know folder path of drop target. Only Windows Explorer knows exact drop target. And Windows Explorer needs files (drag source) as decompressed files on disk. So 7-Zip extracts files from archive to temp folder and then 7-Zip notifies Windows Explorer about paths of these temp files. Then Windows Explorer copies these files to drop target folder. To avoid temp file usage, you can use Extract command of 7-Zip or drag-and-drop from 7-Zip to 7-Zip. Why doesn't the command line version add files without extensions to an archive? You're probably using a *.* wildcard. 7-Zip doesn't use the operating system's wildcard mask parser, and consequently treats *.* as any file that has an extension. To process all files you must use the * wildcard instead or omit the wildcard altogether. In most cases you don't need -r switch. 7-Zip can compress subfolders even without -r switch. searches and compresses \"Program Files\" in all subfolders of C:\\ (for example, in \"C:\\WINDOWS\"). If you need to compress only files with some extension, you can use -r switch: compresses all *.txt files from folder c:\\dir\\ and all it's subfolders. How can I store full path of file in archive? 7-Zip stores only relative paths of files (without drive letter prefix). You can change current folder to folder that is common for all files that you want to compress and then you can use relative paths: Why can't 7-Zip use big dictionary in 32-bit Windows? 32-bit Windows allocates only 2 GB of virtual space per one application. Also that block of 2 GB can be fragmented (for example, by some DLL file), so 7-Zip can't allocate one big contiguous block of virtual space. There are no such limitations in 64-bit Windows. So you can use any dictionary in Windows x64, if you have required amount of physical RAM. How can I install 7-Zip in silent mode? For exe installer: Use the \"/S\" parameter to do a silent installation and the /D=\"C:\\Program Files\\7-Zip\" parameter to specify the \"output directory\". These options are case-sensitive. For msi installer: Use the /q INSTALLDIR=\"C:\\Program Files\\7-Zip\" parameters. There are some possible cases when archive is corrupted:\n• You can open archive and you can see the list of files, but when you press Extract or Test command, there are some errors: Data Error or CRC Error.\n• When you open archive, you get message \"Can not open file 'a.7z' as archive\" It's possible to recover some data. Read about recovering procedure: \n\n\n\n Why are there linking errors when I compile 7-Zip or LZMA SDK with Visual C++ 6.0? To compile sources you will need Visual C++ 6.0 or a later version. Some files also require a new Platform SDK from microsoft.com: If you are using MSVC, specify the SDK directories at the top of the \"Include files\" and \"Library files\" directory lists. These can be found under \"Tools / Options / Directories\". The latest Platform SDK is not compatible with MSVC6. So you must use Windows Server 2003 PSDK (February 2003) with MSVC6. Can I use the EXE or DLL files from 7-Zip in a Commercial Application? Yes, but you are required to specify in your documentation (1) that you used parts of the 7-Zip program, (2) that 7-Zip is licensed under the GNU LGPL license and (3) you must give a link to www.7-zip.org, where the source code can be found. How can I add support for 7z archives to my application? One way is to use the 7z.dll or 7za.dll (available from sf.net for download). The 7za.dll works via COM interfaces. It, however, doesn't use standard COM interfaces for creating objects. You can find a small example in \"CPP\\7zip\\UI\\Client7z\" folder in the source code. A full example is 7-Zip itself, since 7-Zip works via this dll also. There are other applications that use 7za.dll such as WinRAR, PowerArchiver and others. The other way is to call the command line version: 7za.exe. Can I use the source code of 7-Zip in a commercial application? Since 7-Zip is licensed under the GNU LGPL you must follow the rules of that license. In brief, it means that any LGPL'ed code must remain licensed under the LGPL. For instance, you can change the code from 7-Zip or write a wrapper for some code from 7-Zip and compile it into a DLL; but, the source code of that DLL (including your modifications / additions / wrapper) must be licensed under the LGPL or GPL. Any other code in your application can be licensed as you wish. This scheme allows users and developers to change LGPL'ed code and recompile that DLL. That is the idea of free software. Read more here: https://www.gnu.org/. You can also read about the LZMA SDK, which is available under a more liberal license."
    },
    {
        "link": "https://tutorialspoint.com/install-and-use-7zip-on-linux",
        "document": "Install and use 7zip on Linux\n\nLinux is a popular open-source operating system that offers many advantages, such as being free, customizable, and secure. One of the challenges that Linux users face is finding the right tools for certain tasks, such as compressing and decompressing files. Fortunately, 7zip is a powerful and versatile compression tool that can help us with this task.\n\nIn this tutorial, we will walk through the process of installing and using 7zip in Linux. We will cover different ways to install 7zip, including via the command line and package manager, and provide step-by-step instructions with screenshots. We will also explain the basic usage of 7zip, such as how to compress and extract files and explore some of the advanced features and options available. By the end of this article, you will have a better understanding of how to install and use 7zip on Linux and be able to take advantage of its powerful capabilities.\n\nInstall and Use 7zip on Linux\n\n7zip is a program that lets you compress and decompress files with ease. It supports a plethora of file formats like 7z, ZIP, RAR, and more. Some of the unique features of 7zip include −\n• None Making files smaller so they take up less space on your computer\n• None Splitting up large files into smaller ones\n• None Making self-extracting archives that can be opened without any special software\n\nLet’s see how we can install this on our Linux system.\n\nThere are different ways to install 7zip on Linux, and in this article, we will show you two methods: using the command line and using the package manager.\n\nTo install 7zip using the command line, we will need to use the terminal. If you are using a Debian-based Linux distribution, such as Ubuntu or Debian, you can install 7zip using the apt-get package manager. We simply need to open up a terminal window and enter the following command:\n\nFor Fedora, CentOS, and other RPM-based distributions, use the following command:\n\nFor Arch Linux and other Arch-based distributions, use the following command:\n\nThe above commands will download and install the 7zip package on our system.\n\nIf you prefer to use the package manager, you can open it from the applications menu. Look for the software center or package manager and search for \"7zip\". Then, click on the install button to begin the installation process.\n\nNow that we’ve installed 7zip on your Linux system, let’s move to the next section of the article to understand how to use 7zip to compress and extract files.\n\nTo compress a file or a directory using 7zip, we use the ‘a’ option with the 7zip command followed by the name of the compressed file and the file to be compressed.\n\nConsider the below command to compress a file using 7zip −\n\nReplace \"compressed_file.7z\" with the name you want to give to the compressed file and \"file_to_compress\" with the name of the file or directory you want to compress.\n\nFor example, if we want to compress a directory named \"Documents\" into a file named \"documents.7z\", we can use the following command −\n\nWhen you execute the command shown above, a new file named \"documents.7z\" will be generated. This file will contain a compressed version of the \"Documents\" directory.\n\nIf you want to compress multiple files or directories with a single command, you can separate them with spaces −\n\nAfter executing the command as demonstrated above, a new file called \"compressed_files.7z\" will be created, which contains a compressed version of the files \"file1.txt\", \"file2.txt\", \"directory1/\" and \"directory2/\".\n\nTo extract a file or a directory using 7zip, we use the ‘x’ option with the 7zip command followed by the name of the file to be extracted.\n\nConsider the below command to extract a file using 7zip −\n\nReplace \"compressed_file.7z\" with the name of the compressed file you want to extract. For example, if we want to extract the \"documents.7z\" file we created earlier, we can use the following command −\n\nWhen you run the command shown above, the contents of the \"documents.7z\" file in the current directory will be extracted.\n\nIf you want to extract the contents of a compressed file to a specific directory, you can use the \"-o\" option followed by the path to the directory −\n\nExecuting the command shown above will extract the contents of the \"compressed_file.7z\" file in the \"Downloads\" folder.\n\nIn addition to the basic features of compression and extraction, 7zip also offers some advanced options to enhance your experience and provide security. For example:\n\nYou can secure your compressed files by using encryption. This feature allows you to set a password to protect your files from unauthorized access.\n\nTo encrypt your files, use the -p option followed by a password when compressing your files. For example, to compress the \"Documents\" directory with a password of \"mypassword\", run the following command −\n\nWhen you try to extract the encrypted zip file, 7zip will ask you for a password, and will open the file if the password is entered correctly.\n\nSometimes, you may need to split a large file into smaller parts for easier sharing or storage. With 7zip, you can split your archives into multiple parts based on the desired size.\n\nTo split your archives, use the -v option followed by the desired size in bytes. For example, to split the \"Documents\" directory into 10MB parts, run the following command −\n\nTo extract the split files, extract the first part of the archive as usual, and 7zip will automatically extract the rest of the parts.\n\n7zip also offers various compression levels to choose from. Depending on your needs, you can choose the level of compression that suits you best. Higher compression levels will take longer to compress and decompress but will result in smaller file sizes.\n\nTo choose a custom compression level, use the -mx option followed by a number from 1 to 9. For example, to use the highest compression level, run the following command −\n\nLower compression levels can be faster to compress and decompress, but will result in larger file sizes.\n\nIn this article, we have learned about 7zip, a powerful compression tool that can be installed and used on Linux. We have covered different ways to install 7zip, such as via the command line and package manager, and have provided step-by-step instructions. We have also explained the basic usage of 7zip, such as how to compress and extract files, and explored some of the advanced features and options available, such as encryption and creating self-extracting archives."
    },
    {
        "link": "https://itsfoss.com/use-7zip-ubuntu-linux",
        "document": "7Zip (properly written as 7-Zip) is an archive format hugely popular among Windows users. A 7Zip archive file usually ends in .7z extension. It’s mostly an open source software, barring a few parts of the code that deals with unRAR.\n\nThe 7Zip support is not enabled by default in most Linux distributions. If you try to extract it, you may see this error:\n\nDon’t worry, you can easily install 7zip in Ubuntu or other Linux distributions.\n\nThe one problem you’ll notice if you try to use the apt-get install command, you’ll see that there are no installation candidates that start with 7zip. It’s because the 7Zip package in Linux is named p7zip, starting with the letter ‘p’ instead of the expected number ‘7’.\n\nLet’s see how to install 7zip in Ubuntu and (possibly) other Linux distributions.\n\nThe first thing you need is to install the p7zip package. You’ll find three 7zip packages in Ubuntu:\n\nThe difference between p7zip and p7zip-full is that p7zip is a lighter version providing support only for .7z while the full version provides support for more 7z compression algorithms (for audio files etc.).\n\nThe p7zip-rar package provides support for RAR files along with 7z.\n\nInstalling p7zip-full should be sufficient in most cases, but you may also install p7zip-rar for additional support for the RAR file.\n\np7zip packages are in the universe repository in Ubuntu so make sure that you have enabled it using this command:\n\nUse the following command to install 7zip support in Ubuntu and Debian based distributions.\n\nThat’s good. Now you have 7zip archive support in your system.\n\nWith 7Zip installed, you can either use the GUI or the command line to extract 7zip files in Linux.\n\nIn the terminal, you can extract a .7z archive file using this command:\n\nIn the GUI, you can extract a .7z file as you extract any other compressed file. You right-click on the file and proceed to extract it.\n\nYou can also use the command line, if it suits you, for this purpose:\n\nBy default, the archived file will have .7z extension. You can compress the file in zip format by specifying the extension (.zip) of the output file.\n\nYou can compress a file in 7zip archive format graphically. Right-click on the file/directory, and select Compress. You should see several types of archive format options. Choose .7z for 7zip.\n\nThat’s it. See how easy it is to use 7zip in Linux. I hope you liked this quick tip.\n\nSimilarly, you can use RAR files in Linux.\n\nIf you have questions or suggestions, feel free to let me know in the comment sections."
    },
    {
        "link": "https://putorius.net/7zip-21-0-provides-native-linux-support.html",
        "document": "7zip is a wildly popular Windows program that is used to create archives. By default it uses 7z format which it claims is 30-70% better than the normal zip format. It also claims to compress to the regular zip format 2-10% more effectively than other zip compatible programs. It supports a wide variety of archive formats including (but not limited to) zip, gzip, bzip2, tar, and rar. Linux has had p7zip for a long time. However, this is the first time 7Zip developers have provided native Linux support.\n\nLinux has has p7zip for some time now. The p7zip is a port of the Windows 7zip package over to Linux/Unix. For the average user there is no difference. The p7zip package is a direct port from 7zip.\n\nWhy Bother Using 7zip if p7zip is available?\n\nThe main reason to use the new native Linux version of 7Zip is updates. The p7zip package that comes with my Fedora installation is version 16.02 from 2016. However, the newly installed 7zip version is 21.01 (alpha) which was released just a few days ago.\n\nFirst, we need to download the tar.zx package from the 7Zip website.\n\nNext we extract the tar archive. Here I am extracting it to since that directory is in my PATH.\n\nThat's it, you are now ready to use 7Zip.\n\nIf you have previously has the p7zip package installed you now have two similar commands. The p7zip package provides the command. While the new native version of 7Zip provides the command.\n\n7Zip comes with a great deal of options. This full suite of options are beyond the scope of this article. Here we will cover basic archive creation and extraction.\n\nTo create a 7z archive, we will call the newly install 7zz utiltiy and pass the (add files to archive) command. We will then supply the name of the archive, and the files we want added.\n\nIn the above example we are adding all the files in the directory to the archive.\n\nExtracting Files from an Archive with Native Linux 7Zip (7zz)\n\nExtracting an archive is very similar. Here we are using the (extract) command.\n\nThat's it! We have now installed native 7Zip and used it to create and extract our first archive.\n• How to Create an Encrypted and Password Protected Tar or Zip Archive"
    }
]