[
    {
        "link": "https://ant.design/components/dropdown",
        "document": ""
    },
    {
        "link": "https://4x.ant.design/components/dropdown",
        "document": "When there are more than a few options to choose from, you can wrap them in a . By hovering or clicking on the trigger, a dropdown menu will appear, which allows you to choose an option and execute the relevant action. After version 4.24.0, we provide a simpler usage <Dropdown menu={{ items: [...] }} /> with better performance and potential of writing simpler code style in your applications. Meanwhile, we deprecated the old usage in browser console, we will remove it in antd 5.0.\n\nThe default trigger mode is , you can change it to . A button is on the left, and a related functional menu is on the right. You can set the icon property to modify the icon of right. A loading indicator can be added to a button by setting the property on the . Configure the property in to enable selectable ability. You could display an arrow. By specifying prop with , the arrow will point to the center of the target element. An event will be triggered when you click menu items, in which you can make different operations according to item's key. Customize the dropdown menu via . If you don't need the Menu content, use the Popover component directly. The default trigger mode is , you can change it to . type MenuProps Dropdown React items MenuProps label key label key label key App React Right Click on here App The way of hiding menu. The default is to close the menu when you click on menu items, this feature can be turned off. DownOutlined type MenuProps Dropdown Space React useState App React open setOpen handleMenuClick MenuProps e e key flag boolean flag items MenuProps label 'Clicking me will not close the menu.' key label 'Clicking me will not close the menu also.' key label 'Clicking me will close the menu.' key Hover me App\n\nWhether the dropdown arrow should be visible Whether to adjust dropdown placement automatically when dropdown is off screen Whether the dropdown menu is disabled To set the container of the dropdown menu. The default is to create a div element in body, but you can reset it to the scrolling area and make a relative reposition. Example on CodePen The class name of the dropdown root element The style of the dropdown root element The trigger mode which executes the dropdown action. Note that hover can't be used on touchscreens Whether the dropdown menu is currently open. Use under 4.23.0 (why?) Called when the open state is changed. Not trigger when hidden by click item. Use under 4.23.0 (why?) Same props from Dropdown. And includes additional props: Icon (appears on the right) Size of the button, the same as Button Type of the button, the same as Button The same as Button: called when you click the button on the left"
    },
    {
        "link": "https://4x-ant-design.antgroup.com/components/dropdown",
        "document": "When there are more than a few options to choose from, you can wrap them in a . By hovering or clicking on the trigger, a dropdown menu will appear, which allows you to choose an option and execute the relevant action. After version 4.24.0, we provide a simpler usage <Dropdown menu={{ items: [...] }} /> with better performance and potential of writing simpler code style in your applications. Meanwhile, we deprecated the old usage in browser console, we will remove it in antd 5.0.\n\nThe default trigger mode is , you can change it to . A button is on the left, and a related functional menu is on the right. You can set the icon property to modify the icon of right. A loading indicator can be added to a button by setting the property on the . Configure the property in to enable selectable ability. You could display an arrow. By specifying prop with , the arrow will point to the center of the target element. An event will be triggered when you click menu items, in which you can make different operations according to item's key. Customize the dropdown menu via . If you don't need the Menu content, use the Popover component directly. The default trigger mode is , you can change it to . type MenuProps Dropdown React items MenuProps label key label key label key App React Right Click on here App The way of hiding menu. The default is to close the menu when you click on menu items, this feature can be turned off. DownOutlined type MenuProps Dropdown Space React useState App React open setOpen handleMenuClick MenuProps e e key flag boolean flag items MenuProps label 'Clicking me will not close the menu.' key label 'Clicking me will not close the menu also.' key label 'Clicking me will close the menu.' key Hover me App\n\nWhether the dropdown arrow should be visible Whether to adjust dropdown placement automatically when dropdown is off screen Whether the dropdown menu is disabled To set the container of the dropdown menu. The default is to create a div element in body, but you can reset it to the scrolling area and make a relative reposition. Example on CodePen The class name of the dropdown root element The style of the dropdown root element The trigger mode which executes the dropdown action. Note that hover can't be used on touchscreens Whether the dropdown menu is currently open. Use under 4.23.0 (why?) Called when the open state is changed. Not trigger when hidden by click item. Use under 4.23.0 (why?) Same props from Dropdown. And includes additional props: Icon (appears on the right) Size of the button, the same as Button Type of the button, the same as Button The same as Button: called when you click the button on the left"
    },
    {
        "link": "https://ant.design/components/select",
        "document": "After version 5.11.0, we provide a simpler usage <Select options={[...]} /> with better performance and potential of writing simpler code style in your applications. Meanwhile, we deprecated the old usage in browser console, we will remove it in antd 6.0.\n\nNote, if you find that the drop-down menu scrolls with the page, or you need to trigger Select in other popup layers, please try to use getPopupContainer={triggerNode => triggerNode.parentElement} to fix the drop-down popup rendering node in the parent element of the trigger .\n\nWhy sometime search will show 2 same option when in mode?\n\nIt's caused by option with different and . You can use to change filter logic instead.\n\nWhen I click elements in dropdownRender, the select dropdown will not be closed?\n\nYou can control it by prop: codesandbox.\n\nSelect will close when it lose focus. You can prevent event to handle this:\n\nWhy sometime customize Option cause scroll break?\n\nVirtual scroll internal set item height as . You need to adjust when your option height is less and config list container height:\n\nNote: and are internal props. Please only modify when necessary.\n\nSelect only create a11y auxiliary node when operating on. Please open Select and retry. For & miss warning, please add related prop to Select with your own requirement.\n\nDefault virtual scrolling will create a mock element to simulate an accessible binding. If a screen reader needs to fully access the entire list, you can set to disable virtual scrolling and the accessibility option will be bound to the actual element."
    },
    {
        "link": "https://stackoverflow.com/questions/63645936/adding-element-to-antd-dropdown-overlay-property-results-in-react-single-child-e",
        "document": "When attempting to populate the overlay property in the antd dropdown, the following error always occurs:\n\nIt does so seemingly regardless of what I populate it with. A single or produces the same error. What's going on here?"
    },
    {
        "link": "https://stackoverflow.com/questions/52021381/how-to-change-content-based-on-menu-item-click-in-antd-react-ui-library",
        "document": "I am following AntD Menu tutorial from here and it shows how to use this component. But I am failed to understand that how to change my Content when I click on different menu option. Tried searching a lot but did not find any useful help.\n\nCan you pls help."
    },
    {
        "link": "https://stackoverflow.com/questions/75504233/ant-design-correct-type-of-menu-onclick-event-parameter",
        "document": "I am trying to use a navigation component from Antd (https://ant.design/components/menu), but it's giving me this error: Parameter 'e' implicitly has an 'any' type .\n\nI have tried doing but then the error shifts to : Property 'key' does not exist on type 'MouseEvent<HTMLInputElement, MouseEvent>' .\n\nFollowing is my App.tsx:\n\nI am new to this and have already spent many hours trying to fix this, any help is highly appreciated! Thank you!"
    },
    {
        "link": "https://ant.design/components/menu",
        "document": "Navigation is an important part of any website, as a good navigation setup allows users to move around the site quickly and efficiently. Ant Design offers two navigation options: top and side. Top navigation provides all the categories and functions of the website. Side navigation provides the multi-level structure of the website.\n\nDefine as to make as group:\n\nDivider line in between menu items, only used in vertical popup Menu or Dropdown Menu. Need define the as ï¼š\n\nWhy will Menu's children be rendered twice?\n\nMenu collects structure info with twice-render to support HOC usage. Merging into one render may cause the logic to become much more complex. Contributions to help improve the collection logic are welcomed.\n\nWhy Menu do not responsive collapse in Flex layout?\n\nMenu will render fully item in flex layout and then collapse it. You need tell flex not consider Menu width to enable responsive (online demo):"
    },
    {
        "link": "https://ant.design/components/select",
        "document": "After version 5.11.0, we provide a simpler usage <Select options={[...]} /> with better performance and potential of writing simpler code style in your applications. Meanwhile, we deprecated the old usage in browser console, we will remove it in antd 6.0.\n\nNote, if you find that the drop-down menu scrolls with the page, or you need to trigger Select in other popup layers, please try to use getPopupContainer={triggerNode => triggerNode.parentElement} to fix the drop-down popup rendering node in the parent element of the trigger .\n\nWhy sometime search will show 2 same option when in mode?\n\nIt's caused by option with different and . You can use to change filter logic instead.\n\nWhen I click elements in dropdownRender, the select dropdown will not be closed?\n\nYou can control it by prop: codesandbox.\n\nSelect will close when it lose focus. You can prevent event to handle this:\n\nWhy sometime customize Option cause scroll break?\n\nVirtual scroll internal set item height as . You need to adjust when your option height is less and config list container height:\n\nNote: and are internal props. Please only modify when necessary.\n\nSelect only create a11y auxiliary node when operating on. Please open Select and retry. For & miss warning, please add related prop to Select with your own requirement.\n\nDefault virtual scrolling will create a mock element to simulate an accessible binding. If a screen reader needs to fully access the entire list, you can set to disable virtual scrolling and the accessibility option will be bound to the actual element."
    },
    {
        "link": "https://geeksforgeeks.org/reactjs-ui-ant-design-menu-component",
        "document": "Ant Design Library has this component pre-built, and it is very easy to integrate as well. Menu Component is used to display a versatile menu for navigation purposes. We can use the following approach in ReactJS to use the Ant Design Menu Component.\nâ€¢ defaultOpenKeys: It is used to denote the array with the keys of the default opened sub-menus.\nâ€¢ defaultSelectedKeys: It is used to denote the array with the keys of default selected menu items.\nâ€¢ expandIcon: It is used to pass the custom expand icon of the submenu.\nâ€¢ forceSubMenuRender: It is used to force the render submenu into DOM before it becomes visible.\nâ€¢ inlineCollapsed: It is used to specify the collapsed status when the menu is in an inline mode.\nâ€¢ inlineIndent: It is used to denote the indent of inline menu items on each level in pixels.\nâ€¢ mode: It is used to denote the type of menu.\nâ€¢ multiple: It is used to allow the selection of multiple items.\nâ€¢ openKeys: It is used to denote the array with the keys of the currently opened sub-menus.\nâ€¢ overflowedIndicator: It is used to pass the customized icon when the menu is collapsed.\nâ€¢ selectable: It is used to allow selecting menu items.\nâ€¢ selectedKeys: It is used to denote the array with the keys of currently selected menu items.\nâ€¢ style: It is used to define the style of the root node.\nâ€¢ subMenuCloseDelay: It denotes the delay time in seconds to hide the submenu when the mouse leaves.\nâ€¢ subMenuOpenDelay: It denotes the delay time in seconds to show the submenu when the mouse enters.\nâ€¢ theme: It is used to define the color theme of the menu.\nâ€¢ triggerSubMenuAction: It is a callback function that can trigger submenu open/close.\nâ€¢ onClick: It is a callback function that is called when a menu item is clicked.\nâ€¢ onDeselect: It is a callback function that is called when a menu item is deselected.\nâ€¢ onOpenChange: It is a callback function that is called when sub-menus are opened or closed.\nâ€¢ onSelect: It is a callback function that is called when a menu item is selected.\nâ€¢ danger: It is used to display the danger style.\nâ€¢ disabled: It is used to indicate whether the menu item is disabled or not.\nâ€¢ icon: It is used to pass the icon of the menu item.\nâ€¢ key: It is used to denote the unique ID of the menu item.\nâ€¢ title: It is used to set the display title for the collapsed item.\nâ€¢ children: It is used to denote the sub-menus or sub-menu items.\nâ€¢ disabled: It is used to indicate whether the sub-menu is disabled or not.\nâ€¢ icon: It is used to pass the icon of the sub-menu.\nâ€¢ key: It is used to denote the unique ID of the sub-menu.\nâ€¢ popupClassName: It is used to denote the sub-menu class name.\nâ€¢ popupOffset: It is used to denote the sub-menu offset.\nâ€¢ title: It is used to denote the title of the sub-menu.\nâ€¢ onTitleClick: It is a callback function that is triggered when the sub-menu title is clicked.\nâ€¢ children: It is used to denote the Sub-menu items.\nâ€¢ title: It is used to denote the title of the group.\n\nMenu.Divider: It is used as a divider line in between menu items. This component is only used in vertical popup Menu or Dropdown Menu.\nâ€¢ Step 1: Create a React application using the following command:\nâ€¢ Step 2: After creating your project folder i.e. foldername, move to it using the following command:\nâ€¢ Step 3: After creating the ReactJS application, Install the required module using the following command:\n\nProject Structure: It will look like the following.\n\nExample: Now write down the following code in the App.js file. Here, App is our default component where we have written our code.\n\nStep to Run Application: Run the application using the following command from the root directory of the project:\n\nOutput: Now open your browser and go to http://localhost:3000/, you will see the following output:"
    }
]